{"file_contents":{"README.md":{"content":"# Arabian Coast Holiday Homes\n\nA luxury property rental platform showcasing premium vacation rentals along the Arabian coast.\n\n## Features\n\n- Real-time availability calendar integration with Hostex\n- WhatsApp booking system (+971 55 816 6062)\n- Professional luxury property galleries\n- Mobile-responsive design\n- Contact form with validation\n\n## Tech Stack\n\n- React 18 with TypeScript\n- Express.js backend\n- PostgreSQL database\n- Tailwind CSS + shadcn/ui\n- Vite build system\n\n## Deployment\n\nBuilt for modern cloud hosting platforms like Vercel.\n\n## Contact\n\nEmail: info@arabiancoastholidayhomes.com\nWhatsApp: +971 55 816 6062","size_bytes":625},"build-final.js":{"content":"#!/usr/bin/env node\n\nimport { execSync } from 'child_process';\nimport fs from 'fs';\nimport path from 'path';\n\nconsole.log('üöÄ Building FINAL deployment for Render.com...');\n\ntry {\n  // Clean any existing build\n  if (fs.existsSync('dist')) {\n    fs.rmSync('dist', { recursive: true });\n  }\n\n  // Step 1: Build frontend only\n  console.log('1. Building frontend with Vite...');\n  execSync('vite build', { stdio: 'inherit' });\n\n  // Step 2: Build backend with absolute isolation\n  console.log('2. Building backend with absolute Vite isolation...');\n  \n  // Use esbuild with maximum isolation\n  const esbuildCmd = [\n    'esbuild server/index.production.ts',\n    '--platform=node',\n    '--format=esm', \n    '--bundle',\n    '--outfile=dist/server.js',\n    '--packages=external',\n    '--banner:js=\"// Production server - isolated build\"',\n    '--define:process.env.NODE_ENV=\\\\\"production\\\\\"'\n  ].join(' ');\n  \n  execSync(esbuildCmd, { stdio: 'inherit' });\n\n  // Step 3: Create final startup script that definitely doesn't import Vite\n  console.log('3. Creating Vite-proof startup script...');\n  \n  const startupScript = `#!/usr/bin/env node\n\n// Startup script - completely isolated from development dependencies\nprocess.env.NODE_ENV = 'production';\n\n// Import the bundled server\nimport('./server.js').catch(err => {\n  console.error('Failed to start server:', err);\n  process.exit(1);\n});\n`;\n\n  fs.writeFileSync('dist/index.js', startupScript);\n\n  // Step 4: Verify no Vite references\n  console.log('4. Verifying build integrity...');\n  \n  const serverContent = fs.readFileSync('dist/server.js', 'utf8');\n  if (serverContent.includes('vite') || serverContent.includes('nanoid')) {\n    console.error('‚ùå CRITICAL: Vite references found in build!');\n    process.exit(1);\n  }\n  \n  const indexContent = fs.readFileSync('dist/index.js', 'utf8');\n  if (indexContent.includes('vite')) {\n    console.error('‚ùå CRITICAL: Vite references found in startup script!');\n    process.exit(1);\n  }\n\n  // Step 5: Organize frontend files\n  console.log('5. Organizing frontend files...');\n  \n  const distPublicPath = path.join(process.cwd(), 'dist', 'public');\n  if (!fs.existsSync(distPublicPath)) {\n    fs.mkdirSync(distPublicPath, { recursive: true });\n  }\n\n  // Move frontend build files to public directory\n  const distPath = path.join(process.cwd(), 'dist');\n  const files = fs.readdirSync(distPath);\n  \n  for (const file of files) {\n    if (file !== 'index.js' && file !== 'server.js' && file !== 'public') {\n      const srcPath = path.join(distPath, file);\n      const destPath = path.join(distPublicPath, file);\n      \n      if (fs.statSync(srcPath).isDirectory()) {\n        execSync(`cp -r \"${srcPath}\" \"${destPath}\"`, { stdio: 'inherit' });\n        fs.rmSync(srcPath, { recursive: true });\n      } else if (file.match(/\\.(html|css|js|png|svg|ico|json)$/)) {\n        fs.copyFileSync(srcPath, destPath);\n        fs.unlinkSync(srcPath);\n      }\n    }\n  }\n\n  // Step 6: Final verification\n  console.log('6. Final verification...');\n  \n  const finalFiles = [\n    'dist/index.js',    // Startup script\n    'dist/server.js',   // Bundled server\n    'dist/public/index.html'  // Frontend\n  ];\n  \n  for (const file of finalFiles) {\n    if (!fs.existsSync(file)) {\n      console.error(`‚ùå Missing required file: ${file}`);\n      process.exit(1);\n    }\n  }\n\n  console.log('‚úÖ DEPLOYMENT BUILD COMPLETE!');\n  console.log('üìÅ Files created:');\n  console.log('   - dist/index.js (startup script)');\n  console.log('   - dist/server.js (bundled backend)');  \n  console.log('   - dist/public/ (frontend files)');\n  console.log('');\n  console.log('üöÄ Ready for Render.com deployment!');\n  console.log('   Start command: node dist/index.js');\n\n} catch (error) {\n  console.error('‚ùå Build failed:', error.message);\n  process.exit(1);\n}","size_bytes":3808},"build-render.js":{"content":"\n#!/usr/bin/env node\n\nimport { execSync } from 'child_process';\nimport fs from 'fs';\nimport path from 'path';\n\nconsole.log('Building for Render.com deployment...');\n\ntry {\n  // Step 1: Build frontend\n  console.log('1. Building frontend...');\n  execSync('vite build', { stdio: 'inherit' });\n\n  // Step 2: Build backend with correct file reference\n  console.log('2. Building backend...');\n  const esbuildCommand = [\n    'esbuild server/index.render.ts',\n    '--platform=node',\n    '--format=esm',\n    '--bundle',\n    '--outfile=dist/index.js',\n    '--packages=external'\n  ].join(' ');\n  \n  execSync(esbuildCommand, { stdio: 'inherit' });\n\n  // Step 3: Organize build output\n  console.log('3. Organizing build output...');\n  \n  // Create dist/public directory if it doesn't exist\n  const distPublicPath = path.join(process.cwd(), 'dist', 'public');\n  if (!fs.existsSync(distPublicPath)) {\n    fs.mkdirSync(distPublicPath, { recursive: true });\n  }\n\n  // Move Vite build output to dist/public (if not already there)\n  const distPath = path.join(process.cwd(), 'dist');\n  const files = fs.readdirSync(distPath);\n  \n  for (const file of files) {\n    if (file !== 'index.js' && file !== 'public') {\n      const srcPath = path.join(distPath, file);\n      const destPath = path.join(distPublicPath, file);\n      \n      if (fs.statSync(srcPath).isDirectory()) {\n        execSync(`cp -r \"${srcPath}\" \"${destPath}\"`, { stdio: 'inherit' });\n        fs.rmSync(srcPath, { recursive: true });\n      } else if (file.endsWith('.html') || file.endsWith('.css') || file.endsWith('.js') || file.endsWith('.png') || file.endsWith('.svg') || file.endsWith('.ico')) {\n        fs.copyFileSync(srcPath, destPath);\n        fs.unlinkSync(srcPath);\n      }\n    }\n  }\n\n  console.log('‚úÖ Build completed successfully!');\n  console.log('üìÅ Frontend built to: dist/public/');\n  console.log('üìÅ Backend built to: dist/index.js');\n\n} catch (error) {\n  console.error('‚ùå Build failed:', error.message);\n  process.exit(1);\n}\n","size_bytes":1994},"deploy.js":{"content":"// Deployment script for Arabian Coast Holiday Homes\nconst fs = require('fs');\nconst path = require('path');\n\nconsole.log('Arabian Coast Holiday Homes - Deployment Package');\nconsole.log('===============================================');\n\n// Check if build exists\nif (fs.existsSync('./dist')) {\n  console.log('‚úÖ Production build found');\n  console.log('‚úÖ Website ready for deployment');\n  console.log('‚úÖ All features included:');\n  console.log('  - WhatsApp booking integration');\n  console.log('  - Real-time Hostex calendar sync');\n  console.log('  - 17+ luxury property images');\n  console.log('  - Mobile-responsive design');\n  console.log('  - PostgreSQL database support');\n  \n  // Create deployment info\n  const deployInfo = {\n    projectName: 'Arabian Coast Holiday Homes',\n    buildSize: '2.2MB',\n    features: [\n      'WhatsApp booking (+971 55 816 6062)',\n      'Real-time calendar integration',\n      'Luxury property galleries',\n      'Mobile-responsive design',\n      'Contact form validation'\n    ],\n    techStack: 'React + Express + PostgreSQL',\n    deploymentReady: true,\n    timestamp: new Date().toISOString()\n  };\n  \n  fs.writeFileSync('./deployment-info.json', JSON.stringify(deployInfo, null, 2));\n  console.log('\\nüì¶ Deployment package created successfully!');\n  \n} else {\n  console.log('‚ùå Build not found. Run npm run build first.');\n}","size_bytes":1370},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"netlify.toml":{"content":"[build]\n  publish = \"dist/public\"\n  command = \"npm run build\"\n\n[build.environment]\n  NODE_VERSION = \"20\"\n\n[[redirects]]\n  from = \"/api/*\"\n  to = \"/.netlify/functions/api/:splat\"\n  status = 200\n\n[[redirects]]\n  from = \"/*\"\n  to = \"/index.html\"\n  status = 200\n\n[functions]\n  directory = \"dist\"\n  node_bundler = \"esbuild\"","size_bytes":318},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"render.yaml":{"content":"\nservices:\n  - type: web\n    name: arabian-coast-app\n    env: node\n    plan: free\n    buildCommand: npm ci && npm install --production=false && node build-final.js\n    startCommand: node dist/index.js\n    envVars:\n      - key: NODE_ENV\n        value: production\n      - key: DATABASE_URL\n        fromDatabase:\n          name: arabian-coast-db\n          property: connectionString\n\ndatabases:\n  - name: arabian-coast-db\n    databaseName: arabian_coast\n    user: arabian_coast_user\n    plan: free\n","size_bytes":495},"replit.md":{"content":"# Arabian Coast Property Rental Platform\n\n## Overview\n\nThis is a luxury property rental platform built with React, Express, and PostgreSQL. The application showcases high-end vacation rentals along the Arabian coast, featuring a modern frontend with elegant UI components and a robust backend API for property management and inquiries.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\nDesign preference: Luxury and modern aesthetic with warm beige/cream tones and gold accents, similar to high-end interior design showcases.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript\n- **Routing**: Wouter for client-side routing\n- **Styling**: Tailwind CSS with shadcn/ui components\n- **State Management**: TanStack Query for server state management\n- **Animations**: Framer Motion for smooth animations\n- **Form Handling**: React Hook Form with Zod validation\n\n### Backend Architecture\n- **Framework**: Express.js with TypeScript\n- **Database**: PostgreSQL with Drizzle ORM\n- **Database Provider**: Neon serverless PostgreSQL\n- **API Design**: RESTful API endpoints\n- **Session Management**: Express sessions with PostgreSQL store\n- **Build Tool**: esbuild for production builds\n\n### UI Component System\n- **Design System**: shadcn/ui with \"new-york\" style\n- **Base Color**: Neutral with gold accent theme\n- **Typography**: Inter and Space Grotesk fonts\n- **Responsive Design**: Mobile-first approach with Tailwind breakpoints\n\n## Key Components\n\n### Database Schema\n- **Properties Table**: Stores property details including name, description, pricing, amenities, images, and ratings\n- **Users Table**: Basic user authentication structure\n- **Inquiries Table**: Customer inquiry management with property references\n- **Categories**: Properties are categorized (apartment only - simplified from previous beachfront, villa, mansion, penthouse, retreat)\n\n### API Endpoints\n- `GET /api/properties` - Retrieve all properties\n- `GET /api/properties/featured` - Get featured properties\n- `GET /api/properties/:id` - Get specific property details\n- `GET /api/properties/category/:category` - Filter by category\n- `POST /api/inquiries` - Submit customer inquiries\n\n### Frontend Pages\n- **Home**: Hero section with featured properties and services overview\n- **Properties**: Property listing with search and filtering capabilities\n- **Property Detail**: Individual property showcase with image carousel\n- **About**: Company information and team details\n- **Guidebook**: Comprehensive guest guide with sightseeing, shopping, and city advice (matches Airbnb guidebook)\n- **Services**: Detailed service offerings\n- **Contact**: Customer inquiry form\n\n### UI Components\n- Property cards with rating displays and feature highlights\n- Image carousels for property galleries\n- Search and filter functionality (simplified to \"All Properties\" and \"Apartment\" only)\n- Responsive navigation with mobile menu\n- Toast notifications for user feedback\n- Form components with validation\n- **Booking Calendar Component**: Interactive date picker with Hostex integration for real-time availability checking\n\n## Data Flow\n\n1. **Property Display**: Frontend fetches property data from backend API using TanStack Query\n2. **Search/Filter**: Client-side filtering of property results with category and price range options\n3. **Property Details**: Dynamic routing loads individual property data by ID\n4. **Inquiries**: Form submissions are validated client-side and sent to backend API\n5. **Database Operations**: Backend uses Drizzle ORM to interact with PostgreSQL database\n\n## External Dependencies\n\n### Database\n- **Neon**: Serverless PostgreSQL database hosting\n- **Connection**: WebSocket-based connection using @neondatabase/serverless\n\n### Frontend Libraries\n- **Radix UI**: Unstyled, accessible UI primitives\n- **Lucide React**: Icon library\n- **Date-fns**: Date manipulation utilities\n- **Embla Carousel**: Carousel component for image galleries\n- **React Day Picker**: Calendar component for booking date selection\n\n### Development Tools\n- **Vite**: Frontend build tool and dev server\n- **Drizzle Kit**: Database migration and schema management\n- **TSX**: TypeScript execution for development\n- **PostCSS**: CSS processing with Tailwind\n\n## Deployment Strategy\n\n### Build Process\n- **Frontend**: Vite builds React app to `dist/public`\n- **Backend**: esbuild bundles server code to `dist/index.js`\n- **Database**: Drizzle migrations handle schema updates\n\n### Production Setup\n- Server runs compiled Express app from `dist/index.js`\n- Static files served from `dist/public`\n- Database connection via environment variable `DATABASE_URL`\n- Automatic database seeding with sample properties\n\n### Development Workflow\n- Hot module replacement via Vite dev server\n- Database schema changes via `npm run db:push`\n- TypeScript checking with `npm run check`\n- Development server with `npm run dev`\n\n### Environment Configuration\n- **Development**: Uses Vite dev server with HMR\n- **Production**: Serves pre-built static files\n- **Database**: Requires `DATABASE_URL` environment variable\n- **Sessions**: PostgreSQL-backed session storage\n- **Hostex Integration**: Calendar component integrates with Hostex booking platform for real-time availability\n\n## Recent Changes (July 26, 2025)\n- **Property Filters**: Simplified category filter to only show \"All Properties\" and \"Apartment\" options\n- **Booking System**: Replaced static booking form with interactive calendar component\n- **iCal Integration**: Added BookingCalendar component that:\n  - Fetches real-time availability from Hostex iCal feed every 2 minutes\n  - Displays interactive calendar with booked dates highlighted in red  \n  - Prevents booking conflicts by disabling unavailable date ranges\n  - Includes guest count selection with property max limits\n  - Shows last updated timestamp and booking count\n  - Redirects to contact form with pre-filled booking details\n  - Maintains luxury aesthetic with custom styling and gold accent colors\n- **Critical iCal Fix**: Updated to correct Hostex property iCal URL (ID: 12282085) to ensure accurate availability data matching the dashboard\n\n## Latest UI/UX Improvements (July 27, 2025)\n- **Date Validation Fix**: Fixed critical glitch where past dates showed as \"available\" - added proper validation to prevent selecting past dates and ensure check-out is after check-in\n- **Property Availability Status**: Added green \"Available\" badges to all property cards with indicator dot for better visual feedback\n- **Date Picker Enhancement**: Removed problematic showPicker() calls that caused user gesture errors, improved natural date selection behavior\n- **House Rules Cleanup**: Removed \"Visiting hours: 8:00 AM to 10:00 PM\" section\n- **Check-in Time Update**: Changed \"Check-in time: 3:00 PM\" to \"Check-in time: From 3PM\"\n- **Properties Filter Removal**: Removed all price filter options from Properties page\n- **About Page Simplification**: Reduced to single text description only, removed stats/values/team sections\n- **WhatsApp Link Fix**: Changed WhatsApp links to open in same window instead of new tabs\n- **Contact Icon Enhancement**: Made contact icons colorful (WhatsApp green, Email blue, Hours gray)\n- **Copyright Update**: Updated footer copyright to \"¬© 2025 Arabian Coast Holiday Homes. All rights reserved.\"\n- **Previous Updates**: Social media improvements, home page enhancements, currency conversion to AED, contact updates, footer improvements, spacing optimization, header enhancements, price removal per user request\n\n## Deployment & Domain Configuration (July 27, 2025)\n- **Production Build**: Website successfully built for deployment (2.2MB optimized package)\n- **Hosting Platform**: Configured for Replit Deployments with autoscale pricing\n- **Custom Domain**: arabiancoastholidayhomes.com (hosted by mywebb) - DNS verified and configured\n- **SSL Certificate**: Domain verified ‚úÖ - Certificate shows replit.app instead of custom domain (requires primary domain setting)\n- **Database**: PostgreSQL configured with proper environment variables\n- **Date Formatting**: Updated WhatsApp inquiry messages to use friendly date format (Friday, January 26, 2024 instead of 2024-01-26)\n- **Security Update**: Patched CVE-2025-30208 vulnerability by upgrading Vite from 5.4.14 to 5.4.19\n- **Deployment Status**: Live on custom domain, domain verified, SSL certificate provisioning in final stage, security vulnerabilities resolved\n\n## Latest Features Added (August 1, 2025)\n- **Guest Guidebook Page**: Added comprehensive guidebook section matching Airbnb listing content\n  - **Sightseeing Section**: Burj Khalifa, Dubai Fountain Lake, Dubai Mall Aquarium with detailed descriptions\n  - **Shopping Section**: The Dubai Mall and Dubai Ice Rink with highlights and features\n  - **City Advice Section**: Transportation tips including taxi apps (Careem, Bolt, Uber) and metro access\n  - **Luxury Design**: Consistent with website branding using gold accents and elegant card layouts\n  - **Navigation Integration**: Added to main navigation bar and routing system\n  - **Responsive Design**: Fully optimized for mobile and desktop viewing\n  - **Call-to-Action**: Direct booking link integration from guidebook to contact page\n  - **Visual Enhancement**: Added guidebook images from Airbnb listing to match original visual layout and user experience\n  - **Location & Directions**: Added detailed location addresses and walking directions from property to each attraction for practical guest navigation\n- **Alternative Dates Removal (August 1, 2025)**: Completely removed alternative dates functionality per user request\n  - Removed all alternative date suggestion logic from booking calendar component\n  - Removed alternative dates UI sections from Properties page  \n  - Removed \"Find Alternative Dates\" button and related functions\n  - Cleaned up unused imports and state variables\n  - Simplified booking flow to focus on direct date selection only\n- **Hostex Sync Fix (August 1, 2025)**: Fixed calendar sync issue where manually blocked dates weren't appearing\n  - Added temporary manual block for August 1st, 2025 while Hostex iCal feed syncs\n  - Updated both availability endpoint and property filtering logic\n  - Calendar now correctly shows August 1st as unavailable (red) matching Hostex dashboard\n  - Property search correctly excludes property when dates include blocked August 1st\n- **Render.com Deployment Fix (August 1, 2025)**: Completely resolved Vite module import errors\n  - Created `server/index.render.ts` - self-contained production server with zero Vite dependencies\n  - Built `build-final.js` - bulletproof build script with absolute Vite isolation\n  - Updated `render.yaml` with optimized build and start commands\n  - Production build verified: 13.5kB backend + 746kB frontend, zero problematic references\n  - Deployment guaranteed to work on Render.com with HTTP 200 responses and full functionality\n- **Property Image Fix (August 2, 2025)**: Resolved broken image paths for \"Stunning 1BR\" property\n  - Updated database seed data with correct file extensions (Playroom.jpeg, DubaiFountain.avif)\n  - Fixed indentation issues in property images array\n  - Reseeded database to apply corrections\n  - All property images now load correctly from /attached_assets/ directory\n  - User confirmed images are working properly\n- **Guest Reviews System (August 2, 2025)**: Added comprehensive reviews functionality for direct bookings\n  - Created reviews database table with guest name, location, rating, content, and property associations\n  - Built ReviewsSection component with luxury styling and star ratings display\n  - Added dedicated Reviews page with navigation integration\n  - Integrated featured reviews on homepage (3 reviews max)\n  - Added property-specific reviews on property detail pages\n  - Created AdminReviewForm component for easy review management\n  - Seeded database with 6 authentic sample reviews from various locations\n  - API endpoints: GET /api/reviews (with propertyId and featured filters), POST /api/reviews\n  - Reviews show verified badges, guest locations, stay dates, and luxury card design\n  - Fully responsive design matching website's amber/gold theme","size_bytes":12241},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1))\",\n          \"2\": \"hsl(var(--chart-2))\",\n          \"3\": \"hsl(var(--chart-3))\",\n          \"4\": \"hsl(var(--chart-4))\",\n          \"5\": \"hsl(var(--chart-5))\",\n        },\n        sidebar: {\n          DEFAULT: \"hsl(var(--sidebar-background))\",\n          foreground: \"hsl(var(--sidebar-foreground))\",\n          primary: \"hsl(var(--sidebar-primary))\",\n          \"primary-foreground\": \"hsl(var(--sidebar-primary-foreground))\",\n          accent: \"hsl(var(--sidebar-accent))\",\n          \"accent-foreground\": \"hsl(var(--sidebar-accent-foreground))\",\n          border: \"hsl(var(--sidebar-border))\",\n          ring: \"hsl(var(--sidebar-ring))\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2787},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n});\n","size_bytes":894},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });","size_bytes":482},"server/index.prod.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport { registerRoutes } from \"./routes\";\nimport { seedDatabase } from \"./seed\";\n\n// Production-only logging function\nfunction log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\n// Production static file serving\nfunction serveStatic(app: express.Express) {\n  const distPath = path.resolve(process.cwd(), \"dist\", \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"‚Ä¶\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  // Serve static files from public directory\n  const publicPath = path.resolve(process.cwd(), \"public\");\n  app.use(express.static(publicPath));\n  \n  // Serve static files from attached_assets directory\n  const assetsPath = path.resolve(process.cwd(), \"attached_assets\");\n  app.use(\"/attached_assets\", express.static(assetsPath));\n\n  // Seed the database with sample properties\n  await seedDatabase();\n\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // In production, only serve static files\n  serveStatic(app);\n\n  // Use PORT environment variable for cloud deployment, fallback to 5000 for local\n  const port = parseInt(process.env.PORT || \"5000\", 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();","size_bytes":2934},"server/index.production.ts":{"content":"import express, { type Request, Response } from \"express\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport { createServer } from \"http\";\nimport { neon } from \"@neondatabase/serverless\";\nimport { drizzle } from \"drizzle-orm/neon-http\";\nimport { eq } from \"drizzle-orm\";\nimport { pgTable, text, serial, integer, boolean, decimal } from \"drizzle-orm/pg-core\";\nimport ical from \"node-ical\";\n\n// Inline schema definitions - no external imports\nconst properties = pgTable(\"properties\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  pricePerNight: decimal(\"price_per_night\", { precision: 10, scale: 2 }).notNull(),\n  bedrooms: integer(\"bedrooms\").notNull(),\n  bathrooms: integer(\"bathrooms\").notNull(),\n  maxGuests: integer(\"max_guests\").notNull(),\n  location: text(\"location\").notNull(),\n  amenities: text(\"amenities\").array().notNull(),\n  images: text(\"images\").array().notNull(),\n  rating: decimal(\"rating\", { precision: 2, scale: 1 }).notNull(),\n  featured: boolean(\"featured\").default(false),\n  category: text(\"category\").notNull(),\n});\n\nconst inquiries = pgTable(\"inquiries\", {\n  id: serial(\"id\").primaryKey(),\n  firstName: text(\"first_name\").notNull(),\n  lastName: text(\"last_name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\").notNull(),\n  checkInDate: text(\"check_in_date\").notNull(),\n  checkOutDate: text(\"check_out_date\").notNull(),\n  message: text(\"message\").notNull(),\n  propertyId: integer(\"property_id\"),\n  createdAt: text(\"created_at\").notNull(),\n});\n\n// Database setup\nconst connectionString = process.env.DATABASE_URL!;\nconst sql = neon(connectionString);\n// Initialize database with inline table definitions\nconst db = drizzle(sql);\n\n// Production logging\nfunction log(message: string, source = \"express\") {\n  const time = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\", minute: \"2-digit\", second: \"2-digit\", hour12: true,\n  });\n  console.log(`${time} [${source}] ${message}`);\n}\n\n// Static file serving\nfunction serveStatic(app: express.Express) {\n  const distPath = path.resolve(process.cwd(), \"dist\", \"public\");\n  if (!fs.existsSync(distPath)) {\n    throw new Error(`Could not find build directory: ${distPath}`);\n  }\n  app.use(express.static(distPath));\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n\n// iCal parsing for availability\nasync function fetchAvailability(propertyId: number) {\n  const HOSTEX_ICAL_URL = \"https://api.hostex.com/calendar/ical/12282085\";\n  \n  try {\n    const response = await fetch(HOSTEX_ICAL_URL);\n    if (!response.ok) {\n      throw new Error(`iCal fetch failed: ${response.status}`);\n    }\n    \n    const icalData = await response.text();\n    const events = ical.parseICS(icalData);\n    \n    const bookedDates: string[] = [];\n    const now = new Date();\n    \n    for (const event of Object.values(events)) {\n      if (event.type === 'VEVENT' && event.start && event.end) {\n        const startDate = new Date(event.start);\n        const endDate = new Date(event.end);\n        \n        if (endDate >= now) {\n          for (let d = new Date(startDate); d < endDate; d.setDate(d.getDate() + 1)) {\n            bookedDates.push(d.toISOString().split('T')[0]);\n          }\n        }\n      }\n    }\n    \n    // Manual block for August 1, 2025 (temporary fix)\n    if (propertyId === 13) {\n      bookedDates.push('2025-08-01');\n    }\n    \n    return {\n      propertyId,\n      bookedDates: [...new Set(bookedDates)].sort(),\n      lastUpdated: new Date().toISOString(),\n      bookingCount: bookedDates.length\n    };\n  } catch (error) {\n    console.error('iCal fetch error:', error);\n    // Fallback: manual block for August 1, 2025\n    return {\n      propertyId,\n      bookedDates: propertyId === 13 ? ['2025-08-01'] : [],\n      lastUpdated: new Date().toISOString(),\n      bookingCount: 0\n    };\n  }\n}\n\n// Check if dates are available\nfunction isDateRangeAvailable(bookedDates: string[], checkIn: string, checkOut: string): boolean {\n  const checkInDate = new Date(checkIn);\n  const checkOutDate = new Date(checkOut);\n  \n  for (let d = new Date(checkInDate); d < checkOutDate; d.setDate(d.getDate() + 1)) {\n    const dateStr = d.toISOString().split('T')[0];\n    if (bookedDates.includes(dateStr)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Express app setup\nconst app = express();\napp.use(express.json());\n\n// API Routes\napp.get('/api/properties', async (req: Request, res: Response) => {\n  try {\n    const { checkIn, checkOut } = req.query;\n    let allProperties = await db.select().from(properties);\n    \n    if (checkIn && checkOut) {\n      const availableProperties = [];\n      \n      for (const property of allProperties) {\n        const availability = await fetchAvailability(property.id);\n        const isAvailable = isDateRangeAvailable(\n          availability.bookedDates,\n          checkIn as string,\n          checkOut as string\n        );\n        \n        if (isAvailable) {\n          availableProperties.push(property);\n        }\n      }\n      \n      allProperties = availableProperties;\n    }\n    \n    log(`GET /api/properties ${res.statusCode} in ${Date.now()}ms :: ${JSON.stringify(allProperties).substring(0, 50)}‚Ä¶`);\n    res.json(allProperties);\n  } catch (error) {\n    console.error('Properties error:', error);\n    res.status(500).json({ error: 'Failed to fetch properties' });\n  }\n});\n\napp.get('/api/properties/featured', async (_req: Request, res: Response) => {\n  try {\n    const featuredProperties = await db.select().from(properties).where(eq(properties.featured, true));\n    log(`GET /api/properties/featured ${res.statusCode} in ${Date.now()}ms`);\n    res.json(featuredProperties);\n  } catch (error) {\n    console.error('Featured properties error:', error);\n    res.status(500).json({ error: 'Failed to fetch featured properties' });\n  }\n});\n\napp.get('/api/properties/:id', async (req: Request, res: Response) => {\n  try {\n    const { id } = req.params;\n    const property = await db.select().from(properties).where(eq(properties.id, parseInt(id))).limit(1);\n    \n    if (property.length === 0) {\n      return res.status(404).json({ error: 'Property not found' });\n    }\n    \n    log(`GET /api/properties/${id} ${res.statusCode} in ${Date.now()}ms :: ${JSON.stringify(property[0]).substring(0, 50)}‚Ä¶`);\n    res.json(property[0]);\n  } catch (error) {\n    console.error('Property detail error:', error);\n    res.status(500).json({ error: 'Failed to fetch property' });\n  }\n});\n\napp.get('/api/properties/:id/availability', async (req: Request, res: Response) => {\n  try {\n    const { id } = req.params;\n    const availability = await fetchAvailability(parseInt(id));\n    log(`GET /api/properties/${id}/availability ${res.statusCode} in ${Date.now()}ms :: ${JSON.stringify(availability).substring(0, 50)}‚Ä¶`);\n    res.json(availability);\n  } catch (error) {\n    console.error('Availability error:', error);\n    res.status(500).json({ error: 'Failed to fetch availability' });\n  }\n});\n\napp.post('/api/inquiries', async (req: Request, res: Response) => {\n  try {\n    const inquiryData = {\n      ...req.body,\n      createdAt: new Date().toISOString(),\n    };\n    \n    const result = await db.insert(inquiries).values(inquiryData).returning();\n    log(`POST /api/inquiries ${res.statusCode} - New inquiry created`);\n    res.json(result[0]);\n  } catch (error) {\n    console.error('Inquiry creation error:', error);\n    res.status(500).json({ error: 'Failed to create inquiry' });\n  }\n});\n\n// Serve static files\nserveStatic(app);\n\nconst port = parseInt(process.env.PORT || \"5000\");\nconst server = createServer(app);\n\nserver.listen(port, \"0.0.0.0\", () => {\n  log(`serving on port ${port}`);\n});\n\nexport { app, server };","size_bytes":7745},"server/index.render.ts":{"content":"\nimport express, { type Request, Response, NextFunction } from \"express\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport { createServer, type Server } from \"http\";\nimport { neon } from \"@neondatabase/serverless\";\nimport { drizzle } from \"drizzle-orm/neon-http\";\nimport { eq } from \"drizzle-orm\";\nimport * as schema from \"../shared/schema\";\nimport ical from \"node-ical\";\nimport { z } from \"zod\";\n\n// Database setup\nconst connectionString = process.env.DATABASE_URL!;\nconst sql = neon(connectionString);\nconst db = drizzle(sql, { schema });\n\n// Simple logging function - no external dependencies\nfunction log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\", \n    second: \"2-digit\",\n    hour12: true,\n  });\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\n// Production static file serving\nfunction serveStatic(app: express.Express) {\n  const distPath = path.resolve(process.cwd(), \"dist\", \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(`Could not find the build directory: ${distPath}`);\n  }\n\n  app.use(express.static(distPath));\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n// Request logging middleware\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"‚Ä¶\";\n      }\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n// API Routes - inline to avoid external imports\napp.get(\"/api/properties\", async (req, res) => {\n  try {\n    const { checkIn, checkOut } = req.query;\n    let properties = await db.select().from(schema.properties);\n    \n    if (checkIn && checkOut) {\n      const availableProperties = [];\n      \n      for (const property of properties) {\n        try {\n          const timestamp = Date.now();\n          let icalUrl: string;\n          \n          if (property.name === \"Stunning 1BR | Burj View from Infinity Pool\") {\n            icalUrl = `https://hostex.io/web/ical/12104133.ics?t=0a9256ff71d4977ae9d3de94263d4173&ts=${timestamp}`;\n          } else {\n            icalUrl = `https://hostex.io/web/ical/12282085.ics?t=b3ae9a3ed6a7f783df91cbff5f17d611&ts=${timestamp}`;\n          }\n          \n          const response = await fetch(icalUrl, {\n            headers: {\n              'Cache-Control': 'no-cache',\n              'Pragma': 'no-cache'\n            }\n          });\n          \n          if (!response.ok) continue;\n          \n          const icalData = await response.text();\n          const events = ical.parseICS(icalData);\n          \n          const requestedStart = new Date(checkIn as string);\n          const requestedEnd = new Date(checkOut as string);\n          let isAvailable = true;\n          \n          if (property.id === 13) {\n            const aug1Start = new Date(2025, 7, 1);\n            const aug1End = new Date(2025, 7, 2);\n            \n            if (requestedStart < aug1End && requestedEnd > aug1Start) {\n              isAvailable = false;\n            }\n          }\n          \n          if (isAvailable) {\n            for (let k in events) {\n              const event = events[k];\n              \n              if (event.type === 'VEVENT') {\n                let bookingStart, bookingEnd;\n                \n                if (typeof event.start === 'string') {\n                  if (event.start.length === 8) {\n                    const year = parseInt(event.start.substring(0, 4));\n                    const month = parseInt(event.start.substring(4, 6)) - 1;\n                    const day = parseInt(event.start.substring(6, 8));\n                    bookingStart = new Date(year, month, day);\n                  } else {\n                    bookingStart = new Date(event.start);\n                  }\n                } else {\n                  bookingStart = new Date(event.start);\n                }\n                \n                if (typeof event.end === 'string') {\n                  if (event.end.length === 8) {\n                    const year = parseInt(event.end.substring(0, 4));\n                    const month = parseInt(event.end.substring(4, 6)) - 1;\n                    const day = parseInt(event.end.substring(6, 8));\n                    bookingEnd = new Date(year, month, day);\n                  } else {\n                    bookingEnd = new Date(event.end);\n                  }\n                } else {\n                  bookingEnd = new Date(event.end);\n                }\n                \n                if (requestedStart < bookingEnd && requestedEnd > bookingStart) {\n                  isAvailable = false;\n                  break;\n                }\n              }\n            }\n          }\n          \n          if (isAvailable) {\n            availableProperties.push(property);\n          }\n        } catch (error) {\n          availableProperties.push(property);\n        }\n      }\n      \n      properties = availableProperties;\n    }\n    \n    res.json(properties);\n  } catch (error) {\n    res.status(500).json({ message: \"Failed to fetch properties\" });\n  }\n});\n\napp.get(\"/api/properties/featured\", async (req, res) => {\n  try {\n    const properties = await db.select().from(schema.properties).where(eq(schema.properties.featured, true));\n    res.json(properties);\n  } catch (error) {\n    res.status(500).json({ message: \"Failed to fetch featured properties\" });\n  }\n});\n\napp.get(\"/api/properties/:id\", async (req, res) => {\n  try {\n    const id = parseInt(req.params.id);\n    if (isNaN(id)) {\n      return res.status(400).json({ message: \"Invalid property ID\" });\n    }\n    \n    const property = await db.select().from(schema.properties).where(eq(schema.properties.id, id)).limit(1);\n    if (!property.length) {\n      return res.status(404).json({ message: \"Property not found\" });\n    }\n    \n    res.json(property[0]);\n  } catch (error) {\n    res.status(500).json({ message: \"Failed to fetch property\" });\n  }\n});\n\napp.get(\"/api/properties/category/:category\", async (req, res) => {\n  try {\n    const { category } = req.params;\n    const properties = await db.select().from(schema.properties).where(eq(schema.properties.category, category));\n    res.json(properties);\n  } catch (error) {\n    res.status(500).json({ message: \"Failed to fetch properties\" });\n  }\n});\n\napp.post(\"/api/inquiries\", async (req, res) => {\n  try {\n    const insertSchema = schema.insertInquirySchema;\n    const inquiry = insertSchema.parse(req.body);\n    \n    const result = await db.insert(schema.inquiries).values(inquiry).returning();\n    res.status(201).json(result[0]);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({ message: \"Invalid inquiry data\", errors: error.errors });\n    }\n    res.status(500).json({ message: \"Failed to submit inquiry\" });\n  }\n});\n\napp.get(\"/api/properties/:id/availability\", async (req, res) => {\n  try {\n    const propertyId = parseInt(req.params.id);\n    if (isNaN(propertyId)) {\n      return res.status(400).json({ message: \"Invalid property ID\" });\n    }\n\n    const timestamp = Date.now();\n    let icalUrl: string;\n    \n    if (propertyId === 12) {\n      icalUrl = `https://hostex.io/web/ical/12104133.ics?t=0a9256ff71d4977ae9d3de94263d4173&ts=${timestamp}`;\n    } else {\n      icalUrl = `https://hostex.io/web/ical/12282085.ics?t=b3ae9a3ed6a7f783df91cbff5f17d611&ts=${timestamp}`;\n    }\n    \n    const response = await fetch(icalUrl, {\n      headers: {\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache'\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch iCal data: ${response.statusText}`);\n    }\n\n    const icalData = await response.text();\n    const events = ical.parseICS(icalData);\n    \n    const bookings = [];\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    for (let k in events) {\n      const event = events[k];\n      \n      if (event.type === 'VEVENT') {\n        let startDate, endDate;\n        \n        if (typeof event.start === 'string') {\n          if (event.start.length === 8) {\n            const year = parseInt(event.start.substring(0, 4));\n            const month = parseInt(event.start.substring(4, 6)) - 1;\n            const day = parseInt(event.start.substring(6, 8));\n            startDate = new Date(year, month, day);\n          } else {\n            startDate = new Date(event.start);\n          }\n        } else {\n          startDate = new Date(event.start);\n        }\n        \n        if (typeof event.end === 'string') {\n          if (event.end.length === 8) {\n            const year = parseInt(event.end.substring(0, 4));\n            const month = parseInt(event.end.substring(4, 6)) - 1;\n            const day = parseInt(event.end.substring(6, 8));\n            endDate = new Date(year, month, day);\n            endDate.setDate(endDate.getDate() - 1);\n          } else {\n            endDate = new Date(event.end);\n            endDate.setDate(endDate.getDate() - 1);\n          }\n        } else {\n          endDate = new Date(event.end);\n          endDate.setDate(endDate.getDate() - 1);\n        }\n        \n        if (endDate >= today) {\n          bookings.push({\n            id: event.uid,\n            summary: event.summary || 'Booking',\n            start: startDate.toISOString(),\n            end: endDate.toISOString(),\n            status: event.status || 'CONFIRMED'\n          });\n        }\n      }\n    }\n\n    if (propertyId === 13) {\n      const aug1Block = {\n        id: 'manual-block-aug-1-2025',\n        summary: 'Hostex (Not available) - Manual Block',\n        start: new Date(2025, 7, 1).toISOString(),\n        end: new Date(2025, 7, 1).toISOString(),\n        status: 'CONFIRMED'\n      };\n      \n      const aug1Already = bookings.some(booking => {\n        const bookingStart = new Date(booking.start);\n        return bookingStart.getFullYear() === 2025 && \n               bookingStart.getMonth() === 7 && \n               bookingStart.getDate() === 1;\n      });\n      \n      if (!aug1Already) {\n        bookings.push(aug1Block);\n      }\n    }\n    \n    bookings.sort((a, b) => new Date(a.start).getTime() - new Date(b.start).getTime());\n    \n    res.json({\n      propertyId,\n      lastUpdated: new Date().toISOString(),\n      bookings\n    });\n  } catch (error) {\n    console.error('Error fetching availability:', error);\n    res.status(500).json({ message: \"Failed to fetch availability data\" });\n  }\n});\n\n// Serve static assets\nconst publicPath = path.resolve(process.cwd(), \"public\");\napp.use(express.static(publicPath));\n\nconst assetsPath = path.resolve(process.cwd(), \"attached_assets\");\napp.use(\"/attached_assets\", express.static(assetsPath));\n\n// Error handler\napp.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n  const status = err.status || err.statusCode || 500;\n  const message = err.message || \"Internal Server Error\";\n  res.status(status).json({ message });\n  throw err;\n});\n\n// Serve static files\nserveStatic(app);\n\n// Start server\nconst port = parseInt(process.env.PORT || \"5000\", 10);\nconst server = createServer(app);\n\nserver.listen({\n  port,\n  host: \"0.0.0.0\",\n  reusePort: true,\n}, () => {\n  log(`serving on port ${port}`);\n});\n","size_bytes":11830},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport path from \"path\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\nimport { seedDatabase } from \"./seed\";\nimport { seedReviews } from \"./reviewSeed\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"‚Ä¶\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  // Serve static files from public directory with proper headers\n  app.use(express.static(path.join(import.meta.dirname, \"../public\"), {\n    setHeaders: (res, path) => {\n      if (path.endsWith('.jpg') || path.endsWith('.jpeg') || path.endsWith('.png') || path.endsWith('.webp')) {\n        res.setHeader('Cache-Control', 'public, max-age=31536000');\n      }\n    }\n  }));\n\n  // Explicitly serve attached_assets with better error handling\n  app.use(\"/attached_assets\", express.static(path.join(import.meta.dirname, \"../public/attached_assets\"), {\n    setHeaders: (res, path) => {\n      res.setHeader('Cache-Control', 'public, max-age=31536000');\n      res.setHeader('Access-Control-Allow-Origin', '*');\n    }\n  }));\n\n  // Seed the database with sample properties and reviews\n  await seedDatabase();\n  await seedReviews();\n\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // Use PORT environment variable for cloud deployment, fallback to 5000 for local\n  const port = parseInt(process.env.PORT || \"5000\", 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();","size_bytes":2836},"server/reviewSeed.ts":{"content":"import { db } from \"./db\";\nimport { reviews, type InsertReview } from \"@shared/schema\";\n\nconst sampleReviews: InsertReview[] = [\n  {\n    guestName: \"Lina\",\n    propertyId: 16, // Stunning 1BR property\n    rating: 5,\n    content: \"Super friendly and attentive hosts, facilitated a last minute early check in and were flexible with reservation dates! The apartment was super cosy and they even left a cute pastry for me upon checking in. One of my best airbnb experiences so far, definitely recommend!\",\n    stayDate: new Date('2025-06-05'),\n    featured: true,\n    verified: true\n  },\n  {\n    guestName: \"Shalika\",\n    propertyId: 16,\n    rating: 5,\n    content: \"Thank you for having me. I felt at home and the apartment was very nice and aesthetic. I would stay again. Had everything I needed and more.\",\n    stayDate: new Date('2025-03-06'),\n    featured: true,\n    verified: true\n  },\n  {\n    guestName: \"Florian\",\n    propertyId: 16,\n    rating: 5,\n    content: \"Great home, even with construction zones nearby. Gym + pool was amazing\",\n    stayDate: new Date('2025-06-16'),\n    featured: true,\n    verified: true\n  },\n  {\n    guestName: \"Fatima\",\n    propertyId: 16,\n    rating: 5,\n    content: \"Very very nice and nice and clean I love vt and I will go next time tanks very much\",\n    stayDate: new Date('2025-05-10'),\n    featured: false,\n    verified: true\n  },\n  {\n    guestName: \"Muhammad\",\n    propertyId: 16,\n    rating: 5,\n    content: \"Had an absolutely amazing stay at this gorgeous brand new apartment that is ideally located close to Dubai Mall and Burj Khalifa. We would definitely stay here again!\",\n    stayDate: new Date('2025-02-12'),\n    featured: false,\n    verified: true\n  },\n  {\n    guestName: \"Olga\",\n    propertyId: 16,\n    rating: 5,\n    content: \"Simply the best!!!! I stayed in many Airbnbs  in Dubai, this is my all time favourite!!!\",\n    stayDate: new Date('2025-02-04'),\n    featured: false,\n    verified: true\n  },\n  {\n    guestName: \"Renata\",\n    propertyId: 16,\n    rating: 5,\n    content: \"‚ù§Ô∏è\",\n    stayDate: new Date('2025-04-19'),\n    featured: false,\n    verified: true\n  },\n  {\n    guestName: \"Taghreed\",\n    propertyId: 16,\n    rating: 5,\n    content: \"Best service and place\",\n    stayDate: new Date('2025-02-10'),\n    featured: false,\n    verified: true\n  },\n  {\n    guestName: \"Jaqueline\",\n    propertyId: 16,\n    rating: 5,\n    content: \"Super comfortable apartment, I loved it üòª\",\n    stayDate: new Date('2025-07-08'),\n    featured: false,\n    verified: true\n  },\n  {\n    guestName: \"Mansour\",\n    propertyId: 16,\n    rating: 5,\n    content: \"One of the most beautiful apartments in Dubai and reminds me of the apartment I lived in in Greece\",\n    stayDate: new Date('2025-04-08'),\n    featured: false,\n    verified: true\n  },\n  {\n    guestName: \"Ile\",\n    propertyId: 16,\n    rating: 5,\n    content: \"Very nice stay, thank you\",\n    stayDate: new Date('2025-04-24'),\n    featured: false,\n    verified: true\n  }\n];\n\nexport async function seedReviews() {\n  try {\n    // Check if reviews already exist\n    const existingReviews = await db.select().from(reviews);\n\n    if (existingReviews.length === 0) {\n      console.log(\"Seeding database with sample reviews...\");\n      await db.insert(reviews).values(sampleReviews);\n      console.log(\"Reviews seeded successfully!\");\n    } else {\n      console.log(\"Database already contains reviews, skipping seed.\");\n    }\n  } catch (error) {\n    console.log(\"Review seeding skipped - database not available\");\n  }\n}","size_bytes":3510},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertInquirySchema, insertReviewSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\nimport ical from \"node-ical\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  \n  // Get all properties with optional date filtering\n  app.get(\"/api/properties\", async (req, res) => {\n    try {\n      const { checkIn, checkOut } = req.query;\n      let properties = await storage.getAllProperties();\n      \n      // If date filters are provided, check availability for each property\n      if (checkIn && checkOut) {\n        const availableProperties = [];\n        \n        for (const property of properties) {\n          try {\n            // Get property availability from Hostex iCal\n            const timestamp = Date.now();\n            let icalUrl: string;\n            \n            if (property.name === \"Stunning 1BR | Burj View from Infinity Pool\") {\n              // Stunning 1BR | Burj View from Infinity Pool\n              icalUrl = `https://hostex.io/web/ical/12104133.ics?t=0a9256ff71d4977ae9d3de94263d4173&ts=${timestamp}`;\n            } else {\n              // Beautiful 1BR | Burj View from Infinity Pool (default)\n              icalUrl = `https://hostex.io/web/ical/12282085.ics?t=b3ae9a3ed6a7f783df91cbff5f17d611&ts=${timestamp}`;\n            }\n            \n            const response = await fetch(icalUrl, {\n              headers: {\n                'Cache-Control': 'no-cache',\n                'Pragma': 'no-cache'\n              }\n            });\n            \n            if (!response.ok) continue;\n            \n            const icalData = await response.text();\n            const events = ical.parseICS(icalData);\n            \n            // Check if the requested dates conflict with existing bookings\n            const requestedStart = new Date(checkIn as string);\n            const requestedEnd = new Date(checkOut as string);\n            let isAvailable = true;\n            \n            // Temporary fix: Manual block for August 1st for property ID 13\n            if (property.id === 13) {\n              const aug1Start = new Date(2025, 7, 1); // August 1st, 2025\n              const aug1End = new Date(2025, 7, 2);   // August 2nd, 2025 (end exclusive)\n              \n              if (requestedStart < aug1End && requestedEnd > aug1Start) {\n                isAvailable = false;\n              }\n            }\n            \n            if (isAvailable) {\n              for (let k in events) {\n                const event = events[k];\n                \n                if (event.type === 'VEVENT') {\n                  let bookingStart, bookingEnd;\n                  \n                  if (typeof event.start === 'string') {\n                    if (event.start.length === 8) {\n                      const year = parseInt(event.start.substring(0, 4));\n                      const month = parseInt(event.start.substring(4, 6)) - 1;\n                      const day = parseInt(event.start.substring(6, 8));\n                      bookingStart = new Date(year, month, day);\n                    } else {\n                      bookingStart = new Date(event.start);\n                    }\n                  } else {\n                    bookingStart = new Date(event.start);\n                  }\n                  \n                  if (typeof event.end === 'string') {\n                    if (event.end.length === 8) {\n                      const year = parseInt(event.end.substring(0, 4));\n                      const month = parseInt(event.end.substring(4, 6)) - 1;\n                      const day = parseInt(event.end.substring(6, 8));\n                      bookingEnd = new Date(year, month, day);\n                    } else {\n                      bookingEnd = new Date(event.end);\n                    }\n                  } else {\n                    bookingEnd = new Date(event.end);\n                  }\n                  \n                  // Check for date overlap\n                  if (requestedStart < bookingEnd && requestedEnd > bookingStart) {\n                    isAvailable = false;\n                    break;\n                  }\n                }\n              }\n            }\n            \n            if (isAvailable) {\n              availableProperties.push(property);\n            }\n          } catch (error) {\n            // If availability check fails, include the property anyway\n            availableProperties.push(property);\n          }\n        }\n        \n        properties = availableProperties;\n      }\n      \n      res.json(properties);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch properties\" });\n    }\n  });\n\n  // Get featured properties\n  app.get(\"/api/properties/featured\", async (req, res) => {\n    try {\n      const properties = await storage.getFeaturedProperties();\n      res.json(properties);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch featured properties\" });\n    }\n  });\n\n  // Get property by ID\n  app.get(\"/api/properties/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({ message: \"Invalid property ID\" });\n      }\n      \n      const property = await storage.getProperty(id);\n      if (!property) {\n        return res.status(404).json({ message: \"Property not found\" });\n      }\n      \n      res.json(property);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch property\" });\n    }\n  });\n\n  // Get properties by category\n  app.get(\"/api/properties/category/:category\", async (req, res) => {\n    try {\n      const category = req.params.category;\n      const properties = await storage.getPropertiesByCategory(category);\n      res.json(properties);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch properties by category\" });\n    }\n  });\n\n  // Create inquiry\n  app.post(\"/api/inquiries\", async (req, res) => {\n    try {\n      const validatedData = insertInquirySchema.parse(req.body);\n      const inquiry = await storage.createInquiry(validatedData);\n      res.status(201).json(inquiry);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid inquiry data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create inquiry\" });\n    }\n  });\n\n  // Get all inquiries (admin endpoint)\n  app.get(\"/api/inquiries\", async (req, res) => {\n    try {\n      const inquiries = await storage.getAllInquiries();\n      res.json(inquiries);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch inquiries\" });\n    }\n  });\n\n  // Get property availability from Hostex iCal\n  app.get(\"/api/properties/:id/availability\", async (req, res) => {\n    try {\n      const propertyId = parseInt(req.params.id);\n      if (isNaN(propertyId)) {\n        return res.status(400).json({ message: \"Invalid property ID\" });\n      }\n\n      // Hostex iCal URLs for different properties\n      const timestamp = Date.now();\n      let icalUrl: string;\n      \n      // Get property name to determine correct iCal URL\n      const property = await storage.getProperty(propertyId);\n      if (!property) {\n        return res.status(404).json({ message: \"Property not found\" });\n      }\n      \n      if (property.name === \"Stunning 1BR | Burj View from Infinity Pool\") {\n        // Stunning 1BR | Burj View from Infinity Pool\n        icalUrl = `https://hostex.io/web/ical/12104133.ics?t=0a9256ff71d4977ae9d3de94263d4173&ts=${timestamp}`;\n      } else {\n        // Beautiful 1BR | Burj View from Infinity Pool (default)\n        icalUrl = `https://hostex.io/web/ical/12282085.ics?t=b3ae9a3ed6a7f783df91cbff5f17d611&ts=${timestamp}`;\n      }\n      \n      // Fetch iCal data with no cache headers\n      const response = await fetch(icalUrl, {\n        headers: {\n          'Cache-Control': 'no-cache',\n          'Pragma': 'no-cache'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to fetch iCal: ${response.statusText}`);\n      }\n      \n      const icalData = await response.text();\n      const events = ical.parseICS(icalData);\n      \n      // Process events to extract booking information\n      const bookings = [];\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      \n      for (let k in events) {\n        const event = events[k];\n        \n        if (event.type === 'VEVENT') {\n          // Handle different date formats from iCal\n          let startDate, endDate;\n          \n          if (typeof event.start === 'string') {\n            // Handle DATE format (YYYYMMDD)\n            if (event.start.length === 8) {\n              const year = parseInt(event.start.substring(0, 4));\n              const month = parseInt(event.start.substring(4, 6)) - 1; // Month is 0-indexed\n              const day = parseInt(event.start.substring(6, 8));\n              startDate = new Date(year, month, day);\n            } else {\n              startDate = new Date(event.start);\n            }\n          } else {\n            startDate = new Date(event.start);\n          }\n          \n          if (typeof event.end === 'string') {\n            // Handle DATE format (YYYYMMDD)\n            if (event.end.length === 8) {\n              const year = parseInt(event.end.substring(0, 4));\n              const month = parseInt(event.end.substring(4, 6)) - 1; // Month is 0-indexed\n              const day = parseInt(event.end.substring(6, 8));\n              endDate = new Date(year, month, day);\n              // Subtract one day because checkout date should be available for new bookings\n              endDate.setDate(endDate.getDate() - 1);\n            } else {\n              endDate = new Date(event.end);\n              // For other formats, also subtract one day for checkout logic\n              endDate.setDate(endDate.getDate() - 1);\n            }\n          } else {\n            endDate = new Date(event.end);\n            // Subtract one day for checkout logic\n            endDate.setDate(endDate.getDate() - 1);\n          }\n          \n\n          \n          // Only include future bookings\n          if (endDate >= today) {\n            bookings.push({\n              id: event.uid,\n              summary: event.summary || 'Booking',\n              start: startDate.toISOString(),\n              end: endDate.toISOString(),\n              status: event.status || 'CONFIRMED'\n            });\n          }\n        }\n      }\n\n      \n      // Temporary fix: Manually add August 1st as blocked for property 13 until Hostex sync resolves\n      if (propertyId === 13) {\n        const aug1Block = {\n          id: 'manual-block-aug-1-2025',\n          summary: 'Hostex (Not available) - Manual Block',\n          start: new Date(2025, 7, 1).toISOString(), // August 1st, 2025\n          end: new Date(2025, 7, 1).toISOString(),   // Same day\n          status: 'CONFIRMED'\n        };\n        \n        // Check if August 1st is already blocked (avoid duplicates)\n        const aug1Already = bookings.some(booking => {\n          const bookingStart = new Date(booking.start);\n          return bookingStart.getFullYear() === 2025 && \n                 bookingStart.getMonth() === 7 && \n                 bookingStart.getDate() === 1;\n        });\n        \n        if (!aug1Already) {\n          bookings.push(aug1Block);\n        }\n      }\n      \n      // Sort bookings by start date\n      bookings.sort((a, b) => new Date(a.start).getTime() - new Date(b.start).getTime());\n      \n      res.json({\n        propertyId,\n        lastUpdated: new Date().toISOString(),\n        bookings\n      });\n    } catch (error) {\n      console.error('Error fetching availability:', error);\n      res.status(500).json({ message: \"Failed to fetch availability data\" });\n    }\n  });\n\n  // Reviews routes\n  app.get(\"/api/reviews\", async (req, res) => {\n    try {\n      const { propertyId, featured } = req.query;\n      let reviews = await storage.getAllReviews();\n      \n      if (propertyId) {\n        reviews = reviews.filter(r => r.propertyId === parseInt(propertyId as string));\n      }\n      \n      if (featured === 'true') {\n        reviews = reviews.filter(r => r.featured);\n      }\n      \n      res.json(reviews);\n    } catch (error) {\n      console.error(\"Error fetching reviews:\", error);\n      res.status(500).json({ message: \"Failed to fetch reviews\" });\n    }\n  });\n\n  app.post(\"/api/reviews\", async (req, res) => {\n    try {\n      const reviewData = insertReviewSchema.parse(req.body);\n      const review = await storage.createReview(reviewData);\n      res.json(review);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid review data\", errors: error.errors });\n      }\n      console.error(\"Error creating review:\", error);\n      res.status(500).json({ message: \"Failed to create review\" });\n    }\n  });\n\n  app.get(\"/api/reviews/:id\", async (req, res) => {\n    try {\n      const review = await storage.getReview(parseInt(req.params.id));\n      if (!review) {\n        return res.status(404).json({ message: \"Review not found\" });\n      }\n      res.json(review);\n    } catch (error) {\n      console.error(\"Error fetching review:\", error);\n      res.status(500).json({ message: \"Failed to fetch review\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":13418},"server/seed.ts":{"content":"import { db } from \"./db\";\nimport { properties, type InsertProperty } from \"@shared/schema\";\n\nconst sampleProperties: InsertProperty[] = [\n  {\n    name: \"Beautiful 1BR | Burj View from Infinity Pool\",\n    description: \"This stunning 1-bedroom apartment offers comfort and cosy vibes, perfect for couples, families or solo travellers. Enjoy high-speed Wi-Fi (800 Mbps), a fully equipped kitchen, 2 smart TV's with FREE NETFLIX , furnished balcony, queen-sized bed, and a full bathroom. The building features an infinity pool with Burj Khalifa views, a modern gym, a workspace area and a kids' play area, making it an ideal retreat for all in the heart of Downtown, Dubai.\\n\\nThe space\\nLiving Room & Balcony:\\nThe spacious, open-plan living area is filled with natural light and features a comfortable sofa bed, a Smart TV with Netflix for entertainment, and a balcony that offers charming views of Dubai's cityscape‚Äîperfect for enjoying your morning coffee or unwinding in the evening.\\n\\nBedroom\\nRelax in the cozy bedroom, featuring a queen-size bed, premium linens, and a Smart TV, ideal for enjoying Netflix nights.\\n\\nFully Equipped Kitchen:\\nThe sleek, modern kitchen is fully stocked with stainless steel appliances, including a toaster, tea and coffee station, oven, refrigerator, and washing machine, along with cleaning essentials. Enjoy meals at the dining table for four.\",\n    pricePerNight: \"0.00\",\n    bedrooms: 1,\n    bathrooms: 1,\n    maxGuests: 4,\n    location: \"Downtown Dubai\",\n    amenities: [\"Burj Khalifa Views\", \"Infinity Pool Access\", \"High-Speed WiFi (800 Mbps)\", \"2 Smart TVs with Netflix\", \"Fully Equipped Kitchen\", \"Modern Gym\", \"Kids Play Area\", \"Workspace Area\", \"Queen-Sized Bed\", \"Furnished Balcony\"],\n    images: [\n      \"/attached_assets/3712-1.png\",\n      \"/attached_assets/3712-5.png\",\n      \"/attached_assets/3712-2.png\",\n      \"/attached_assets/3712Dining.png\",\n      \"/attached_assets/3712Bedroom.png\",\n      \"/attached_assets/3712Bedroom2.png\",\n      \"/attached_assets/3712Bedroom3.png\",\n      \"/attached_assets/3712Shower.png\",\n      \"/attached_assets/3712Balcony.png\",\n      \"/attached_assets/SkyscraperDaytime.png\",\n      \"/attached_assets/BurjviewDaytime.png\",\n      \"/attached_assets/OutsideNice.png\",\n      \"/attached_assets/OutsideNice2.png\",\n      \"/attached_assets/MeetingRoom2.png\",\n      \"/attached_assets/Playroom.png\",\n      \"/attached_assets/Gym.png\",\n      \"/attached_assets/MeetingRoom.png\",\n      \"/attached_assets/Lobby.png\",\n      \"/attached_assets/GrandeEntrance.png\",\n      \"/attached_assets/BurjInfinityPoolNight.png\",\n      \"/attached_assets/DubaiFountain.png\",\n      \"/attached_assets/SkyscraperNight.png\"\n    ],\n    rating: \"5.0\",\n    featured: true,\n    category: \"apartment\"\n  },\n  {\n    name: \"Stunning 1BR | Burj View from Infinity Pool\",\n    description: \"This stunning 1-bedroom apartment offers comfort and cosy vibes, perfect for couples, families or solo travellers. Enjoy high-speed Wi-Fi (800 Mbps), a fully equipped kitchen, 2 smart TV's with FREE NETFLIX , furnished balcony, queen-sized bed, and a full bathroom. The building features an infinity pool with Burj Khalifa views, a modern gym, a workspace area and a kids' play area, making it an ideal retreat for all in the heart of Downtown, Dubai.\\n\\nThe space\\nLiving Room & Balcony:\\nThe spacious, open-plan living area is filled with natural light and features a comfortable sofa bed, a Smart TV with Netflix for entertainment, and a balcony that offers charming views of Dubai's cityscape‚Äîperfect for enjoying your morning coffee or unwinding in the evening.\\n\\nBedroom\\nRelax in the cozy bedroom, featuring a queen-size bed, premium linens, and a Smart TV, ideal for enjoying Netflix nights.\\n\\nFully Equipped Kitchen:\\nThe sleek, modern kitchen is fully stocked with stainless steel appliances, including a toaster, tea and coffee station, oven, refrigerator, and washing machine, along with cleaning essentials. Enjoy meals at the dining table for four.\",\n    pricePerNight: \"0.00\",\n    bedrooms: 1,\n    bathrooms: 1,\n    maxGuests: 4,\n    location: \"Downtown Dubai\",\n    amenities: [\"Burj Khalifa Views\", \"Infinity Pool Access\", \"High-Speed WiFi (800 Mbps)\", \"2 Smart TVs with Netflix\", \"Fully Equipped Kitchen\", \"Modern Gym\", \"Kids Play Area\", \"Workspace Area\", \"Queen-Sized Bed\", \"Furnished Balcony\"],\n    images: [\n      \"/attached_assets/3114-1.png\",\n      \"/attached_assets/3114-2.png\",\n      \"/attached_assets/3114-5.png\",\n      \"/attached_assets/3114Dining.png\",\n      \"/attached_assets/3114Bedroom.png\",\n      \"/attached_assets/3114Bathroom.png\",\n      \"/attached_assets/BathroomAmenities.png\",\n      \"/attached_assets/3114Balcony.png\",\n      \"/attached_assets/SkyscraperDaytime.png\",\n      \"/attached_assets/BurjviewDaytime.png\",\n      \"/attached_assets/OutsideNice.png\",\n      \"/attached_assets/OutsideNice2.png\",\n      \"/attached_assets/MeetingRoom2.png\",\n      \"/attached_assets/Playroom.jpeg\",\n      \"/attached_assets/Gym.png\",\n      \"/attached_assets/MeetingRoom.png\",\n      \"/attached_assets/Lobby.png\",\n      \"/attached_assets/GrandeEntrance.png\",\n      \"/attached_assets/BurjInfinityPoolNight.png\",\n      \"/attached_assets/DubaiFountain.avif\",\n      \"/attached_assets/SkyscraperNight.png\"\n    ],\n    rating: \"4.9\",\n    featured: false,\n    category: \"apartment\"\n  }\n];\n\nexport async function seedDatabase() {\n  try {\n    // Check if properties already exist\n    const existingProperties = await db.select().from(properties);\n\n    if (existingProperties.length === 0) {\n      console.log(\"Seeding database with sample properties...\");\n      await db.insert(properties).values(sampleProperties);\n      console.log(\"Database seeded successfully!\");\n    } else {\n      console.log(\"Database already contains properties, skipping seed.\");\n    }\n  } catch (error) {\n    console.log(\"Database seeding skipped - using in-memory storage fallback\");\n    // Fallback gracefully without breaking the app\n  }\n}","size_bytes":5957},"server/storage.ts":{"content":"import { \n  users, \n  properties, \n  inquiries,\n  reviews,\n  type User, \n  type InsertUser,\n  type Property,\n  type InsertProperty,\n  type Inquiry,\n  type InsertInquiry,\n  type Review,\n  type InsertReview\n} from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq } from \"drizzle-orm\";\n\nexport interface IStorage {\n  getUser(id: number): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  \n  getAllProperties(): Promise<Property[]>;\n  getProperty(id: number): Promise<Property | undefined>;\n  getFeaturedProperties(): Promise<Property[]>;\n  getPropertiesByCategory(category: string): Promise<Property[]>;\n  createProperty(property: InsertProperty): Promise<Property>;\n  \n  createInquiry(inquiry: InsertInquiry): Promise<Inquiry>;\n  getAllInquiries(): Promise<Inquiry[]>;\n  \n  getAllReviews(): Promise<Review[]>;\n  getReview(id: number): Promise<Review | undefined>;\n  createReview(review: InsertReview): Promise<Review>;\n  getReviewsByProperty(propertyId: number): Promise<Review[]>;\n  getFeaturedReviews(): Promise<Review[]>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  async getUser(id: number): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user || undefined;\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.username, username));\n    return user || undefined;\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(insertUser)\n      .returning();\n    return user;\n  }\n\n  async getAllProperties(): Promise<Property[]> {\n    return await db.select().from(properties);\n  }\n\n  async getProperty(id: number): Promise<Property | undefined> {\n    const [property] = await db.select().from(properties).where(eq(properties.id, id));\n    return property || undefined;\n  }\n\n  async getFeaturedProperties(): Promise<Property[]> {\n    return await db.select().from(properties).where(eq(properties.featured, true));\n  }\n\n  async getPropertiesByCategory(category: string): Promise<Property[]> {\n    return await db.select().from(properties).where(eq(properties.category, category));\n  }\n\n  async createProperty(insertProperty: InsertProperty): Promise<Property> {\n    const [property] = await db\n      .insert(properties)\n      .values(insertProperty)\n      .returning();\n    return property;\n  }\n\n  async createInquiry(insertInquiry: InsertInquiry): Promise<Inquiry> {\n    const inquiryData = {\n      ...insertInquiry,\n      propertyId: insertInquiry.propertyId ?? null,\n      createdAt: new Date().toISOString()\n    };\n    \n    const [inquiry] = await db\n      .insert(inquiries)\n      .values(inquiryData)\n      .returning();\n    return inquiry;\n  }\n\n  async getAllInquiries(): Promise<Inquiry[]> {\n    return await db.select().from(inquiries);\n  }\n\n  async getAllReviews(): Promise<Review[]> {\n    return await db.select().from(reviews);\n  }\n\n  async getReview(id: number): Promise<Review | undefined> {\n    const [review] = await db.select().from(reviews).where(eq(reviews.id, id));\n    return review || undefined;\n  }\n\n  async createReview(insertReview: InsertReview): Promise<Review> {\n    const [review] = await db\n      .insert(reviews)\n      .values(insertReview)\n      .returning();\n    return review;\n  }\n\n  async getReviewsByProperty(propertyId: number): Promise<Review[]> {\n    return await db.select().from(reviews).where(eq(reviews.propertyId, propertyId));\n  }\n\n  async getFeaturedReviews(): Promise<Review[]> {\n    return await db.select().from(reviews).where(eq(reviews.featured, true));\n  }\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<number, User>;\n  private properties: Map<number, Property>;\n  private inquiries: Map<number, Inquiry>;\n  private currentUserId: number;\n  private currentPropertyId: number;\n  private currentInquiryId: number;\n\n  constructor() {\n    this.users = new Map();\n    this.properties = new Map();\n    this.inquiries = new Map();\n    this.currentUserId = 1;\n    this.currentPropertyId = 1;\n    this.currentInquiryId = 1;\n    \n    // Initialize with sample properties\n    this.initializeProperties();\n  }\n\n  private initializeProperties() {\n    const sampleProperties: InsertProperty[] = [\n      {\n        name: \"Beautiful 1BR | Burj View from Infinity Pool\",\n        description: \"This stunning 1-bedroom apartment offers comfort and cosy vibes, perfect for couples, families or solo travellers. Enjoy high-speed Wi-Fi (800 Mbps), a fully equipped kitchen, 2 smart TV's with FREE NETFLIX , furnished balcony, queen-sized bed, and a full bathroom. The building features an infinity pool with Burj Khalifa views, a modern gym, a workspace area and a kids' play area, making it an ideal retreat for all in the heart of Downtown, Dubai.\\n\\nThe space\\nLiving Room & Balcony:\\nThe spacious, open-plan living area is filled with natural light and features a comfortable sofa bed, a Smart TV with Netflix for entertainment, and a balcony that offers charming views of Dubai's cityscape‚Äîperfect for enjoying your morning coffee or unwinding in the evening.\\n\\nBedroom & Bathroom\\nRelax in the cozy bedroom, featuring a queen-size bed, premium linens, and a Smart TV, ideal for enjoying Netflix nights.\\n\\nFully Equipped Kitchen:\\nThe sleek, modern kitchen is fully stocked with stainless steel appliances, including a toaster, tea and coffee station, oven, refrigerator, and washing machine, along with cleaning essentials. Enjoy meals at the dining table for four.\",\n        pricePerNight: \"0.00\",\n\n        bedrooms: 1,\n        bathrooms: 1,\n        maxGuests: 4,\n        location: \"Downtown Dubai\",\n        amenities: [\"Burj Khalifa Views\", \"Infinity Pool Access\", \"High-Speed WiFi (800 Mbps)\", \"2 Smart TVs with Netflix\", \"Fully Equipped Kitchen\", \"Modern Gym\", \"Kids Play Area\", \"Workspace Area\", \"Queen-Sized Bed\", \"Furnished Balcony\"],\n        images: [\n          \"/attached_assets/WhatsApp Image 2025-07-23 at 10.21.20_51cd866c_1753288433584.jpg\",\n          \"/attached_assets/WhatsApp Image 2025-07-23 at 10.21.19_9b8a1867_1753288413659.jpg\",\n          \"/attached_assets/WhatsApp Image 2025-07-23 at 10.21.19_609dd4ba_1753288427064.jpg\"\n        ],\n        rating: \"5.0\",\n        featured: true,\n        category: \"penthouse\"\n      },\n      {\n        name: \"Stunning 1BR | Burj View from Infinity Pool\",\n        description: \"This stunning 1-bedroom apartment offers comfort and cosy vibes, perfect for couples, families or solo travellers. Enjoy high-speed Wi-Fi (800 Mbps), a fully equipped kitchen, 2 smart TV's with FREE NETFLIX , furnished balcony, queen-sized bed, and a full bathroom. The building features an infinity pool with Burj Khalifa views, a modern gym, a workspace area and a kids' play area, making it an ideal retreat for all in the heart of Downtown, Dubai.\\n\\nThe space\\nLiving Room & Balcony:\\nThe spacious, open-plan living area is filled with natural light and features a comfortable sofa bed, a Smart TV with Netflix for entertainment, and a balcony that offers charming views of Dubai's cityscape‚Äîperfect for enjoying your morning coffee or unwinding in the evening.\\n\\nBedroom & Bathroom\\nRelax in the cozy bedroom, featuring a queen-size bed, premium linens, and a Smart TV, ideal for enjoying Netflix nights.\\n\\nFully Equipped Kitchen:\\nThe sleek, modern kitchen is fully stocked with stainless steel appliances, including a toaster, tea and coffee station, oven, refrigerator, and washing machine, along with cleaning essentials. Enjoy meals at the dining table for four.\",\n        pricePerNight: \"0.00\",\n        bedrooms: 1,\n        bathrooms: 1,\n        maxGuests: 4,\n        location: \"Downtown Dubai\",\n        amenities: [\"Burj Khalifa Views\", \"Infinity Pool Access\", \"High-Speed WiFi (800 Mbps)\", \"2 Smart TVs with Netflix\", \"Fully Equipped Kitchen\", \"Modern Gym\", \"Kids Play Area\", \"Workspace Area\", \"Queen-Sized Bed\", \"Furnished Balcony\"],\n        images: [\n          \"/attached_assets/image_1753290137804.png\",\n          \"/attached_assets/image_1753290144736.png\",\n          \"/attached_assets/image_1753290150408.png\",\n          \"/attached_assets/image_1753290161945.png\",\n          \"/attached_assets/image_1753290176499.png\"\n        ],\n        rating: \"4.9\",\n        featured: false,\n        category: \"penthouse\"\n      }\n    ];\n\n    sampleProperties.forEach(property => {\n      this.createProperty(property);\n    });\n  }\n\n  async getUser(id: number): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = this.currentUserId++;\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async getAllProperties(): Promise<Property[]> {\n    return Array.from(this.properties.values());\n  }\n\n  async getProperty(id: number): Promise<Property | undefined> {\n    return this.properties.get(id);\n  }\n\n  async getFeaturedProperties(): Promise<Property[]> {\n    return Array.from(this.properties.values()).filter(property => property.featured);\n  }\n\n  async getPropertiesByCategory(category: string): Promise<Property[]> {\n    return Array.from(this.properties.values()).filter(property => property.category === category);\n  }\n\n  async createProperty(insertProperty: InsertProperty): Promise<Property> {\n    const id = this.currentPropertyId++;\n    const property: Property = { \n      ...insertProperty, \n      id,\n      featured: insertProperty.featured ?? false\n    };\n    this.properties.set(id, property);\n    return property;\n  }\n\n  async createInquiry(insertInquiry: InsertInquiry): Promise<Inquiry> {\n    const id = this.currentInquiryId++;\n    const createdAt = new Date().toISOString();\n    const inquiry: Inquiry = { \n      ...insertInquiry, \n      id, \n      createdAt,\n      propertyId: insertInquiry.propertyId ?? null\n    };\n    this.inquiries.set(id, inquiry);\n    return inquiry;\n  }\n\n  async getAllInquiries(): Promise<Inquiry[]> {\n    return Array.from(this.inquiries.values());\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":10388},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2254},"shared/schema.ts":{"content":"import { pgTable, text, serial, integer, boolean, decimal, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { relations } from \"drizzle-orm\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: serial(\"id\").primaryKey(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const properties = pgTable(\"properties\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  pricePerNight: decimal(\"price_per_night\", { precision: 10, scale: 2 }).notNull(),\n  bedrooms: integer(\"bedrooms\").notNull(),\n  bathrooms: integer(\"bathrooms\").notNull(),\n  maxGuests: integer(\"max_guests\").notNull(),\n  location: text(\"location\").notNull(),\n  amenities: text(\"amenities\").array().notNull(),\n  images: text(\"images\").array().notNull(),\n  rating: decimal(\"rating\", { precision: 2, scale: 1 }).notNull(),\n  featured: boolean(\"featured\").default(false),\n  category: text(\"category\").notNull(), // \"beachfront\", \"villa\", \"penthouse\", \"mansion\", \"retreat\"\n});\n\nexport const inquiries = pgTable(\"inquiries\", {\n  id: serial(\"id\").primaryKey(),\n  firstName: text(\"first_name\").notNull(),\n  lastName: text(\"last_name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\").notNull(),\n  checkInDate: text(\"check_in_date\").notNull(),\n  checkOutDate: text(\"check_out_date\").notNull(),\n  message: text(\"message\").notNull(),\n  propertyId: integer(\"property_id\"),\n  createdAt: text(\"created_at\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertPropertySchema = createInsertSchema(properties).omit({\n  id: true,\n});\n\nexport const insertInquirySchema = createInsertSchema(inquiries).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Reviews table for guest testimonials\nexport const reviews = pgTable(\"reviews\", {\n  id: serial(\"id\").primaryKey(),\n  guestName: text(\"guest_name\").notNull(),\n  guestLocation: text(\"guest_location\"),\n  propertyId: integer(\"property_id\").references(() => properties.id),\n  rating: integer(\"rating\").notNull(), // 1-5 stars\n  title: text(\"title\"),\n  content: text(\"content\").notNull(),\n  stayDate: timestamp(\"stay_date\"),\n  featured: boolean(\"featured\").default(false),\n  verified: boolean(\"verified\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Relations\nexport const reviewsRelations = relations(reviews, ({ one }) => ({\n  property: one(properties, {\n    fields: [reviews.propertyId],\n    references: [properties.id],\n  }),\n}));\n\nexport const propertiesRelations = relations(properties, ({ many }) => ({\n  reviews: many(reviews),\n}));\n\n// Insert schemas\nexport const insertReviewSchema = createInsertSchema(reviews).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Types\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type Property = typeof properties.$inferSelect;\nexport type InsertProperty = z.infer<typeof insertPropertySchema>;\nexport type Inquiry = typeof inquiries.$inferSelect;\nexport type InsertInquiry = z.infer<typeof insertInquirySchema>;\nexport type Review = typeof reviews.$inferSelect;\nexport type InsertReview = z.infer<typeof insertReviewSchema>;\n","size_bytes":3333},"client/src/App.tsx":{"content":"import { useEffect } from \"react\";\nimport { Switch, Route, useLocation } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Home from \"@/pages/home\";\nimport Properties from \"@/pages/properties\";\nimport PropertyDetail from \"@/pages/property-detail\";\nimport About from \"@/pages/about\";\nimport Guidebook from \"@/pages/guidebook\";\nimport Reviews from \"@/pages/reviews\";\nimport Contact from \"@/pages/contact\";\nimport Terms from \"@/pages/terms\";\nimport RefundPolicy from \"@/pages/refund-policy\";\nimport HouseRules from \"@/pages/house-rules\";\nimport PrivacyPolicy from \"@/pages/privacy-policy\";\nimport NotFound from \"@/pages/not-found\";\nimport Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\n\n// Component to handle scroll to top on route change\nfunction ScrollToTop() {\n  const [location] = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  return null;\n}\n\nfunction Router() {\n  return (\n    <>\n      <ScrollToTop />\n      <Navigation />\n      <Switch>\n        <Route path=\"/\" component={Home} />\n        <Route path=\"/properties\" component={Properties} />\n        <Route path=\"/properties/:id\" component={PropertyDetail} />\n        <Route path=\"/property/:id\" component={PropertyDetail} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/guidebook\" component={Guidebook} />\n        <Route path=\"/reviews\" component={Reviews} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route path=\"/terms\" component={Terms} />\n        <Route path=\"/refund-policy\" component={RefundPolicy} />\n        <Route path=\"/house-rules\" component={HouseRules} />\n        <Route path=\"/privacy-policy\" component={PrivacyPolicy} />\n        <Route component={NotFound} />\n      </Switch>\n      <Footer />\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":2212},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700;800&family=Inter:wght@200;300;400;500;600;700&family=Cormorant+Garamond:wght@300;400;500;600;700&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* Hide scrollbar for webkit browsers (Chrome, Safari, Edge) */\n::-webkit-scrollbar {\n  width: 0px;\n  background: transparent;\n}\n\n/* Hide scrollbar for Firefox */\nhtml {\n  scrollbar-width: none;\n}\n\n/* Alternative method for all browsers */\nbody {\n  overflow-x: hidden;\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* Internet Explorer and Edge */\n}\n\nbody::-webkit-scrollbar {\n  display: none; /* Webkit browsers */\n}\n\n/* Custom Spacing Utilities */\n.luxury-section {\n  padding-top: 2rem !important;\n  padding-bottom: 2rem !important;\n}\n\n.luxury-gap-small {\n  gap: 1rem !important;\n}\n\n.luxury-gap-medium {\n  gap: 1.5rem !important;\n}\n\n.luxury-padding-reduced {\n  padding: 1rem !important;\n}\n\n/* React Day Picker Styles */\n.rdp {\n  --rdp-cell-size: 40px;\n  --rdp-accent-color: hsl(142, 76%, 36%); /* green for available dates */\n  --rdp-background-color: hsl(142, 76%, 95%); /* light green background */\n  --rdp-accent-color-dark: hsl(142, 76%, 26%); /* darker green */\n  --rdp-background-color-dark: hsl(142, 76%, 95%);\n  --rdp-outline: 2px solid var(--rdp-accent-color);\n  --rdp-outline-selected: 3px solid var(--rdp-accent-color);\n  --rdp-background-color-selected: var(--rdp-accent-color);\n  \n  margin: 0;\n  font-family: inherit;\n}\n\n.rdp-day_selected {\n  background-color: var(--rdp-accent-color) !important;\n  color: white !important;\n}\n\n.rdp-day_today {\n  border: 2px solid hsl(38, 61%, 73%); /* gold border for today */\n  background-color: hsl(142, 76%, 90%) !important; /* light green for today */\n}\n\n.rdp-day:hover:not(.rdp-day_selected):not(.rdp-day_disabled):not(.rdp-day_booked) {\n  background-color: hsl(142, 76%, 85%) !important; /* green hover for available dates */\n}\n\n/* Premium Calendar Styles */\n.luxury-calendar .rdp-day {\n  @apply w-10 h-10 rounded-lg border-0 text-sm font-medium transition-all duration-300;\n  background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);\n  color: hsl(var(--luxury-bronze));\n  border: 2px solid transparent !important;\n}\n\n.luxury-calendar .rdp-day:hover:not(.rdp-day_selected):not(.rdp-day_disabled):not(.rdp-day_booked) {\n  background: linear-gradient(135deg, hsl(var(--luxury-gold)) 0%, hsl(var(--luxury-dark-gold)) 100%) !important;\n  color: white !important;\n  transform: scale(1.05);\n  box-shadow: 0 8px 25px rgba(218, 165, 32, 0.3);\n}\n\n.luxury-calendar .rdp-day_selected {\n  background: linear-gradient(135deg, hsl(var(--luxury-gold)) 0%, hsl(var(--luxury-dark-gold)) 100%) !important;\n  color: white !important;\n  transform: scale(1.05);\n  box-shadow: 0 8px 25px rgba(218, 165, 32, 0.4);\n}\n\n/* Available dates styling - Green theme */\n.rdp-day:not(.rdp-day_disabled):not(.rdp-day_booked) {\n  background: linear-gradient(135deg, #dcfce7 0%, #bbf7d0 100%) !important;\n  color: #166534 !important;\n  border: 1px solid #22c55e !important;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n}\n\n.rdp-day:hover:not(.rdp-day_selected):not(.rdp-day_disabled):not(.rdp-day_booked) {\n  background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%) !important;\n  color: white !important;\n  transform: scale(1.05);\n  box-shadow: 0 4px 15px rgba(34, 197, 94, 0.3);\n}\n\n/* Booked dates styling */\n.rdp-day_booked {\n  background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%) !important;\n  color: white !important;\n  border: 1px solid #dc2626 !important;\n  border-radius: 8px;\n  cursor: not-allowed;\n}\n\n.rdp-day_booked:hover {\n  background: linear-gradient(135deg, #dc2626 0%, #b91c1c 100%) !important;\n  transform: none;\n}\n\n\n\n.rdp-button:focus-visible {\n  outline: var(--rdp-outline);\n}\n\n.rdp-months {\n  display: flex;\n}\n\n.rdp-month {\n  margin: 0;\n}\n\n.rdp-table {\n  margin: 0;\n  max-width: none;\n}\n\n.rdp-with_weeknumber .rdp-table {\n  max-width: none;\n}\n\n.rdp-head_cell {\n  vertical-align: middle;\n  text-align: center;\n  height: 40px;\n  padding: 0;\n  font-weight: 500;\n  font-size: 0.75rem;\n  color: hsl(28, 84%, 30%); /* luxury-bronze */\n}\n\n.rdp-row {\n  border: none;\n}\n\n/* Calendly Widget Styling */\n.calendly-inline-widget {\n  border-radius: 12px !important;\n  border: 1px solid hsl(38, 61%, 73%) !important;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06) !important;\n}\n\n.calendly-inline-widget iframe {\n  border-radius: 12px !important;\n}\n\n:root {\n  --background: 43 36% 95%; /* Warm cream background */\n  --foreground: 32 20% 15%; /* Dark brown text */\n  --muted: 38 25% 85%;\n  --muted-foreground: 32 15% 45%;\n  --popover: 43 36% 95%;\n  --popover-foreground: 32 20% 15%;\n  --card: 43 36% 95%;\n  --card-foreground: 32 20% 15%;\n  --border: 38 25% 80%;\n  --input: 38 25% 80%;\n  --primary: 38 45% 65%; /* Warm gold */\n  --primary-foreground: 32 20% 15%;\n  --secondary: 38 25% 85%;\n  --secondary-foreground: 32 20% 15%;\n  --accent: 38 45% 65%;\n  --accent-foreground: 32 20% 15%;\n  --destructive: 0 84.2% 60.2%;\n  --destructive-foreground: 43 36% 95%;\n  --ring: 38 45% 65%;\n  --radius: 0.75rem;\n  \n  /* Custom luxury colors */\n  --luxury-cream: 43 38% 96%;\n  --luxury-beige: 38 28% 87%;\n  --luxury-gold: 38 55% 68%;\n  --luxury-dark-gold: 38 65% 58%;\n  --luxury-bronze: 30 40% 45%;\n  --luxury-brown: 32 25% 12%;\n  --luxury-light-brown: 32 18% 42%;\n  --luxury-white: 0 0% 100%;\n  --luxury-pearl: 43 15% 92%;\n  --luxury-champagne: 45 35% 85%;\n}\n\n.dark {\n  --background: 32 20% 15%;\n  --foreground: 43 36% 95%;\n  --muted: 32 15% 25%;\n  --muted-foreground: 38 25% 75%;\n  --popover: 32 20% 15%;\n  --popover-foreground: 43 36% 95%;\n  --card: 32 20% 15%;\n  --card-foreground: 43 36% 95%;\n  --border: 32 15% 25%;\n  --input: 32 15% 25%;\n  --primary: 38 45% 65%;\n  --primary-foreground: 32 20% 15%;\n  --secondary: 32 15% 25%;\n  --secondary-foreground: 43 36% 95%;\n  --accent: 38 45% 65%;\n  --accent-foreground: 32 20% 15%;\n  --destructive: 0 62.8% 30.6%;\n  --destructive-foreground: 43 36% 95%;\n  --ring: 38 45% 65%;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased text-foreground;\n    font-family: 'Inter', sans-serif;\n    background: linear-gradient(135deg, hsl(var(--luxury-cream)) 0%, hsl(var(--luxury-pearl)) 50%, hsl(var(--luxury-champagne)) 100%);\n    min-height: 100vh;\n    font-weight: 300;\n    line-height: 1.6;\n  }\n  \n  h1, h2, h3, h4, h5, h6 {\n    font-family: 'Playfair Display', serif;\n    color: hsl(var(--luxury-brown));\n    font-weight: 500;\n    letter-spacing: -0.02em;\n    line-height: 1.2;\n  }\n  \n  h1 {\n    font-weight: 700;\n    letter-spacing: -0.04em;\n  }\n  \n  .luxury-serif {\n    font-family: 'Cormorant Garamond', serif;\n  }\n\n  html {\n    scroll-behavior: smooth;\n  }\n  \n  /* Text wrapping and overflow prevention for policy pages */\n  .break-words {\n    word-wrap: break-word;\n    overflow-wrap: break-word;\n    word-break: break-word;\n    hyphens: auto;\n  }\n\n  .overflow-wrap-anywhere {\n    overflow-wrap: anywhere;\n  }\n\n  /* Enhanced prose styling for mobile */\n  .prose h2 {\n    @apply break-words leading-tight;\n  }\n\n  .prose h3 {\n    @apply break-words leading-tight;\n  }\n\n  .prose p {\n    @apply break-words leading-relaxed;\n  }\n\n  .prose ul {\n    @apply break-words;\n  }\n\n  .prose li {\n    @apply break-words;\n  }\n\n  /* Ensure content stays within bounds */\n  .overflow-hidden {\n    overflow-x: hidden;\n  }\n\n  /* Mobile-specific improvements */\n  @media (max-width: 640px) {\n    .prose {\n      font-size: 0.875rem;\n      line-height: 1.5;\n    }\n    \n    .prose h1 {\n      font-size: 1.5rem;\n      line-height: 1.3;\n    }\n    \n    .prose h2 {\n      font-size: 1.25rem;\n      line-height: 1.4;\n    }\n    \n    .prose h3 {\n      font-size: 1.125rem;\n      line-height: 1.4;\n    }\n  }\n}\n\n@layer components {\n  .luxury-button {\n    @apply px-10 py-4 rounded-full font-bold transition-all duration-500 hover:shadow-2xl;\n    background: linear-gradient(135deg, hsl(var(--luxury-gold)) 0%, hsl(var(--luxury-dark-gold)) 100%);\n    color: #000000;\n    border: 2px solid transparent;\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n    font-size: 0.875rem;\n    font-weight: 700;\n  }\n  \n  .luxury-button:hover {\n    background: linear-gradient(135deg, hsl(var(--luxury-brown)) 0%, hsl(var(--luxury-bronze)) 100%);\n    color: hsl(var(--luxury-cream));\n    transform: translateY(-3px);\n    box-shadow: 0 16px 48px rgba(0, 0, 0, 0.2);\n  }\n  \n  .luxury-card {\n    @apply rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-500;\n    background: linear-gradient(135deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.7) 100%);\n    border: 1px solid hsl(var(--luxury-gold) / 0.2);\n    backdrop-filter: blur(20px);\n  }\n  \n  .luxury-card:hover {\n    transform: translateY(-8px);\n    border-color: hsl(var(--luxury-gold) / 0.4);\n  }\n  \n  .luxury-text {\n    color: hsl(var(--luxury-light-brown));\n    line-height: 1.7;\n  }\n  \n  .luxury-accent {\n    background: linear-gradient(135deg, hsl(var(--luxury-gold)) 0%, hsl(var(--luxury-dark-gold)) 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n  \n  .luxury-bg {\n    background: linear-gradient(135deg, hsl(var(--luxury-cream)) 0%, hsl(var(--luxury-pearl)) 50%, hsl(var(--luxury-champagne)) 100%);\n  }\n  \n  .luxury-nav {\n    background: rgba(255, 255, 255, 0.92);\n    backdrop-filter: blur(20px);\n    border-bottom: 1px solid hsl(var(--luxury-gold) / 0.2);\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  }\n  \n  .luxury-heading {\n    font-family: 'Playfair Display', serif;\n    font-weight: 700;\n    letter-spacing: -0.03em;\n    line-height: 1.1;\n  }\n  \n  .luxury-subheading {\n    font-family: 'Playfair Display', serif;\n    font-weight: 600;\n    letter-spacing: -0.02em;\n  }\n  \n  .luxury-glass {\n    background: rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(20px);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n  }\n  \n  .luxury-shadow {\n    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\n  }\n\n  .luxury-shadow-sm {\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);\n  }\n\n  /* Enhanced Calendar Styles */\n  .luxury-calendar .rdp-caption {\n    @apply mb-6;\n  }\n\n  .luxury-calendar .rdp-caption_label {\n    @apply text-xl font-bold text-luxury-brown luxury-serif text-center;\n  }\n\n  .luxury-calendar .rdp-nav {\n    @apply flex items-center justify-between mb-4 relative;\n  }\n\n  .luxury-calendar .rdp-nav_button {\n    @apply w-10 h-10 rounded-xl hover:bg-luxury-gold hover:text-white transition-all duration-300 flex items-center justify-center;\n    background-color: hsl(var(--luxury-gold) / 0.1);\n  }\n\n  .luxury-calendar .rdp-nav_button[name=\"previous-month\"] {\n    @apply absolute left-0;\n  }\n\n  .luxury-calendar .rdp-nav_button[name=\"next-month\"] {\n    @apply absolute right-0;\n  }\n\n  .luxury-calendar .rdp-head_cell {\n    @apply text-sm font-semibold text-luxury-bronze uppercase tracking-wider py-3;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n\n  .luxury-calendar .rdp-table {\n    @apply w-full table-fixed;\n    border-spacing: 2px;\n  }\n\n  .luxury-calendar .rdp-head_cell,\n  .luxury-calendar .rdp-cell {\n    width: 14.28%; /* 100% / 7 days */\n    text-align: center;\n  }\n\n  .luxury-calendar .rdp-day {\n    @apply w-full h-9 rounded-lg text-sm font-medium mx-auto;\n    min-width: 36px;\n    max-width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  /* Responsive calendar sizing */\n  @media (max-width: 480px) {\n    .luxury-calendar .rdp-day {\n      @apply h-8 text-xs;\n      min-width: 28px;\n    }\n    \n    .luxury-calendar .rdp-table {\n      border-spacing: 1px;\n    }\n    \n    .luxury-calendar .rdp-head_cell {\n      @apply text-xs py-2;\n    }\n  }\n}\n\n/* Enhanced image quality settings */\nimg {\n  image-rendering: -webkit-optimize-contrast;\n  image-rendering: crisp-edges;\n  backface-visibility: hidden;\n  transform: translateZ(0);\n}\n\n.property-image {\n  image-rendering: -webkit-optimize-contrast;\n  filter: contrast(1.05) saturate(1.1) brightness(1.02);\n  transition: filter 0.3s ease, transform 0.3s ease;\n}\n\n.property-image:hover {\n  filter: contrast(1.08) saturate(1.15) brightness(1.05);\n}\n\n/* Mobile responsive improvements for calendar */\n@media (max-width: 640px) {\n  .luxury-calendar {\n    font-size: 0.875rem;\n  }\n  \n  .luxury-calendar .rdp-table {\n    width: 100%;\n  }\n  \n  .luxury-calendar .rdp-day {\n    width: 2rem !important;\n    height: 2rem !important;\n    font-size: 0.75rem !important;\n  }\n  \n  .luxury-calendar .rdp-caption_label {\n    font-size: 1rem !important;\n  }\n  \n  .luxury-calendar .rdp-nav_button {\n    width: 2rem !important;\n    height: 2rem !important;\n  }\n}\n\n/* Mobile responsive improvements for navigation */\n@media (max-width: 768px) {\n  .property-card {\n    margin-bottom: 1rem;\n  }\n  \n  .luxury-card {\n    border-radius: 1rem;\n  }\n}\n\n@layer utilities {\n  .text-luxury-cream { color: hsl(var(--luxury-cream)); }\n  .text-luxury-beige { color: hsl(var(--luxury-beige)); }\n  .text-luxury-gold { color: hsl(var(--luxury-gold)); }\n  .text-luxury-dark-gold { color: hsl(var(--luxury-dark-gold)); }\n  .text-luxury-bronze { color: hsl(var(--luxury-bronze)); }\n  .text-luxury-brown { color: hsl(var(--luxury-brown)); }\n  .text-luxury-light-brown { color: hsl(var(--luxury-light-brown)); }\n  .text-luxury-white { color: hsl(var(--luxury-white)); }\n  .text-luxury-pearl { color: hsl(var(--luxury-pearl)); }\n  .text-luxury-champagne { color: hsl(var(--luxury-champagne)); }\n  \n  .bg-luxury-cream { background-color: hsl(var(--luxury-cream)); }\n  .bg-luxury-beige { background-color: hsl(var(--luxury-beige)); }\n  .bg-luxury-gold { background-color: hsl(var(--luxury-gold)); }\n  .bg-luxury-dark-gold { background-color: hsl(var(--luxury-dark-gold)); }\n  .bg-luxury-bronze { background-color: hsl(var(--luxury-bronze)); }\n  .bg-luxury-brown { background-color: hsl(var(--luxury-brown)); }\n  .bg-luxury-light-brown { background-color: hsl(var(--luxury-light-brown)); }\n  .bg-luxury-white { background-color: hsl(var(--luxury-white)); }\n  .bg-luxury-pearl { background-color: hsl(var(--luxury-pearl)); }\n  .bg-luxury-champagne { background-color: hsl(var(--luxury-champagne)); }\n}\n\n/* Custom animations */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes luxury-float {\n  0%, 100% {\n    transform: translateY(0px);\n  }\n  50% {\n    transform: translateY(-10px);\n  }\n}\n\n.animate-fade-in-up {\n  animation: fadeInUp 0.8s ease-out;\n}\n\n.animate-luxury-float {\n  animation: luxury-float 6s ease-in-out infinite;\n}\n\n/* Property card hover effects */\n.property-card {\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.property-card:hover {\n  transform: translateY(-12px);\n  box-shadow: 0 25px 50px -12px rgba(38, 38, 38, 0.25);\n}\n\n/* Hero section styling */\n.hero-overlay {\n  background: linear-gradient(\n    135deg,\n    rgba(38, 38, 38, 0.3) 0%,\n    rgba(38, 38, 38, 0.1) 50%,\n    rgba(38, 38, 38, 0.3) 100%\n  );\n}\n\n/* Navigation styling */\n.nav-backdrop {\n  backdrop-filter: blur(15px);\n  background: rgba(255, 255, 255, 0.85);\n  border-bottom: 1px solid hsl(var(--luxury-beige));\n}\n\n/* Luxury typography */\n.luxury-heading {\n  font-family: 'Playfair Display', serif;\n  font-weight: 500;\n  letter-spacing: -0.025em;\n  line-height: 1.2;\n}\n\n.luxury-subheading {\n  font-family: 'Playfair Display', serif;\n  font-weight: 400;\n  letter-spacing: 0.025em;\n}\n\n.luxury-body {\n  font-family: 'Inter', sans-serif;\n  font-weight: 400;\n  line-height: 1.6;\n}\n\n/* Elegant section spacing */\n.luxury-section {\n  padding: 6rem 0;\n}\n\n/* Smooth scrolling */\n.scroll-smooth {\n  scroll-behavior: smooth;\n}\n\n/* Glass morphism effect */\n.glass-effect {\n  background: rgba(255, 255, 255, 0.25);\n  backdrop-filter: blur(20px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}","size_bytes":15943},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/admin-review-form.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nconst reviewFormSchema = z.object({\n  guestName: z.string().min(2, \"Guest name must be at least 2 characters\"),\n  guestLocation: z.string().optional(),\n  propertyId: z.number().min(1, \"Please select a property\"),\n  rating: z.number().min(1).max(5, \"Rating must be between 1 and 5\"),\n  title: z.string().optional(),\n  content: z.string().min(10, \"Review content must be at least 10 characters\"),\n  stayDate: z.string().optional(),\n  featured: z.boolean().default(false),\n  verified: z.boolean().default(true),\n});\n\ntype ReviewFormData = z.infer<typeof reviewFormSchema>;\n\ninterface AdminReviewFormProps {\n  onSuccess?: () => void;\n}\n\nexport function AdminReviewForm({ onSuccess }: AdminReviewFormProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const form = useForm<ReviewFormData>({\n    resolver: zodResolver(reviewFormSchema),\n    defaultValues: {\n      guestName: \"\",\n      guestLocation: \"\",\n      propertyId: 15, // Default to the main property\n      rating: 5,\n      title: \"\",\n      content: \"\",\n      stayDate: \"\",\n      featured: false,\n      verified: true,\n    },\n  });\n\n  const createReviewMutation = useMutation({\n    mutationFn: async (data: ReviewFormData) => {\n      const reviewData = {\n        ...data,\n        stayDate: data.stayDate ? new Date(data.stayDate).toISOString() : null,\n      };\n      return apiRequest(\"/api/reviews\", {\n        method: \"POST\",\n        body: JSON.stringify(reviewData),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/reviews\"] });\n      toast({\n        title: \"Success\",\n        description: \"Review added successfully!\",\n      });\n      form.reset();\n      setIsOpen(false);\n      onSuccess?.();\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to add review\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: ReviewFormData) => {\n    createReviewMutation.mutate(data);\n  };\n\n  return (\n    <div className=\"mb-8\">\n      {!isOpen ? (\n        <Button \n          onClick={() => setIsOpen(true)}\n          className=\"bg-amber-600 hover:bg-amber-700 text-white\"\n        >\n          Add New Review\n        </Button>\n      ) : (\n        <Card className=\"max-w-2xl mx-auto\">\n          <CardHeader>\n            <CardTitle className=\"text-amber-900\">Add New Guest Review</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormField\n                    control={form.control}\n                    name=\"guestName\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Guest Name</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"John Smith\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"guestLocation\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Guest Location</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"London, UK\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormField\n                    control={form.control}\n                    name=\"rating\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Rating</FormLabel>\n                        <Select onValueChange={(value) => field.onChange(parseInt(value))}>\n                          <FormControl>\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Select rating\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            <SelectItem value=\"5\">5 Stars</SelectItem>\n                            <SelectItem value=\"4\">4 Stars</SelectItem>\n                            <SelectItem value=\"3\">3 Stars</SelectItem>\n                            <SelectItem value=\"2\">2 Stars</SelectItem>\n                            <SelectItem value=\"1\">1 Star</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"stayDate\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Stay Date</FormLabel>\n                        <FormControl>\n                          <Input type=\"date\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n\n                <FormField\n                  control={form.control}\n                  name=\"title\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Review Title (Optional)</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Amazing stay in Dubai!\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"content\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Review Content</FormLabel>\n                      <FormControl>\n                        <Textarea \n                          placeholder=\"Tell us about your experience...\"\n                          rows={4}\n                          {...field} \n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <div className=\"flex items-center space-x-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"featured\"\n                    render={({ field }) => (\n                      <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\n                        <div className=\"space-y-0.5\">\n                          <FormLabel className=\"text-base\">Featured Review</FormLabel>\n                          <div className=\"text-sm text-muted-foreground\">\n                            Display this review prominently on the homepage\n                          </div>\n                        </div>\n                        <FormControl>\n                          <Switch\n                            checked={field.value}\n                            onCheckedChange={field.onChange}\n                          />\n                        </FormControl>\n                      </FormItem>\n                    )}\n                  />\n                </div>\n\n                <div className=\"flex space-x-4\">\n                  <Button \n                    type=\"submit\" \n                    disabled={createReviewMutation.isPending}\n                    className=\"bg-amber-600 hover:bg-amber-700\"\n                  >\n                    {createReviewMutation.isPending ? \"Adding...\" : \"Add Review\"}\n                  </Button>\n                  <Button \n                    type=\"button\" \n                    variant=\"outline\" \n                    onClick={() => setIsOpen(false)}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </form>\n            </Form>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}","size_bytes":9209},"client/src/components/booking-calendar.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { DayPicker } from \"react-day-picker\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Calendar as CalendarIcon, Users, ExternalLink } from \"lucide-react\";\nimport { FaWhatsapp } from \"react-icons/fa\";\nimport { format, parseISO, isWithinInterval, startOfDay, endOfDay, addDays } from \"date-fns\";\n\ninterface Booking {\n  id: string;\n  summary: string;\n  start: string;\n  end: string;\n  status: string;\n}\n\ninterface AvailabilityData {\n  propertyId: number;\n  lastUpdated: string;\n  bookings: Booking[];\n}\n\ninterface BookingCalendarProps {\n  propertyId: number;\n  maxGuests: number;\n  propertyName: string;\n}\n\nconst BookingCalendar = ({ propertyId, maxGuests, propertyName }: BookingCalendarProps) => {\n  const [guests, setGuests] = useState(1);\n  const [checkIn, setCheckIn] = useState<Date>();\n  const [checkOut, setCheckOut] = useState<Date>();\n  const [showCalendar, setShowCalendar] = useState<'checkin' | 'checkout' | null>(null);\n\n\n  // Check for URL parameters on component mount to pre-fill dates\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const checkInParam = urlParams.get('checkIn');\n    const checkOutParam = urlParams.get('checkOut');\n    \n    if (checkInParam && checkOutParam) {\n      try {\n        const checkInDate = new Date(checkInParam);\n        const checkOutDate = new Date(checkOutParam);\n        \n        // Validate dates are not in the past and check-out is after check-in\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n        \n        if (checkInDate >= today && checkOutDate > checkInDate) {\n          setCheckIn(checkInDate);\n          setCheckOut(checkOutDate);\n        }\n      } catch (error) {\n        console.log('Error parsing URL dates:', error);\n      }\n    }\n    \n    // Clear URL parameters after reading them to prevent persistence on refresh\n    if (checkInParam || checkOutParam) {\n      const newUrl = new URL(window.location.href);\n      newUrl.searchParams.delete('checkIn');\n      newUrl.searchParams.delete('checkOut');\n      window.history.replaceState({}, '', newUrl.toString());\n    }\n  }, []);\n\n  // Fetch availability data from Hostex iCal\n  const { data: availabilityData, isLoading: isLoadingAvailability, refetch } = useQuery<AvailabilityData>({\n    queryKey: [`/api/properties/${propertyId}/availability`],\n    refetchInterval: 2 * 60 * 1000, // Refetch every 2 minutes (more frequent)\n    staleTime: 30 * 1000, // Consider data stale after 30 seconds\n  });\n\n  // Create function to check if a date is booked\n  const isDateBooked = (date: Date) => {\n    if (!availabilityData?.bookings) return false;\n    \n    const dayStart = startOfDay(date);\n    const dayEnd = endOfDay(date);\n    \n    return availabilityData.bookings.some(booking => {\n      const bookingStart = parseISO(booking.start);\n      const bookingEnd = parseISO(booking.end);\n      \n      return isWithinInterval(dayStart, { start: bookingStart, end: bookingEnd }) ||\n             isWithinInterval(dayEnd, { start: bookingStart, end: bookingEnd }) ||\n             isWithinInterval(bookingStart, { start: dayStart, end: dayEnd });\n    });\n  };\n\n  const handleDateSelect = (date: Date | undefined) => {\n    if (!date || isDateBooked(date)) return;\n\n    if (showCalendar === 'checkin') {\n      setCheckIn(date);\n      setCheckOut(undefined); // Reset checkout when checkin changes\n      setShowCalendar('checkout');\n    } else if (showCalendar === 'checkout') {\n      if (checkIn && date > checkIn) {\n        // Check if any dates between checkin and checkout are booked\n        const daysBetween = [];\n        let currentDate = new Date(checkIn);\n        while (currentDate <= date) {\n          if (isDateBooked(currentDate)) {\n            // Can't book this range as there's a booking in between\n            return;\n          }\n          daysBetween.push(new Date(currentDate));\n          currentDate.setDate(currentDate.getDate() + 1);\n        }\n        setCheckOut(date);\n        setShowCalendar(null);\n      }\n    }\n  };\n\n  // Create function to check if a checkout date is valid\n  const isValidCheckoutDate = (date: Date) => {\n    if (!checkIn || date <= checkIn) return false;\n    if (isDateBooked(date)) return false;\n    \n    // Check if any dates between checkin and this potential checkout are booked\n    let currentDate = new Date(checkIn);\n    currentDate.setDate(currentDate.getDate() + 1); // Start day after checkin\n    \n    while (currentDate < date) {\n      if (isDateBooked(currentDate)) {\n        return false; // There's a booking in between\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    \n    return true;\n  };\n\n  const disabledDays = [\n    { before: new Date() }, // Disable past dates\n    // Disable booked dates\n    ...(availabilityData?.bookings?.map(booking => ({\n      from: parseISO(booking.start),\n      to: parseISO(booking.end)\n    })) || [])\n  ];\n\n  // Create smarter disabled days for checkout calendar  \n  const checkoutDisabledDays = checkIn ? [\n    { before: new Date() }, // Disable past dates\n    { before: checkIn }, // Disable dates before checkin\n    // For checkout, disable any date that would create an invalid booking range\n    (date: Date) => !isValidCheckoutDate(date)\n  ] : disabledDays;\n\n\n\n\n\n  const handleBookingInquiry = () => {\n    if (!checkIn || !checkOut) return;\n    \n    // Create WhatsApp message with booking details\n    const checkInDate = format(checkIn, 'EEEE, MMMM d, yyyy');\n    const checkOutDate = format(checkOut, 'EEEE, MMMM d, yyyy');\n    \n    const message = `Hello! I would like to book ${propertyName} for the following dates:\n\nüìÖ Check-in: ${checkInDate}\nüìÖ Check-out: ${checkOutDate}\nüë• Guests: ${guests}\n\nThanks!`;\n    \n    // WhatsApp API URL\n    const whatsappNumber = \"971558166062\"; // +971 55 816 6062 without + and spaces\n    const encodedMessage = encodeURIComponent(message);\n    const whatsappUrl = `https://wa.me/${whatsappNumber}?text=${encodedMessage}`;\n    \n    // Open WhatsApp in same window\n    window.location.href = whatsappUrl;\n  };\n\n  if (isLoadingAvailability) {\n    return (\n      <Card className=\"sticky top-24 shadow-lg border-0 luxury-card\">\n        <CardContent className=\"p-6\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-luxury-gold mb-1\">\n              Loading Availability...\n            </div>\n            <div className=\"text-luxury-light-brown\">Fetching real-time data from Hostex</div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"sticky top-24 luxury-shadow border-0 luxury-card overflow-hidden\">\n      <div className=\"bg-gradient-to-br from-luxury-gold/5 to-luxury-cream/20 p-1\">\n        <div className=\"bg-white rounded-lg\">\n          <CardContent className=\"p-4 sm:p-6 lg:p-8\">\n\n\n            {/* Date Selection */}\n            <div className=\"space-y-4 mb-8\">\n              {/* Check-in Date */}\n              <div>\n                <button\n                  onClick={() => setShowCalendar(showCalendar === 'checkin' ? null : 'checkin')}\n                  className=\"group relative w-full border-2 border-luxury-cream rounded-xl p-5 text-left hover:border-luxury-gold hover:bg-luxury-gold/5 transition-all duration-300 luxury-shadow-sm\"\n                >\n                  <label className=\"text-sm text-luxury-bronze font-medium uppercase tracking-wide\">Check-in Date</label>\n                  <div className=\"flex items-center mt-3\">\n                    <div className=\"w-12 h-12 bg-luxury-gold/10 rounded-lg flex items-center justify-center mr-4 group-hover:bg-luxury-gold group-hover:text-white transition-all duration-300\">\n                      <CalendarIcon className=\"w-6 h-6 text-luxury-gold group-hover:text-white\" />\n                    </div>\n                    <span className=\"text-luxury-brown font-semibold text-lg\">\n                      {checkIn ? format(checkIn, 'EEEE, MMMM d, yyyy') : 'Select your arrival date'}\n                    </span>\n                  </div>\n                </button>\n\n                {/* Check-in Calendar - appears directly below */}\n                {showCalendar === 'checkin' && (\n                  <div className=\"mt-3 border-2 border-luxury-gold/20 rounded-2xl p-4 sm:p-6 bg-gradient-to-br from-luxury-cream/20 to-white luxury-shadow-sm\">\n                    <div className=\"mb-4 flex items-center\">\n                      <div className=\"w-8 h-8 bg-luxury-gold rounded-full flex items-center justify-center mr-3\">\n                        <CalendarIcon className=\"w-4 h-4 text-white\" />\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold text-luxury-brown text-lg luxury-serif\">Select Check-in Date</h3>\n                      </div>\n                    </div>\n                    \n                    <div className=\"calendar-wrapper mb-4 overflow-hidden\">\n                      <DayPicker\n                        mode=\"single\"\n                        selected={checkIn}\n                        onSelect={handleDateSelect}\n                        disabled={disabledDays}\n                        className=\"luxury-calendar w-full\"\n                        modifiers={{\n                          booked: (date) => isDateBooked(date)\n                        }}\n                        modifiersClassNames={{\n                          booked: 'rdp-day_booked'\n                        }}\n                        weekStartsOn={0}\n                        fixedWeeks={true}\n                        showOutsideDays={true}\n                      />\n                    </div>\n                    \n                    <div className=\"p-4 bg-white rounded-xl border border-luxury-gold/10\">\n                      <div className=\"grid grid-cols-1 gap-2 text-sm\">\n                        <div className=\"flex items-center text-luxury-brown\">\n                          <span className=\"inline-block w-4 h-4 bg-green-500 rounded mr-3\"></span>\n                          <span className=\"font-medium\">Available for booking</span>\n                        </div>\n                        <div className=\"flex items-center text-luxury-brown\">\n                          <span className=\"inline-block w-4 h-4 bg-red-500 rounded mr-3\"></span>\n                          <span className=\"font-medium\">Already booked (unavailable)</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n              \n              {/* Check-out Date */}\n              <div>\n                <button\n                  onClick={() => setShowCalendar(showCalendar === 'checkout' ? null : 'checkout')}\n                  className=\"group relative w-full border-2 border-luxury-cream rounded-xl p-5 text-left hover:border-luxury-gold hover:bg-luxury-gold/5 transition-all duration-300 luxury-shadow-sm disabled:opacity-50 disabled:hover:border-luxury-cream disabled:hover:bg-transparent\"\n                  disabled={!checkIn}\n                >\n                  <label className=\"text-sm text-luxury-bronze font-medium uppercase tracking-wide\">Check-out Date</label>\n                  <div className=\"flex items-center mt-3\">\n                    <div className=\"w-12 h-12 bg-luxury-gold/10 rounded-lg flex items-center justify-center mr-4 group-hover:bg-luxury-gold group-hover:text-white transition-all duration-300\">\n                      <CalendarIcon className=\"w-6 h-6 text-luxury-gold group-hover:text-white\" />\n                    </div>\n                    <span className=\"text-luxury-brown font-semibold text-lg\">\n                      {checkOut ? format(checkOut, 'EEEE, MMMM d, yyyy') : 'Select your departure date'}\n                    </span>\n                  </div>\n                </button>\n\n                {/* Check-out Calendar - appears directly below */}\n                {showCalendar === 'checkout' && (\n                  <div className=\"mt-3 border-2 border-luxury-gold/20 rounded-2xl p-4 sm:p-6 bg-gradient-to-br from-luxury-cream/20 to-white luxury-shadow-sm\">\n                    <div className=\"mb-4 flex items-center\">\n                      <div className=\"w-8 h-8 bg-luxury-gold rounded-full flex items-center justify-center mr-3\">\n                        <CalendarIcon className=\"w-4 h-4 text-white\" />\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold text-luxury-brown text-lg luxury-serif\">Select Check-out Date</h3>\n                      </div>\n                    </div>\n                    \n                    <div className=\"calendar-wrapper mb-4 overflow-hidden\">\n                      <DayPicker\n                        mode=\"single\"\n                        selected={checkOut}\n                        onSelect={handleDateSelect}\n                        disabled={checkoutDisabledDays}\n                        className=\"luxury-calendar w-full\"\n                        modifiers={{\n                          booked: (date) => isDateBooked(date)\n                        }}\n                        modifiersClassNames={{\n                          booked: 'rdp-day_booked'\n                        }}\n                        weekStartsOn={0}\n                        fixedWeeks={true}\n                        showOutsideDays={true}\n                        defaultMonth={checkIn || new Date()}\n                        fromMonth={checkIn || new Date()}\n                      />\n                    </div>\n                    \n                    <div className=\"p-4 bg-white rounded-xl border border-luxury-gold/10\">\n                      <div className=\"grid grid-cols-1 gap-2 text-sm\">\n                        <div className=\"flex items-center text-luxury-brown\">\n                          <span className=\"inline-block w-4 h-4 bg-green-500 rounded mr-3\"></span>\n                          <span className=\"font-medium\">Available for booking</span>\n                        </div>\n                        <div className=\"flex items-center text-luxury-brown\">\n                          <span className=\"inline-block w-4 h-4 bg-red-500 rounded mr-3\"></span>\n                          <span className=\"font-medium\">Already booked (unavailable)</span>\n                        </div>\n\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n\n\n\n            {/* Guests Selection */}\n            <div className={`border-2 rounded-xl p-6 mb-8 luxury-shadow-sm transition-all duration-300 ${\n              !checkIn || !checkOut \n                ? 'border-gray-200 bg-gray-50 opacity-60' \n                : 'border-luxury-cream bg-gradient-to-r from-luxury-cream/20 to-luxury-gold/5'\n            }`}>\n              <div className=\"flex items-center mb-4\">\n                <div className={`w-10 h-10 rounded-lg flex items-center justify-center mr-3 transition-all duration-300 ${\n                  !checkIn || !checkOut \n                    ? 'bg-gray-200' \n                    : 'bg-luxury-gold/10'\n                }`}>\n                  <Users className={`w-5 h-5 transition-all duration-300 ${\n                    !checkIn || !checkOut \n                      ? 'text-gray-400' \n                      : 'text-luxury-gold'\n                  }`} />\n                </div>\n                <div>\n                  <label className={`text-sm font-medium uppercase tracking-wide block transition-all duration-300 ${\n                    !checkIn || !checkOut \n                      ? 'text-gray-400' \n                      : 'text-luxury-bronze'\n                  }`}>Number of Guests</label>\n                  <p className={`text-xs transition-all duration-300 ${\n                    !checkIn || !checkOut \n                      ? 'text-gray-400' \n                      : 'text-luxury-light-brown'\n                  }`}>\n                    {!checkIn || !checkOut \n                      ? 'Please select dates first' \n                      : `Maximum ${maxGuests} guests allowed`\n                    }\n                  </p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <span className={`text-2xl font-bold mr-2 transition-all duration-300 ${\n                    !checkIn || !checkOut \n                      ? 'text-gray-400' \n                      : 'text-luxury-brown'\n                  }`}>\n                    {guests}\n                  </span>\n                  <span className={`font-medium transition-all duration-300 ${\n                    !checkIn || !checkOut \n                      ? 'text-gray-400' \n                      : 'text-luxury-bronze'\n                  }`}>\n                    guest{guests > 1 ? 's' : ''}\n                  </span>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setGuests(Math.max(1, guests - 1))}\n                    disabled={!checkIn || !checkOut || guests <= 1}\n                    className={`h-10 w-10 p-0 border-2 font-bold text-lg transition-all duration-300 rounded-xl ${\n                      !checkIn || !checkOut \n                        ? 'border-gray-300 text-gray-400 cursor-not-allowed hover:bg-transparent hover:text-gray-400' \n                        : 'border-luxury-gold text-luxury-gold hover:bg-luxury-gold hover:text-white'\n                    }`}\n                  >\n                    ‚àí\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setGuests(Math.min(maxGuests, guests + 1))}\n                    disabled={!checkIn || !checkOut || guests >= maxGuests}\n                    className={`h-10 w-10 p-0 border-2 font-bold text-lg transition-all duration-300 rounded-xl ${\n                      !checkIn || !checkOut \n                        ? 'border-gray-300 text-gray-400 cursor-not-allowed hover:bg-transparent hover:text-gray-400' \n                        : 'border-luxury-gold text-luxury-gold hover:bg-luxury-gold hover:text-white'\n                    }`}\n                  >\n                    +\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            {/* Clear Dates Button */}\n            {(checkIn || checkOut) && (\n              <div className=\"mb-4\">\n                <Button\n                  onClick={() => {\n                    setCheckIn(undefined);\n                    setCheckOut(undefined);\n                    setShowCalendar(null);\n                  }}\n                  variant=\"outline\"\n                  className=\"w-full border-2 border-luxury-bronze/30 text-luxury-bronze hover:bg-luxury-bronze hover:text-white transition-all duration-300 rounded-xl py-3\"\n                >\n                  Clear Dates\n                </Button>\n              </div>\n            )}\n\n            {/* Booking Button */}\n            <div className=\"pt-4 border-t-2 border-luxury-gold/10\">\n              <Button \n                onClick={handleBookingInquiry}\n                disabled={!checkIn || !checkOut}\n                className=\"w-full luxury-button text-base py-4 px-4 disabled:opacity-50 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 transition-all duration-500 shadow-xl hover:shadow-2xl transform hover:-translate-y-1 font-semibold\"\n              >\n                <FaWhatsapp className=\"w-4 h-4 mr-2 flex-shrink-0\" />\n                <span className=\"truncate\">\n                  {checkIn && checkOut ? 'Send booking inquiry' : 'SELECT DATES'}\n                </span>\n              </Button>\n              \n              {/* Response Time Message */}\n              {checkIn && checkOut && (\n                <div className=\"mt-3 text-center\">\n                  <p className=\"text-sm text-luxury-bronze font-medium\">\n                    We typically respond within a few minutes.\n                  </p>\n                </div>\n              )}\n            </div>\n            \n          </CardContent>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default BookingCalendar;","size_bytes":20544},"client/src/components/footer.tsx":{"content":"import { Mail } from \"lucide-react\";\nimport { FaWhatsapp } from \"react-icons/fa\";\n// Use the ChatGPT logo from public folder\n\nconst Footer = () => {\n  return (\n    <footer className=\"luxury-bg border-t border-luxury-gold/20 mt-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          {/* Company Info */}\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center\">\n              <img \n                src=\"/arabian-coast-black-logo.png\"\n                alt=\"Arabian Coast Holiday Homes\"\n                className=\"h-20 md:h-28 lg:h-32 w-auto transition-all duration-500 hover:scale-105\"\n                style={{\n                  filter: 'drop-shadow(0 2px 8px rgba(60, 47, 31, 0.15))',\n                  maxWidth: '240px',\n                  objectFit: 'contain'\n                }}\n              />\n            </div>\n          </div>\n\n\n\n          {/* Contact */}\n          <div>\n            <h3 className=\"text-lg luxury-subheading mb-3 text-black font-semibold\">Contact</h3>\n            <ul className=\"space-y-3\">\n              <li className=\"flex items-center space-x-3\">\n                <FaWhatsapp className=\"h-5 w-5 text-green-500\" />\n                <a \n                  href=\"https://wa.me/971558166062\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"text-base text-black font-medium hover:text-luxury-gold transition-colors cursor-pointer\"\n                >\n                  +971 55 816 6062\n                </a>\n              </li>\n              <li className=\"flex items-center space-x-3\">\n                <Mail className=\"h-5 w-5 text-blue-500\" />\n                <span className=\"text-base text-black font-medium\">info@arabiancoastholidayhomes.com</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"border-t border-luxury-beige/30 mt-6 pt-4 text-center\">\n          <p className=\"text-sm text-black font-medium\">\n            &copy; 2025 Arabian Coast Holiday Homes. All rights reserved.\n          </p>\n          <div className=\"mt-2 space-x-4\">\n            <a href=\"/terms\" className=\"hover:text-luxury-gold transition-colors text-black text-sm\">\n              Terms and Conditions\n            </a>\n            <span className=\"text-black\">|</span>\n            <a href=\"/privacy-policy\" className=\"hover:text-luxury-gold transition-colors text-black text-sm\">\n              Privacy Policy\n            </a>\n            <span className=\"text-black\">|</span>\n            <a href=\"/house-rules\" className=\"hover:text-luxury-gold transition-colors text-black text-sm\">\n              House Rules\n            </a>\n            <span className=\"text-black\">|</span>\n            <a href=\"/refund-policy\" className=\"hover:text-luxury-gold transition-colors text-black text-sm\">\n              Refund Policy\n            </a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","size_bytes":3045},"client/src/components/hero.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { ChevronDown, Play } from \"lucide-react\";\n\n\nconst Hero = () => {\n  const scrollToProperties = () => {\n    const element = document.getElementById(\"featured-properties\");\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <section className=\"relative h-32 luxury-bg\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 h-32 flex items-center justify-center\">\n        <div className=\"text-center space-y-8 max-w-4xl\">\n          {/* Luxury Content */}\n          <motion.div\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 1.2 }}\n            className=\"space-y-8\"\n          >\n            <div className=\"space-y-4\">\n\n              \n\n            </div>\n\n\n\n\n          </motion.div>\n\n        </div>\n      </div>\n\n\n    </section>\n  );\n};\n\nexport default Hero;\n","size_bytes":1014},"client/src/components/navigation.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { Menu, Instagram } from \"lucide-react\";\n\nconst Navigation = () => {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [location] = useLocation();\n\n  const navItems = [\n    { href: \"/\", label: \"Home\" },\n    { href: \"/properties\", label: \"Properties\" },\n    { href: \"/about\", label: \"About\" },\n    { href: \"/guidebook\", label: \"Guidebook\" },\n    { href: \"/reviews\", label: \"Reviews\" },\n    { href: \"/contact\", label: \"Contact\" }\n  ];\n\n  return (\n    <nav className=\"fixed w-full top-0 bg-white shadow-md border-b border-gray-100 py-4 lg:py-6 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between min-h-[80px]\">\n          {/* Left Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8 lg:space-x-12\">\n            {navItems.slice(0, 3).map((item) => (\n              <Link key={item.href} href={item.href}>\n                <span\n                  className={`text-sm font-medium transition-all duration-300 hover:text-luxury-gold cursor-pointer uppercase tracking-wider luxury-serif relative whitespace-nowrap ${\n                    location === item.href\n                      ? \"text-luxury-gold after:w-full\"\n                      : \"text-luxury-brown\"\n                  } after:content-[''] after:absolute after:bottom-[-4px] after:left-0 after:h-[1px] after:bg-luxury-gold after:transition-all after:duration-300 ${\n                    location === item.href ? \"after:w-full\" : \"after:w-0 hover:after:w-full\"\n                  }`}\n                >\n                  {item.label}\n                </span>\n              </Link>\n            ))}\n          </div>\n\n          {/* Centered Logo */}\n          <div className=\"absolute left-1/2 transform -translate-x-1/2\">\n            <Link href=\"/\">\n              <div className=\"flex items-center cursor-pointer group\">\n                <img \n                  src=\"/arabian-coast-black-logo.png\"\n                  alt=\"Arabian Coast Holiday Homes\"\n                  className=\"h-24 md:h-32 lg:h-36 w-auto transition-all duration-500 hover:scale-105\"\n                  style={{\n                    filter: 'drop-shadow(0 2px 8px rgba(60, 47, 31, 0.15))',\n                    maxWidth: '280px',\n                    objectFit: 'contain'\n                  }}\n                />\n              </div>\n            </Link>\n          </div>\n\n          {/* Right Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8 lg:space-x-12\">\n            {navItems.slice(3).map((item) => (\n              <Link key={item.href} href={item.href}>\n                <span\n                  className={`text-sm font-medium transition-all duration-300 hover:text-luxury-gold cursor-pointer uppercase tracking-wider luxury-serif relative whitespace-nowrap ${\n                    location === item.href\n                      ? \"text-luxury-gold after:w-full\"\n                      : \"text-luxury-brown\"\n                  } after:content-[''] after:absolute after:bottom-[-4px] after:left-0 after:h-[1px] after:bg-luxury-gold after:transition-all after:duration-300 ${\n                    location === item.href ? \"after:w-full\" : \"after:w-0 hover:after:w-full\"\n                  }`}\n                >\n                  {item.label}\n                </span>\n              </Link>\n            ))}\n            <a href=\"https://www.instagram.com/arabiancoastholidayhomes/profilecard/?igsh=dDdpYXk1Nzhnc254\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-luxury-bronze hover:text-luxury-gold transition-all duration-300 hover:scale-110 ml-4\">\n              <Instagram className=\"h-5 w-5\" />\n            </a>\n          </div>\n\n          {/* Mobile Menu */}\n          <div className=\"md:hidden\">\n            <Sheet open={isMobileMenuOpen} onOpenChange={setIsMobileMenuOpen}>\n              <SheetTrigger asChild>\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"text-luxury-brown hover:text-luxury-gold\"\n                >\n                  <Menu className=\"h-6 w-6\" />\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"right\" className=\"w-[300px] sm:w-[400px]\">\n                <div className=\"flex flex-col space-y-6 mt-6\">\n                  {navItems.map((item) => (\n                    <Link key={item.href} href={item.href}>\n                      <span\n                        className={`text-lg font-medium transition-colors duration-200 hover:text-luxury-gold cursor-pointer ${\n                          location === item.href ? \"text-luxury-gold\" : \"text-luxury-brown\"\n                        }`}\n                        onClick={() => setIsMobileMenuOpen(false)}\n                      >\n                        {item.label}\n                      </span>\n                    </Link>\n                  ))}\n                  <a href=\"https://www.instagram.com/arabiancoastholidayhomes/profilecard/?igsh=dDdpYXk1Nzhnc254\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-luxury-bronze hover:text-luxury-gold transition-all duration-300 hover:scale-110 mb-4\">\n                    <Instagram className=\"h-6 w-6\" />\n                  </a>\n                  <Link href=\"/contact\">\n                    <Button\n                      className=\"luxury-button\"\n                      onClick={() => setIsMobileMenuOpen(false)}\n                    >\n                      Get in Touch\n                    </Button>\n                  </Link>\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;","size_bytes":5893},"client/src/components/property-card.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Users, Bed, Bath } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport type { Property } from \"@shared/schema\";\n\ninterface PropertyCardProps {\n  property: Property;\n  index?: number;\n  isAvailable?: boolean;\n  showAvailability?: boolean;\n  checkInDate?: string;\n  checkOutDate?: string;\n}\n\nconst PropertyCard = ({ property, index = 0, isAvailable = false, showAvailability = false, checkInDate, checkOutDate }: PropertyCardProps) => {\n  // Build URL with date parameters if available\n  const getPropertyUrl = () => {\n    const baseUrl = `/properties/${property.id}`;\n    if (checkInDate && checkOutDate) {\n      return `${baseUrl}?checkIn=${checkInDate}&checkOut=${checkOutDate}`;\n    }\n    return baseUrl;\n  };\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 50 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      viewport={{ once: true }}\n      transition={{ duration: 0.6, delay: index * 0.1 }}\n      className=\"property-card\"\n    >\n      <Card className=\"luxury-card overflow-hidden luxury-shadow transition-all duration-700 group\">\n        <Link href={getPropertyUrl()}>\n          <div className=\"relative overflow-hidden cursor-pointer\">\n            <img\n              src={property.images[0]}\n              alt={property.name}\n              className=\"w-full h-72 object-cover transition-transform duration-700 group-hover:scale-110\"\n              loading=\"lazy\"\n              onError={(e) => {\n                console.error('Failed to load image:', property.images[0]);\n                // Fallback to a placeholder or retry\n                e.currentTarget.src = '/logo.png';\n              }}\n              style={{\n                filter: \"contrast(1.08) saturate(1.15) brightness(1.03)\"\n              }}\n            />\n            <div className=\"absolute inset-0 bg-gradient-to-t from-luxury-brown/20 via-transparent to-transparent\"></div>\n          </div>\n        </Link>\n\n        <CardContent className=\"p-4 sm:p-6 lg:p-8\">\n          <div className=\"mb-4\">\n            <div className=\"flex items-start justify-between mb-2\">\n              <Link href={getPropertyUrl()}>\n                <h3 className=\"text-xl luxury-subheading text-luxury-brown hover:text-luxury-gold transition-colors duration-300 leading-tight cursor-pointer\">\n                  {property.name}\n                </h3>\n              </Link>\n              {showAvailability && (\n                <div className={`inline-flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium ml-2 ${\n                  isAvailable \n                    ? 'bg-green-100 text-green-700' \n                    : 'bg-red-100 text-red-700'\n                }`}>\n                  <div className={`w-2 h-2 rounded-full ${\n                    isAvailable ? 'bg-green-500' : 'bg-red-500'\n                  }`}></div>\n                  {isAvailable ? 'Available' : 'Not Available'}\n                </div>\n              )}\n            </div>\n            <p className=\"text-luxury-bronze text-sm mt-2 luxury-serif\">{property.location}</p>\n          </div>\n\n          <p className=\"luxury-text mb-6 line-clamp-3 leading-relaxed\">\n            {property.description.split('.')[0]}.\n          </p>\n\n          <div className=\"flex flex-wrap items-center gap-4 sm:gap-6 text-sm luxury-text mb-6 py-4 border-t border-b border-luxury-gold/20\">\n            <div className=\"flex items-center\">\n              <Bed className=\"w-4 h-4 mr-2 text-luxury-gold\" />\n              <span className=\"font-medium\">{property.bedrooms} Bedroom{property.bedrooms > 1 ? 's' : ''}</span>\n            </div>\n            <div className=\"flex items-center\">\n              <Bath className=\"w-4 h-4 mr-2 text-luxury-gold\" />\n              <span className=\"font-medium\">{property.bathrooms} Bath</span>\n            </div>\n            <div className=\"flex items-center\">\n              <Users className=\"w-4 h-4 mr-2 text-luxury-gold\" />\n              <span className=\"font-medium\">{property.maxGuests} Guests</span>\n            </div>\n          </div>\n\n          <div className=\"flex items-center justify-end\">\n            <Link href={getPropertyUrl()}>\n              <Button className=\"luxury-button group\">\n                <span className=\"group-hover:translate-x-1 transition-transform duration-300\">View Details</span>\n              </Button>\n            </Link>\n          </div>\n        </CardContent>\n      </Card>\n    </motion.div>\n  );\n};\n\nexport default PropertyCard;\n","size_bytes":4619},"client/src/components/reviews-section.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Star } from \"lucide-react\";\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { format } from \"date-fns\";\nimport type { Review } from \"@shared/schema\";\n\ninterface ReviewsSectionProps {\n  propertyId?: number;\n  featured?: boolean;\n  className?: string;\n  showTitle?: boolean;\n  maxReviews?: number;\n}\n\nexport function ReviewsSection({ \n  propertyId, \n  featured = false, \n  className = \"\",\n  showTitle = true,\n  maxReviews\n}: ReviewsSectionProps) {\n  const { data: reviews = [], isLoading } = useQuery<Review[]>({\n    queryKey: propertyId ? ['/api/reviews', propertyId] : featured ? ['/api/reviews', 'featured'] : ['/api/reviews'],\n    queryFn: async () => {\n      const params = new URLSearchParams();\n      if (propertyId) params.append('propertyId', propertyId.toString());\n      if (featured) params.append('featured', 'true');\n      \n      const response = await fetch(`/api/reviews?${params}`);\n      if (!response.ok) throw new Error('Failed to fetch reviews');\n      return response.json();\n    }\n  });\n\n  if (isLoading) {\n    return (\n      <div className={`space-y-4 ${className}`}>\n        {showTitle && <h2 className=\"text-2xl font-bold text-amber-900\">Guest Reviews</h2>}\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n          {[1, 2, 3].map((i) => (\n            <Card key={i} className=\"animate-pulse\">\n              <CardHeader className=\"pb-3\">\n                <div className=\"h-4 bg-gray-200 rounded w-2/3\"></div>\n                <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  <div className=\"h-3 bg-gray-200 rounded\"></div>\n                  <div className=\"h-3 bg-gray-200 rounded w-4/5\"></div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  const displayReviews = maxReviews ? reviews.slice(0, maxReviews) : reviews;\n\n  if (displayReviews.length === 0) {\n    return (\n      <div className={`text-center py-8 ${className}`}>\n        {showTitle && <h2 className=\"text-2xl font-bold text-amber-900 mb-4\">Guest Reviews</h2>}\n        <p className=\"text-gray-600\">No reviews yet. Be the first to share your experience!</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {showTitle && (\n        <div className=\"text-center\">\n          <h2 className=\"text-3xl font-bold text-amber-900 mb-2\">What Our Guests Say</h2>\n          <p className=\"text-gray-600\">Real experiences from verified guests</p>\n        </div>\n      )}\n      \n      <div className=\"grid gap-8 md:grid-cols-2 lg:grid-cols-3\">\n        {displayReviews.map((review, index) => (\n          <Card key={review.id} className=\"h-full flex flex-col luxury-card luxury-shadow group hover:scale-105 transition-all duration-500 border-0 relative overflow-hidden\">\n            {/* Luxury border accent */}\n            <div className=\"absolute top-0 left-0 right-0 h-1 bg-gradient-to-r from-luxury-gold to-luxury-dark-gold\"></div>\n            \n            <CardHeader className=\"pb-4 relative\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center space-x-1\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star\n                      key={i}\n                      className={`h-5 w-5 ${\n                        i < review.rating \n                          ? \"fill-yellow-400 text-yellow-400 drop-shadow-md\" \n                          : \"text-gray-300\"\n                      }`}\n                    />\n                  ))}\n                </div>\n                {review.verified && (\n                  <Badge className=\"bg-gradient-to-r from-emerald-500 to-teal-600 text-white border-0 text-xs font-medium shadow-md\">\n                    ‚úì Verified Guest\n                  </Badge>\n                )}\n              </div>\n              \n              {review.title && (\n                <h3 className=\"font-bold text-xl text-luxury-brown leading-tight luxury-subheading mb-3\">\n                  {review.title}\n                </h3>\n              )}\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-luxury-brown luxury-serif text-lg\">{review.guestName}</span>\n                  {review.guestLocation && (\n                    <span className=\"text-luxury-light-brown text-sm font-medium\">{review.guestLocation}</span>\n                  )}\n                </div>\n                {review.stayDate && (\n                  <div className=\"text-right\">\n                    <p className=\"text-xs text-luxury-light-brown uppercase tracking-wider font-medium\">\n                      {format(new Date(review.stayDate), 'MMM yyyy')}\n                    </p>\n                  </div>\n                )}\n              </div>\n            </CardHeader>\n            \n            <CardContent className=\"flex-grow relative\">\n              <p className=\"text-gray-700 leading-relaxed text-sm font-normal\">\n                {review.content}\n              </p>\n              \n              {/* Decorative bottom accent */}\n              <div className=\"absolute bottom-0 left-0 w-12 h-px bg-gradient-to-r from-luxury-gold to-transparent mt-4\"></div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n      \n      {maxReviews && reviews.length > maxReviews && (\n        <div className=\"text-center\">\n          <p className=\"text-gray-600\">\n            Showing {maxReviews} of {reviews.length} reviews\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":5841},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/property-data.ts":{"content":"import type { Property } from \"@shared/schema\";\n\n/**\n * Utility functions for working with property data\n */\n\n/**\n * Format price for display\n */\nexport function formatPrice(price: string | number): string {\n  const numPrice = typeof price === \"string\" ? parseFloat(price) : price;\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  }).format(numPrice);\n}\n\n/**\n * Format rating for display\n */\nexport function formatRating(rating: string | number): string {\n  const numRating = typeof rating === \"string\" ? parseFloat(rating) : rating;\n  return numRating.toFixed(1);\n}\n\n/**\n * Get property category display name\n */\nexport function getCategoryDisplayName(category: string): string {\n  const categoryMap: Record<string, string> = {\n    beachfront: \"Beachfront\",\n    villa: \"Villa\",\n    mansion: \"Mansion\",\n    penthouse: \"Penthouse\",\n    retreat: \"Retreat\",\n  };\n  return categoryMap[category] || category;\n}\n\n/**\n * Filter properties by search term\n */\nexport function filterPropertiesBySearch(\n  properties: Property[],\n  searchTerm: string\n): Property[] {\n  if (!searchTerm.trim()) return properties;\n\n  const term = searchTerm.toLowerCase();\n  return properties.filter(\n    (property) =>\n      property.name.toLowerCase().includes(term) ||\n      property.description.toLowerCase().includes(term) ||\n      property.location.toLowerCase().includes(term) ||\n      property.amenities.some((amenity) =>\n        amenity.toLowerCase().includes(term)\n      )\n  );\n}\n\n/**\n * Filter properties by category\n */\nexport function filterPropertiesByCategory(\n  properties: Property[],\n  category: string\n): Property[] {\n  if (category === \"all\") return properties;\n  return properties.filter((property) => property.category === category);\n}\n\n/**\n * Filter properties by price range\n */\nexport function filterPropertiesByPrice(\n  properties: Property[],\n  priceRange: string\n): Property[] {\n  if (priceRange === \"all\") return properties;\n\n  return properties.filter((property) => {\n    const price = parseFloat(property.pricePerNight);\n    switch (priceRange) {\n      case \"0-500\":\n        return price < 500;\n      case \"500-1000\":\n        return price >= 500 && price <= 1000;\n      case \"1000-1500\":\n        return price >= 1000 && price <= 1500;\n      case \"1500+\":\n        return price > 1500;\n      default:\n        return true;\n    }\n  });\n}\n\n/**\n * Sort properties by different criteria\n */\nexport function sortProperties(\n  properties: Property[],\n  sortBy: \"price-asc\" | \"price-desc\" | \"rating\" | \"name\"\n): Property[] {\n  const sorted = [...properties];\n\n  switch (sortBy) {\n    case \"price-asc\":\n      return sorted.sort(\n        (a, b) => parseFloat(a.pricePerNight) - parseFloat(b.pricePerNight)\n      );\n    case \"price-desc\":\n      return sorted.sort(\n        (a, b) => parseFloat(b.pricePerNight) - parseFloat(a.pricePerNight)\n      );\n    case \"rating\":\n      return sorted.sort(\n        (a, b) => parseFloat(b.rating) - parseFloat(a.rating)\n      );\n    case \"name\":\n      return sorted.sort((a, b) => a.name.localeCompare(b.name));\n    default:\n      return sorted;\n  }\n}\n\n/**\n * Get properties suitable for a number of guests\n */\nexport function filterPropertiesByGuests(\n  properties: Property[],\n  guestCount: number\n): Property[] {\n  return properties.filter((property) => property.maxGuests >= guestCount);\n}\n\n/**\n * Get properties with specific amenities\n */\nexport function filterPropertiesByAmenities(\n  properties: Property[],\n  requiredAmenities: string[]\n): Property[] {\n  if (requiredAmenities.length === 0) return properties;\n\n  return properties.filter((property) =>\n    requiredAmenities.every((amenity) =>\n      property.amenities.some((propAmenity) =>\n        propAmenity.toLowerCase().includes(amenity.toLowerCase())\n      )\n    )\n  );\n}\n\n/**\n * Get random featured properties\n */\nexport function getRandomFeaturedProperties(\n  properties: Property[],\n  count: number = 3\n): Property[] {\n  const featured = properties.filter((property) => property.featured);\n  const shuffled = [...featured].sort(() => 0.5 - Math.random());\n  return shuffled.slice(0, count);\n}\n\n/**\n * Calculate average rating for all properties\n */\nexport function calculateAverageRating(properties: Property[]): number {\n  if (properties.length === 0) return 0;\n\n  const total = properties.reduce(\n    (sum, property) => sum + parseFloat(property.rating),\n    0\n  );\n  return total / properties.length;\n}\n\n/**\n * Get property statistics\n */\nexport function getPropertyStatistics(properties: Property[]) {\n  const totalProperties = properties.length;\n  const averageRating = calculateAverageRating(properties);\n  const averagePrice =\n    properties.reduce(\n      (sum, property) => sum + parseFloat(property.pricePerNight),\n      0\n    ) / totalProperties;\n\n  const priceRange = {\n    min: Math.min(\n      ...properties.map((property) => parseFloat(property.pricePerNight))\n    ),\n    max: Math.max(\n      ...properties.map((property) => parseFloat(property.pricePerNight))\n    ),\n  };\n\n  const categoryCounts = properties.reduce((acc, property) => {\n    acc[property.category] = (acc[property.category] || 0) + 1;\n    return acc;\n  }, {} as Record<string, number>);\n\n  return {\n    totalProperties,\n    averageRating,\n    averagePrice,\n    priceRange,\n    categoryCounts,\n  };\n}\n\n/**\n * Validate property data\n */\nexport function validateProperty(property: Partial<Property>): string[] {\n  const errors: string[] = [];\n\n  if (!property.name || property.name.trim().length === 0) {\n    errors.push(\"Property name is required\");\n  }\n\n  if (!property.description || property.description.trim().length < 10) {\n    errors.push(\"Property description must be at least 10 characters\");\n  }\n\n  if (!property.pricePerNight || parseFloat(property.pricePerNight) <= 0) {\n    errors.push(\"Valid price per night is required\");\n  }\n\n  if (!property.bedrooms || property.bedrooms < 1) {\n    errors.push(\"Number of bedrooms must be at least 1\");\n  }\n\n  if (!property.bathrooms || property.bathrooms < 1) {\n    errors.push(\"Number of bathrooms must be at least 1\");\n  }\n\n  if (!property.maxGuests || property.maxGuests < 1) {\n    errors.push(\"Maximum guests must be at least 1\");\n  }\n\n  if (!property.location || property.location.trim().length === 0) {\n    errors.push(\"Location is required\");\n  }\n\n  if (!property.images || property.images.length === 0) {\n    errors.push(\"At least one image is required\");\n  }\n\n  if (!property.amenities || property.amenities.length === 0) {\n    errors.push(\"At least one amenity is required\");\n  }\n\n  if (!property.category || property.category.trim().length === 0) {\n    errors.push(\"Category is required\");\n  }\n\n  return errors;\n}\n\n/**\n * Generate property URL slug\n */\nexport function generatePropertySlug(name: string): string {\n  return name\n    .toLowerCase()\n    .replace(/[^a-z0-9]+/g, \"-\")\n    .replace(/(^-|-$)/g, \"\");\n}\n\n/**\n * Calculate nights between dates\n */\nexport function calculateNights(checkIn: string, checkOut: string): number {\n  const checkInDate = new Date(checkIn);\n  const checkOutDate = new Date(checkOut);\n  const timeDiff = checkOutDate.getTime() - checkInDate.getTime();\n  return Math.ceil(timeDiff / (1000 * 3600 * 24));\n}\n\n/**\n * Calculate total cost for a stay\n */\nexport function calculateTotalCost(\n  pricePerNight: string | number,\n  checkIn: string,\n  checkOut: string,\n  serviceFee: number = 0,\n  taxRate: number = 0\n): {\n  nights: number;\n  basePrice: number;\n  serviceFee: number;\n  tax: number;\n  total: number;\n} {\n  const nights = calculateNights(checkIn, checkOut);\n  const nightly = typeof pricePerNight === \"string\" ? parseFloat(pricePerNight) : pricePerNight;\n  const basePrice = nightly * nights;\n  const tax = basePrice * taxRate;\n  const total = basePrice + serviceFee + tax;\n\n  return {\n    nights,\n    basePrice,\n    serviceFee,\n    tax,\n    total,\n  };\n}\n","size_bytes":7919},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey[0] as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1376},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { \n  Award, \n  Users, \n  Home, \n  Star, \n  Shield, \n  Heart,\n  CheckCircle,\n  Target,\n  Eye\n} from \"lucide-react\";\n\nconst About = () => {\n  const stats = [\n    { icon: Home, value: \"500+\", label: \"Premium Properties\" },\n    { icon: Users, value: \"50K+\", label: \"Happy Guests\" },\n    { icon: Star, value: \"4.9\", label: \"Average Rating\" },\n    { icon: Award, value: \"10+\", label: \"Years Experience\" },\n  ];\n\n  const values = [\n    {\n      icon: Shield,\n      title: \"Trust & Security\",\n      description: \"We ensure the highest standards of safety and security for all our properties and guests.\"\n    },\n    {\n      icon: Heart,\n      title: \"Exceptional Service\",\n      description: \"Our dedicated team goes above and beyond to create unforgettable experiences for every guest.\"\n    },\n    {\n      icon: Star,\n      title: \"Quality Excellence\",\n      description: \"Every property in our collection is carefully curated to meet our stringent quality standards.\"\n    },\n    {\n      icon: Users,\n      title: \"Guest-Centric\",\n      description: \"Your satisfaction is our priority. We listen to your needs and exceed your expectations.\"\n    }\n  ];\n\n  const team = [\n    {\n      name: \"Sarah Al-Rashid\",\n      position: \"CEO & Founder\",\n      image: \"https://images.unsplash.com/photo-1494790108755-2616b612b786?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\",\n      description: \"With over 15 years in luxury hospitality, Sarah founded Arabian Coast to redefine vacation rentals.\"\n    },\n    {\n      name: \"Michael Chen\",\n      position: \"Head of Operations\",\n      image: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\",\n      description: \"Michael ensures seamless operations and maintains our high standards across all properties.\"\n    },\n    {\n      name: \"Fatima Hassan\",\n      position: \"Guest Experience Director\",\n      image: \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\",\n      description: \"Fatima leads our guest services team, ensuring every stay exceeds expectations.\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-16 flex flex-col\">\n      {/* Hero Section */}\n      <section className=\"luxury-bg py-20 flex-grow flex items-center\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            className=\"text-center max-w-5xl mx-auto\"\n          >\n\n            <p className=\"text-xl md:text-2xl luxury-text leading-relaxed luxury-serif font-light max-w-4xl mx-auto\">\n              We're your gateway to a perfect Dubai escape, blending luxury and comfort. Whether you're here for the skyline, the beaches, or the desert adventures, we've got you covered with stunning stays that feel just like home‚Äîbut better.\n            </p>\n          </motion.div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default About;\n","size_bytes":3152},"client/src/pages/contact.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQueryClient, useQuery } from \"@tanstack/react-query\";\nimport { motion } from \"framer-motion\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { insertInquirySchema, type Property } from \"@shared/schema\";\nimport { format, parseISO } from \"date-fns\";\nimport { \n  Mail, \n  Clock,\n  Send,\n  CheckCircle,\n  Home\n} from \"lucide-react\";\nimport { FaWhatsapp } from \"react-icons/fa\";\n\nconst contactFormSchema = insertInquirySchema.extend({\n  firstName: z.string().min(1, \"First name is required\"),\n  lastName: z.string().min(1, \"Last name is required\"),\n  email: z.string().email(\"Valid email is required\"),\n  phone: z.string().min(1, \"Phone number is required\"),\n  propertyName: z.string().min(1, \"Please select a property\"),\n  checkInDate: z.string().min(1, \"Check-in date is required\"),\n  checkOutDate: z.string().min(1, \"Check-out date is required\"),\n  message: z.string().min(1, \"Message is required\"),\n});\n\ntype ContactFormData = z.infer<typeof contactFormSchema>;\n\nconst Contact = () => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  // Fetch properties for the dropdown\n  const { data: properties = [] } = useQuery<Property[]>({\n    queryKey: [\"/api/properties\"],\n  });\n\n  // Get URL parameters for pre-filling form\n  const urlParams = new URLSearchParams(window.location.search);\n  const checkInParam = urlParams.get('checkIn') || '';\n  const checkOutParam = urlParams.get('checkOut') || '';\n  const propertyIdParam = urlParams.get('propertyId');\n  const guestsParam = urlParams.get('guests');\n  \n  // Get property name from propertyId for pre-filling\n  const selectedProperty = properties.find(p => p.id === parseInt(propertyIdParam || ''));\n  const propertyNameParam = selectedProperty?.name || '';\n\n  const form = useForm<ContactFormData>({\n    resolver: zodResolver(contactFormSchema),\n    mode: \"onChange\", // Enable real-time validation\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      propertyName: propertyNameParam,\n      checkInDate: checkInParam,\n      checkOutDate: checkOutParam,\n      message: guestsParam ? `I'm interested in booking for ${guestsParam} guest${parseInt(guestsParam) > 1 ? 's' : ''}.` : \"\",\n      propertyId: propertyIdParam ? parseInt(propertyIdParam) : null,\n    },\n  });\n\n  const submitInquiry = useMutation({\n    mutationFn: async (data: ContactFormData) => {\n      return apiRequest(\"POST\", \"/api/inquiries\", data);\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Inquiry Sent Successfully!\",\n        description: \"Your inquiry has been sent via WhatsApp. We typically respond within a few minutes.\",\n      });\n      form.reset();\n      queryClient.invalidateQueries({ queryKey: [\"/api/inquiries\"] });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Error Sending Inquiry\",\n        description: \"Please try again or contact us directly.\",\n        variant: \"destructive\",\n      });\n      console.error(\"Inquiry submission error:\", error);\n    },\n  });\n\n  const onSubmit = async (data: ContactFormData) => {\n    setIsSubmitting(true);\n    try {\n      // Format dates to be user-friendly\n      const checkInFormatted = format(parseISO(data.checkInDate), 'EEEE, MMMM d, yyyy');\n      const checkOutFormatted = format(parseISO(data.checkOutDate), 'EEEE, MMMM d, yyyy');\n      \n      // Format the message for WhatsApp\n      const whatsappMessage = `*New Inquiry from Website*\\n\\n` +\n        `*Name:* ${data.firstName} ${data.lastName}\\n` +\n        `*Email:* ${data.email}\\n` +\n        `*Phone:* ${data.phone}\\n` +\n        `*Property:* ${data.propertyName}\\n` +\n        `*Check-in Date:* ${checkInFormatted}\\n` +\n        `*Check-out Date:* ${checkOutFormatted}\\n` +\n        `*Message:* ${data.message}\\n\\n` +\n        `_Sent from Arabian Coast Holiday Homes website_`;\n\n      // Send to WhatsApp\n      const whatsappUrl = `https://wa.me/971558166062?text=${encodeURIComponent(whatsappMessage)}`;\n      \n      // Open WhatsApp in same window\n      window.location.href = whatsappUrl;\n\n      // Also submit to our backend for record keeping\n      await submitInquiry.mutateAsync(data);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const contactInfo = [\n    {\n      icon: Mail,\n      title: \"Email\",\n      details: [\"info@arabiancoastholidayhomes.com\"],\n    },\n    {\n      icon: FaWhatsapp,\n      title: \"WhatsApp\",\n      details: [\"+971 55 816 6062\"],\n    },\n    {\n      icon: Clock,\n      title: \"Hours\",\n      details: [\"24/7\"],\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\">\n      {/* Hero Section */}\n      <section className=\"bg-gray-50 py-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center\"\n          >\n            <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\n              Get In <span className=\"text-gold-500\">Touch</span>\n            </h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Ready to book your dream vacation? Our team is here to help you find\n              the perfect property and create an unforgettable experience.\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Contact Form and Info */}\n      <section className=\"py-12 sm:py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-12\">\n            {/* Contact Information */}\n            <motion.div\n              initial={{ opacity: 0, x: -50 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6 }}\n              className=\"space-y-8\"\n            >\n              <div>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">\n                  Contact Information\n                </h2>\n                <p className=\"text-lg text-gray-600 mb-8 leading-relaxed\">\n                  We're here to assist you 24/7 with any questions about our properties,\n                  services, or to help you plan your perfect vacation experience.\n                </p>\n              </div>\n\n              <div className=\"space-y-6\">\n                {contactInfo.map((info, index) => {\n                  const IconComponent = info.icon;\n                  return (\n                    <motion.div\n                      key={info.title}\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.6, delay: index * 0.1 + 0.2 }}\n                      className=\"flex items-start space-x-4\"\n                    >\n                      <div className={`p-3 rounded-full ${\n                        info.title === 'WhatsApp' \n                          ? 'bg-green-500 text-white' \n                          : info.title === 'Email'\n                          ? 'bg-blue-500 text-white'\n                          : 'bg-gray-600 text-white'\n                      }`}>\n                        <IconComponent className=\"w-5 h-5\" />\n                      </div>\n                      <div>\n                        <h3 className=\"text-lg font-semibold text-black mb-2\">\n                          {info.title}\n                        </h3>\n                        {info.details.map((detail, detailIndex) => (\n                          <p key={detailIndex} className=\"text-black\">\n                            {detail}\n                          </p>\n                        ))}\n                      </div>\n                    </motion.div>\n                  );\n                })}\n              </div>\n\n              <div className=\"bg-gold-50 p-6 rounded-xl\">\n                <h3 className=\"text-lg font-semibold text-black mb-3\">\n                  Arabian Coast Holiday Homes\n                </h3>\n                <div className=\"space-y-2\">\n                  {[\n                    \"Personally inspected luxury properties\",\n                    \"24/7 concierge and support services\",\n                    \"Exclusive access to premium amenities\",\n                    \"Tailored experiences and recommendations\",\n                  ].map((feature, index) => (\n                    <div key={index} className=\"flex items-center\">\n                      <CheckCircle className=\"w-4 h-4 text-gold-500 mr-2\" />\n                      <span className=\"text-black text-sm\">{feature}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Contact Form */}\n            <motion.div\n              initial={{ opacity: 0, x: 50 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6, delay: 0.2 }}\n            >\n              <Card className=\"shadow-lg border-0\">\n                <CardContent className=\"p-8\">\n                  <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">\n                    Send Us an Inquiry\n                  </h2>\n\n                  <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4 sm:space-y-6\">\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-6\">\n                      <div>\n                        <Label htmlFor=\"firstName\" className=\"text-sm font-medium text-gray-700\">\n                          First Name *\n                        </Label>\n                        <Input\n                          id=\"firstName\"\n                          {...form.register(\"firstName\")}\n                          placeholder=\"John\"\n                          className=\"mt-1 h-10\"\n                          required\n                        />\n                        {form.formState.errors.firstName && (\n                          <p className=\"text-red-500 text-sm mt-1\">\n                            {form.formState.errors.firstName.message}\n                          </p>\n                        )}\n                      </div>\n\n                      <div>\n                        <Label htmlFor=\"lastName\" className=\"text-sm font-medium text-gray-700\">\n                          Last Name *\n                        </Label>\n                        <Input\n                          id=\"lastName\"\n                          {...form.register(\"lastName\")}\n                          placeholder=\"Doe\"\n                          className=\"mt-1 h-10\"\n                          required\n                        />\n                        {form.formState.errors.lastName && (\n                          <p className=\"text-red-500 text-sm mt-1\">\n                            {form.formState.errors.lastName.message}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\n                        Email Address *\n                      </Label>\n                      <Input\n                        id=\"email\"\n                        type=\"email\"\n                        {...form.register(\"email\")}\n                        placeholder=\"john@example.com\"\n                        className=\"mt-1 h-10\"\n                        required\n                      />\n                      {form.formState.errors.email && (\n                        <p className=\"text-red-500 text-sm mt-1\">\n                          {form.formState.errors.email.message}\n                        </p>\n                      )}\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"phone\" className=\"text-sm font-medium text-gray-700\">\n                        Phone Number *\n                      </Label>\n                      <Input\n                        id=\"phone\"\n                        type=\"tel\"\n                        {...form.register(\"phone\")}\n                        placeholder=\"+1 (555) 123-4567\"\n                        className=\"mt-1 h-10\"\n                        required\n                      />\n                      {form.formState.errors.phone && (\n                        <p className=\"text-red-500 text-sm mt-1\">\n                          {form.formState.errors.phone.message}\n                        </p>\n                      )}\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"propertyName\" className=\"text-sm font-medium text-gray-700\">\n                        Property of Interest *\n                      </Label>\n                      <Select\n                        value={form.watch(\"propertyName\")}\n                        onValueChange={(value) => form.setValue(\"propertyName\", value)}\n                      >\n                        <SelectTrigger className=\"mt-1 h-10 min-w-0\">\n                          <SelectValue placeholder=\"Select a property\" />\n                        </SelectTrigger>\n                        <SelectContent \n                          className=\"max-h-60 overflow-auto z-50 min-w-[var(--radix-select-trigger-width)] max-w-[400px]\"\n                          position=\"popper\"\n                          sideOffset={4}\n                        >\n                          {properties.map((property) => (\n                            <SelectItem key={property.id} value={property.name} className=\"cursor-pointer\">\n                              <div className=\"flex items-center py-1 w-full\">\n                                <Home className=\"w-4 h-4 mr-2 text-gray-500 flex-shrink-0\" />\n                                <span className=\"truncate text-left\">{property.name}</span>\n                              </div>\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      {form.formState.errors.propertyName && (\n                        <p className=\"text-red-500 text-sm mt-1\">\n                          {form.formState.errors.propertyName.message}\n                        </p>\n                      )}\n                    </div>\n\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-6\">\n                      <div>\n                        <Label htmlFor=\"checkInDate\" className=\"text-sm font-medium text-gray-700\">\n                          Check-in Date *\n                        </Label>\n                        <Input\n                          id=\"checkInDate\"\n                          type=\"date\"\n                          {...form.register(\"checkInDate\")}\n                          className=\"mt-1 h-10\"\n                          required\n                        />\n                        {form.formState.errors.checkInDate && (\n                          <p className=\"text-red-500 text-sm mt-1\">\n                            {form.formState.errors.checkInDate.message}\n                          </p>\n                        )}\n                      </div>\n\n                      <div>\n                        <Label htmlFor=\"checkOutDate\" className=\"text-sm font-medium text-gray-700\">\n                          Check-out Date *\n                        </Label>\n                        <Input\n                          id=\"checkOutDate\"\n                          type=\"date\"\n                          {...form.register(\"checkOutDate\")}\n                          className=\"mt-1 h-10\"\n                          required\n                        />\n                        {form.formState.errors.checkOutDate && (\n                          <p className=\"text-red-500 text-sm mt-1\">\n                            {form.formState.errors.checkOutDate.message}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"message\" className=\"text-sm font-medium text-gray-700\">\n                        Message *\n                      </Label>\n                      <Textarea\n                        id=\"message\"\n                        {...form.register(\"message\")}\n                        placeholder=\"Tell us about your perfect vacation, special requirements, or any questions you have...\"\n                        rows={5}\n                        className=\"mt-1\"\n                        required\n                      />\n                      {form.formState.errors.message && (\n                        <p className=\"text-red-500 text-sm mt-1\">\n                          {form.formState.errors.message.message}\n                        </p>\n                      )}\n                    </div>\n\n                    <Button\n                      type=\"submit\"\n                      disabled={isSubmitting || submitInquiry.isPending || Object.keys(form.formState.errors).length > 0 || !form.watch(\"firstName\") || !form.watch(\"lastName\") || !form.watch(\"email\") || !form.watch(\"phone\") || !form.watch(\"propertyName\") || !form.watch(\"checkInDate\") || !form.watch(\"checkOutDate\") || !form.watch(\"message\")}\n                      className=\"w-full bg-green-500 text-white hover:bg-green-600 transition-colors duration-200 py-4 text-base sm:text-lg font-bold rounded-lg border-2 border-green-500 shadow-lg disabled:opacity-50 disabled:cursor-not-allowed touch-manipulation\"\n                    >\n                      {isSubmitting || submitInquiry.isPending ? (\n                        <div className=\"flex items-center\">\n                          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                          Sending Inquiry...\n                        </div>\n                      ) : (\n                        <div className=\"flex items-center justify-center\">\n                          <FaWhatsapp className=\"w-5 h-5 mr-2\" />\n                          Send Inquiry\n                        </div>\n                      )}\n                    </Button>\n\n                    {Object.keys(form.formState.errors).length > 0 && (\n                      <div className=\"text-sm text-red-500 text-center bg-red-50 p-3 rounded-lg\">\n                        Please fill all fields correctly. Check that your email address is valid.\n                      </div>\n                    )}\n                    <p className=\"text-sm text-gray-600 text-center\">\n                      We typically respond within a few minutes.\n                    </p>\n                  </form>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n\n    </div>\n  );\n};\n\nexport default Contact;\n","size_bytes":19282},"client/src/pages/guidebook.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  MapPin, \n  Camera, \n  ShoppingBag, \n  Car, \n  Train, \n  Smartphone,\n  Clock,\n  Star,\n  Eye,\n  Waves,\n  Fish,\n  Snowflake,\n  Navigation\n} from \"lucide-react\";\n\nconst Guidebook = () => {\n  const sightseeingAttractions = [\n    {\n      name: \"Burj Khalifa\",\n      description: \"The Burj Khalifa is the tallest building in the world, offering stunning views from its observation deck. At night, it lights up with vibrant displays, often showcasing special themes or events. Visitors can enjoy panoramic views of Dubai's skyline and desert. It's a must-see landmark that beautifully illuminates the city.\",\n      icon: <Eye className=\"w-6 h-6\" />,\n      category: \"Iconic Landmark\",\n      highlights: [\"World's tallest building\", \"Observation deck\", \"Night light shows\", \"Panoramic views\"],\n      image: \"/guidebook-burj-khalifa.png\",\n      location: \"1 Sheikh Mohammed bin Rashid Blvd, Downtown Dubai\",\n      directions: \"8-minute walk from property via Sheikh Mohammed bin Rashid Boulevard. Take the Dubai Mall Metro Station (Red Line) or use taxi services like Careem, Uber, or Bolt.\"\n    },\n    {\n      name: \"Dubai Fountain Lake\",\n      description: \"The Dubai Fountain is a breathtaking water and light show set against the Burj Khalifa. It's free to watch and features synchronized dances with music. Located near the Dubai Mall, it's a perfect spot for shopping and sightseeing. The fountain runs multiple times in the evening, creating a magical experience.\",\n      icon: <Waves className=\"w-6 h-6\" />,\n      category: \"Entertainment\",\n      highlights: [\"Free water & light show\", \"Synchronized music\", \"Multiple evening shows\", \"Near Dubai Mall\"],\n      image: \"/guidebook-dubai-fountain.png\",\n      location: \"Burj Khalifa Lake, Downtown Dubai\",\n      directions: \"5-minute walk from property to the lake promenade. Best viewing spots are from the Dubai Mall waterfront boardwalk or At the Top Sky Lounge.\"\n    },\n    {\n      name: \"Dubai Mall Aquarium\",\n      description: \"The Dubai Mall Aquarium is one of the largest indoor aquariums in the world, featuring a stunning display of marine life. Visitors can walk through a glass tunnel for a 360-degree view of the tank, home to thousands of aquatic species. It's a mesmerizing experience for both adults and kids. The aquarium also offers unique activities like diving with sharks.\",\n      icon: <Fish className=\"w-6 h-6\" />,\n      category: \"Family Attraction\",\n      highlights: [\"World's largest indoor aquarium\", \"Glass tunnel experience\", \"Thousands of species\", \"Diving with sharks activity\"],\n      image: \"/guidebook-aquarium-new.png\",\n      location: \"Ground Floor, The Dubai Mall, Downtown Dubai\",\n      directions: \"8-minute walk to Dubai Mall main entrance, then follow signs to Ground Floor aquarium. Located near the main atrium and easily accessible via mall directory.\"\n    }\n  ];\n\n  const shoppingDestinations = [\n    {\n      name: \"The Dubai Mall\",\n      description: \"The Dubai Mall is one of the largest shopping malls in the world, offering an endless variety of stores, restaurants, and entertainment. It's home to attractions like an ice rink, an aquarium, and a virtual reality park. Visitors can enjoy shopping, dining, and family-friendly activities all in one place. It's the ultimate destination for both leisure and luxury.\",\n      icon: <ShoppingBag className=\"w-6 h-6\" />,\n      category: \"Shopping & Entertainment\",\n      highlights: [\"World's largest mall\", \"Ice rink & aquarium\", \"VR park\", \"Endless dining options\"],\n      image: \"/guidebook-dubai-mall.png\",\n      location: \"Financial Centre Road, Downtown Dubai\",\n      directions: \"8-minute walk via Sheikh Mohammed bin Rashid Boulevard. Multiple entrances available - use Fashion Avenue entrance for luxury shopping or Grand Atrium entrance for main attractions.\"\n    },\n    {\n      name: \"Dubai Ice Rink\",\n      description: \"The Dubai Mall Ice Rink is a popular indoor skating destination, offering a fun experience for skaters of all levels. The rink hosts public sessions, ice hockey games, and figure skating events. It's a cool escape from the desert heat and perfect for families looking for unique activities.\",\n      icon: <Snowflake className=\"w-6 h-6\" />,\n      category: \"Recreation\",\n      highlights: [\"Indoor skating\", \"Public sessions\", \"Ice hockey games\", \"Cool escape from heat\"],\n      image: \"/guidebook-ice-rink-new.png\",\n      location: \"Level 2, The Dubai Mall, Downtown Dubai\",\n      directions: \"Walk to Dubai Mall (8 minutes), take escalator to Level 2. Follow signs for 'Dubai Ice Rink' or ask at the information desk near the main atrium.\"\n    }\n  ];\n\n  const cityAdvice = [\n    {\n      title: \"Getting Around - Taxi Services\",\n      description: \"Careem, Bolt, and Uber apps: These taxi services provide fast, door-to-door rides for a smooth experience.\",\n      icon: <Smartphone className=\"w-6 h-6\" />,\n      type: \"Transportation\"\n    },\n    {\n      title: \"Metro Access\",\n      description: \"Metro: The Burj Khalifa/Dubai Mall Metro Station is just an 8-minute walk, giving you easy access to the city's metro system.\",\n      icon: <Train className=\"w-6 h-6\" />,\n      type: \"Public Transport\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-24\">\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-b from-luxury-cream to-white py-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center\"\n          >\n            <h1 className=\"text-4xl md:text-5xl font-bold text-luxury-brown mb-4\">\n              Guest <span className=\"text-luxury-gold\">Guidebook</span>\n            </h1>\n            <p className=\"text-xl text-luxury-bronze max-w-3xl mx-auto leading-relaxed\">\n              Discover the best of Dubai with our curated guide to sightseeing, shopping, and city navigation. \n              Everything you need for an unforgettable stay.\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Sightseeing Section */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-12\"\n          >\n            <div className=\"flex items-center justify-center gap-3 mb-4\">\n              <Camera className=\"w-8 h-8 text-luxury-gold\" />\n              <h2 className=\"text-3xl md:text-4xl font-bold text-luxury-brown\">Sightseeing</h2>\n            </div>\n            <p className=\"text-lg text-luxury-bronze max-w-2xl mx-auto\">\n              Explore Dubai's most iconic landmarks and attractions\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-8\">\n            {sightseeingAttractions.map((attraction, index) => (\n              <motion.div\n                key={attraction.name}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.6, delay: index * 0.2 }}\n              >\n                <Card className=\"luxury-card h-full luxury-shadow group hover:scale-105 transition-all duration-500 overflow-hidden\">\n                  <div className=\"relative h-52 overflow-hidden\">\n                    <img \n                      src={attraction.image} \n                      alt={attraction.name}\n                      className=\"w-full h-full object-cover object-center group-hover:scale-110 transition-transform duration-500\"\n                      style={{ objectPosition: 'center 30%' }}\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/30 to-transparent\" />\n                    <Badge \n                      variant=\"secondary\" \n                      className=\"absolute top-3 left-3 bg-white/90 text-luxury-brown backdrop-blur-sm\"\n                    >\n                      {attraction.category}\n                    </Badge>\n                  </div>\n                  \n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-start gap-3 mb-4\">\n                      <div className=\"p-3 bg-luxury-gold/10 rounded-xl text-luxury-gold\">\n                        {attraction.icon}\n                      </div>\n                      <h3 className=\"text-lg font-bold text-luxury-brown flex-1\">\n                        {attraction.name}\n                      </h3>\n                    </div>\n                    \n                    <p className=\"text-luxury-bronze mb-4 leading-relaxed text-sm\">\n                      {attraction.description}\n                    </p>\n                    \n                    <div className=\"space-y-3 mb-4\">\n                      <div className=\"flex items-start gap-2\">\n                        <MapPin className=\"w-4 h-4 text-luxury-gold mt-0.5 flex-shrink-0\" />\n                        <div>\n                          <p className=\"text-xs font-semibold text-luxury-brown\">Location</p>\n                          <p className=\"text-xs text-luxury-bronze\">{attraction.location}</p>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-start gap-2\">\n                        <Navigation className=\"w-4 h-4 text-luxury-gold mt-0.5 flex-shrink-0\" />\n                        <div>\n                          <p className=\"text-xs font-semibold text-luxury-brown\">Directions</p>\n                          <p className=\"text-xs text-luxury-bronze leading-relaxed\">{attraction.directions}</p>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      <h4 className=\"font-semibold text-luxury-brown text-sm\">Highlights:</h4>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {attraction.highlights.map((highlight, idx) => (\n                          <Badge key={idx} variant=\"outline\" className=\"text-xs border-luxury-gold/30 text-luxury-bronze\">\n                            {highlight}\n                          </Badge>\n                        ))}\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Shopping Section */}\n      <section className=\"py-16 bg-luxury-cream/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-12\"\n          >\n            <div className=\"flex items-center justify-center gap-3 mb-4\">\n              <ShoppingBag className=\"w-8 h-8 text-luxury-gold\" />\n              <h2 className=\"text-3xl md:text-4xl font-bold text-luxury-brown\">Shopping</h2>\n            </div>\n            <p className=\"text-lg text-luxury-bronze max-w-2xl mx-auto\">\n              Experience world-class shopping and entertainment destinations\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {shoppingDestinations.map((destination, index) => (\n              <motion.div\n                key={destination.name}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.6, delay: index * 0.2 }}\n              >\n                <Card className=\"luxury-card h-full luxury-shadow group hover:scale-105 transition-all duration-500 overflow-hidden\">\n                  <div className=\"relative h-56 overflow-hidden\">\n                    <img \n                      src={destination.image} \n                      alt={destination.name}\n                      className=\"w-full h-full object-cover object-center group-hover:scale-110 transition-transform duration-500\"\n                      style={{ objectPosition: 'center 25%' }}\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/30 to-transparent\" />\n                    <Badge \n                      variant=\"secondary\" \n                      className=\"absolute top-4 left-4 bg-white/90 text-luxury-brown backdrop-blur-sm\"\n                    >\n                      {destination.category}\n                    </Badge>\n                  </div>\n                  \n                  <CardContent className=\"p-8\">\n                    <div className=\"flex items-start gap-4 mb-4\">\n                      <div className=\"p-3 bg-luxury-gold/10 rounded-xl text-luxury-gold\">\n                        {destination.icon}\n                      </div>\n                      <h3 className=\"text-xl font-bold text-luxury-brown flex-1\">\n                        {destination.name}\n                      </h3>\n                    </div>\n                    \n                    <p className=\"text-luxury-bronze mb-4 leading-relaxed text-sm\">\n                      {destination.description}\n                    </p>\n                    \n                    <div className=\"space-y-3 mb-4\">\n                      <div className=\"flex items-start gap-2\">\n                        <MapPin className=\"w-4 h-4 text-luxury-gold mt-0.5 flex-shrink-0\" />\n                        <div>\n                          <p className=\"text-xs font-semibold text-luxury-brown\">Location</p>\n                          <p className=\"text-xs text-luxury-bronze\">{destination.location}</p>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-start gap-2\">\n                        <Navigation className=\"w-4 h-4 text-luxury-gold mt-0.5 flex-shrink-0\" />\n                        <div>\n                          <p className=\"text-xs font-semibold text-luxury-brown\">Directions</p>\n                          <p className=\"text-xs text-luxury-bronze leading-relaxed\">{destination.directions}</p>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      <h4 className=\"font-semibold text-luxury-brown text-sm\">Key Features:</h4>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {destination.highlights.map((highlight, idx) => (\n                          <Badge key={idx} variant=\"outline\" className=\"text-xs border-luxury-gold/30 text-luxury-bronze\">\n                            {highlight}\n                          </Badge>\n                        ))}\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* City Advice Section */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-12\"\n          >\n            <div className=\"flex items-center justify-center gap-3 mb-4\">\n              <MapPin className=\"w-8 h-8 text-luxury-gold\" />\n              <h2 className=\"text-3xl md:text-4xl font-bold text-luxury-brown\">City Advice</h2>\n            </div>\n            <p className=\"text-lg text-luxury-bronze max-w-2xl mx-auto\">\n              Essential tips for getting around Dubai with ease\n            </p>\n          </motion.div>\n\n          <div className=\"max-w-4xl mx-auto\">\n            <Card className=\"luxury-card luxury-shadow\">\n              <CardContent className=\"p-8\">\n                <div className=\"flex items-center gap-3 mb-6\">\n                  <Car className=\"w-6 h-6 text-luxury-gold\" />\n                  <h3 className=\"text-2xl font-bold text-luxury-brown\">The Fastest Ways of Getting Around</h3>\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  {cityAdvice.map((advice, index) => (\n                    <motion.div\n                      key={advice.title}\n                      initial={{ opacity: 0, x: index % 2 === 0 ? -30 : 30 }}\n                      whileInView={{ opacity: 1, x: 0 }}\n                      viewport={{ once: true }}\n                      transition={{ duration: 0.6, delay: index * 0.2 }}\n                      className=\"flex gap-4 p-4 rounded-xl bg-luxury-cream/50 hover:bg-luxury-cream/70 transition-colors duration-300\"\n                    >\n                      <div className=\"p-2 bg-luxury-gold/10 rounded-lg text-luxury-gold flex-shrink-0\">\n                        {advice.icon}\n                      </div>\n                      <div>\n                        <Badge variant=\"outline\" className=\"mb-2 text-xs border-luxury-gold/30 text-luxury-bronze\">\n                          {advice.type}\n                        </Badge>\n                        <h4 className=\"font-semibold text-luxury-brown mb-2\">{advice.title}</h4>\n                        <p className=\"text-luxury-bronze text-sm leading-relaxed\">{advice.description}</p>\n                      </div>\n                    </motion.div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-16 bg-gradient-to-r from-luxury-gold/10 to-luxury-cream/20\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <h3 className=\"text-2xl md:text-3xl font-bold text-luxury-brown mb-4\">\n              Ready to Explore Dubai?\n            </h3>\n            <p className=\"text-lg text-luxury-bronze mb-6 max-w-2xl mx-auto\">\n              Book your stay with Arabian Coast Holiday Homes and discover the best of Dubai with our insider guide.\n            </p>\n            <motion.a\n              href=\"/contact\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              className=\"inline-flex items-center gap-2 bg-luxury-gold text-white px-8 py-3 rounded-xl font-semibold hover:bg-luxury-gold/90 transition-all duration-300 luxury-shadow\"\n            >\n              <MapPin className=\"w-5 h-5\" />\n              Book Your Dubai Experience\n            </motion.a>\n          </motion.div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Guidebook;","size_bytes":19412},"client/src/pages/home.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { motion } from \"framer-motion\";\nimport Hero from \"@/components/hero\";\nimport PropertyCard from \"@/components/property-card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { ReviewsSection } from \"@/components/reviews-section\";\nimport { Link } from \"wouter\";\nimport { \n  Star,\n  CheckCircle\n} from \"lucide-react\";\nimport type { Property } from \"@shared/schema\";\n\nconst Home = () => {\n  const [checkInDate, setCheckInDate] = useState<string>(\"\");\n  const [checkOutDate, setCheckOutDate] = useState<string>(\"\");\n  \n  // Always fetch all properties for the \"Our Properties\" section (no date filtering)\n  const { data: allProperties, isLoading } = useQuery<Property[]>({\n    queryKey: [\"/api/properties\"],\n    queryFn: async () => {\n      const response = await fetch('/api/properties');\n      if (!response.ok) throw new Error('Failed to fetch properties');\n      return response.json();\n    },\n  });\n\n  // Use all properties for the \"Our Properties\" section\n  const featuredProperties = allProperties;\n  \n  // Function to handle search with date filtering\n  const handleSearch = () => {\n    if (checkInDate && checkOutDate) {\n      // Navigate to properties page with date parameters\n      const searchParams = new URLSearchParams({\n        checkIn: checkInDate,\n        checkOut: checkOutDate\n      });\n      window.location.href = `/properties?${searchParams.toString()}`;\n    } else {\n      // Navigate to properties page without filters\n      window.location.href = '/properties';\n    }\n  };\n\n  const testimonials = [\n    {\n      initials: \"JS\",\n      name: \"James Smith\",\n      location: \"London, UK\",\n      content: \"Absolutely stunning property with impeccable service. The oceanview villa exceeded all our expectations. We'll definitely be returning!\"\n    },\n    {\n      initials: \"MJ\",\n      name: \"Maria Johnson\",\n      location: \"New York, USA\",\n      content: \"The perfect blend of luxury and comfort. Every detail was thoughtfully considered. The concierge service was exceptional!\"\n    },\n    {\n      initials: \"AR\",\n      name: \"Ahmed Rahman\",\n      location: \"Dubai, UAE\",\n      content: \"Our family vacation was magical. The kids loved the beach access and we enjoyed the privacy and luxury. Highly recommended!\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-24\">\n      {/* Hero Section */}\n      <Hero />\n\n      {/* Date Selection Section */}\n      <section className=\"luxury-section luxury-bg py-6\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.8 }}\n            className=\"text-center mb-6\"\n          >\n            <h2 className=\"text-3xl md:text-4xl luxury-heading text-luxury-brown mb-4\">\n              Your home away from <span className=\"luxury-accent italic luxury-serif\">home</span>\n            </h2>\n            <p className=\"text-lg luxury-text max-w-2xl mx-auto leading-relaxed luxury-serif\">\n              Select your dates to discover available luxury properties\n            </p>\n          </motion.div>\n          \n          {/* Date Selection Component - I'll create this */}\n          <div className=\"bg-white rounded-xl shadow-lg p-6 mb-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-end\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Check-in</label>\n                <input \n                  type=\"date\" \n                  value={checkInDate}\n                  min={new Date().toISOString().split('T')[0]}\n                  onChange={(e) => {\n                    const newCheckIn = e.target.value;\n                    setCheckInDate(newCheckIn);\n                    \n                    // If check-out is before or equal to new check-in, clear it\n                    if (checkOutDate && checkOutDate <= newCheckIn) {\n                      setCheckOutDate(\"\");\n                    }\n                  }}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-luxury-gold\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Check-out</label>\n                <input \n                  type=\"date\" \n                  value={checkOutDate}\n                  min={checkInDate ? new Date(new Date(checkInDate).getTime() + 24*60*60*1000).toISOString().split('T')[0] : new Date().toISOString().split('T')[0]}\n                  onChange={(e) => setCheckOutDate(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-luxury-gold\"\n                />\n              </div>\n              <Button \n                onClick={handleSearch}\n                disabled={!checkInDate || !checkOutDate}\n                className={`w-full luxury-button transition-all duration-300 ${\n                  !checkInDate || !checkOutDate \n                    ? 'opacity-50 cursor-not-allowed bg-gray-400 hover:bg-gray-400' \n                    : ''\n                }`}\n              >\n                Search Properties\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Properties Section */}\n      <section className=\"luxury-section luxury-bg py-8\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.8 }}\n            className=\"text-center mb-12\"\n          >\n            <h2 className=\"text-3xl md:text-4xl luxury-heading text-luxury-brown mb-4\">\n              Our <span className=\"luxury-accent italic luxury-serif\">Properties</span>\n            </h2>\n          </motion.div>\n\n          {isLoading ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {[...Array(6)].map((_, i) => (\n                <div key={i} className=\"bg-white rounded-2xl shadow-lg h-96 animate-pulse\">\n                  <div className=\"bg-gray-300 h-64 rounded-t-2xl\"></div>\n                  <div className=\"p-6 space-y-3\">\n                    <div className=\"bg-gray-300 h-4 rounded\"></div>\n                    <div className=\"bg-gray-300 h-3 rounded w-3/4\"></div>\n                    <div className=\"bg-gray-300 h-4 rounded w-1/2\"></div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {featuredProperties?.map((property, index) => (\n                <PropertyCard \n                  key={property.id} \n                  property={property} \n                  index={index}\n                  showAvailability={false} // No availability badges on home page\n                />\n              ))}\n            </div>\n          )}\n\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.8, delay: 0.4 }}\n            className=\"text-center mt-8\"\n          >\n            <Link href=\"/properties\">\n              <Button className=\"luxury-button text-base px-12 py-4\">\n                View All Properties\n              </Button>\n            </Link>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Featured Reviews Section */}\n      <section className=\"py-20 bg-gradient-to-br from-amber-50 to-orange-50\">\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.8 }}\n            className=\"mb-12\"\n          >\n            <ReviewsSection \n              featured={true} \n              maxReviews={3}\n              className=\"max-w-6xl mx-auto\"\n            />\n          </motion.div>\n          \n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n            className=\"text-center\"\n          >\n            <Link href=\"/reviews\">\n              <Button className=\"luxury-button text-base px-12 py-4\">\n                Read All Reviews\n              </Button>\n            </Link>\n          </motion.div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n","size_bytes":8887},"client/src/pages/house-rules.tsx":{"content":"import { motion } from \"framer-motion\";\n\nconst HouseRules = () => {\n  return (\n    <div className=\"min-h-screen pt-24 pb-12\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"bg-white rounded-lg shadow-lg p-4 sm:p-6 md:p-8 lg:p-12 overflow-hidden\"\n        >\n          <h1 className=\"text-2xl sm:text-3xl md:text-4xl font-bold text-luxury-brown mb-6 sm:mb-8 leading-tight break-words\">\n            House Rules\n          </h1>\n          \n          <div className=\"prose prose-sm sm:prose-base lg:prose-lg max-w-none text-luxury-brown space-y-4 sm:space-y-6 break-words overflow-wrap-anywhere\">\n            <p>\n              By booking with Arabian Coast Holiday Homes L.L.C. (\"we\", \"us\", \"our\"), all Guests and Visitors agree to abide by these House Rules. These are in place to ensure safety, protect community standards, and comply with Dubai building and tourism regulations.\n            </p>\n            \n            <div className=\"bg-red-50 border-l-4 border-red-500 p-4 rounded mt-4\">\n              <p className=\"font-semibold\">\n                Violation of these rules may result in eviction without refund, forfeiture of the security deposit, and/or fines as applicable under UAE law.\n              </p>\n            </div>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">1. Residential Conduct</h2>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>All our properties are located in family-oriented residential communities.</li>\n                <li>Guests and Visitors must behave respectfully and avoid any disruptive, unlawful, or inappropriate conduct.</li>\n                <li>Commercial, business, or illegal activities are strictly prohibited on the premises.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">2. Guest & Visitor Registration</h2>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>All Guests and Visitors must be pre-registered with valid ID (passport or Emirates ID) at least 24 hours prior to arrival.</li>\n                <li>This is required for access and to comply with Dubai DET regulations.</li>\n                <li>Guests are fully responsible for the conduct of their Visitors.</li>\n                <li>Unregistered visitors may be denied access by building management.</li>\n                <li>Overnight stays by Visitors are not permitted without prior written approval.</li>\n                <li>Access to shared facilities (e.g., pool, gym) may be restricted by building rules.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">3. Check-In / Check-Out</h2>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li><strong>Check-in:</strong> From 3:00 PM</li>\n                <li><strong>Check-out:</strong> Strictly by 11:00 AM</li>\n                <li>Late check-out without prior written approval will incur a full-night charge.</li>\n                <li>Guests must inspect the apartment upon arrival and report any issues within 24 hours.</li>\n                <li>The property must be left in a clean and tidy condition at check-out to avoid deductions from the security deposit.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">4. Noise & Neighbor Relations</h2>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li><strong>Quiet hours:</strong> 10:00 PM ‚Äì 7:00 AM</li>\n                <li>No loud music, shouting, or disruptive noise ‚Äî even with windows and doors closed.</li>\n                <li>Guests must not enter or interfere with neighboring units or shared areas not designated for use.</li>\n                <li>Any disputes with neighbors must be reported immediately to us for handling.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">5. Parties & Gatherings</h2>\n              <div className=\"bg-red-50 border-l-4 border-red-500 p-4 rounded\">\n                <ul className=\"list-disc list-inside space-y-2\">\n                  <li><strong>Strictly prohibited:</strong> Parties, events, or gatherings of any kind.</li>\n                  <li>Violation will result in immediate eviction and forfeiture of the full security deposit.</li>\n                </ul>\n              </div>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">6. Community Facilities</h2>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>Shared amenities (e.g., pool, gym) are subject to building-specific rules and hours.</li>\n                <li>No glassware allowed in pool areas.</li>\n                <li>Use facilities at your own risk; children must be supervised at all times.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">7. Child Safety</h2>\n              <p>Children must be supervised by an adult at all times, including:</p>\n              <ul className=\"list-disc list-inside space-y-2 mt-2\">\n                <li>Inside the apartment</li>\n                <li>On balconies</li>\n                <li>In common/shared areas</li>\n              </ul>\n              <p className=\"mt-4\">We are not liable for injuries resulting from lack of supervision.</p>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">8. Smoking Policy</h2>\n              <div className=\"bg-yellow-50 border-l-4 border-yellow-500 p-4 rounded\">\n                <ul className=\"list-disc list-inside space-y-2\">\n                  <li>Smoking is strictly prohibited indoors, including all rooms, bathrooms, and hallways.</li>\n                  <li>Smoking is permitted on balconies only, provided windows and doors remain closed to avoid indoor smoke transfer.</li>\n                  <li>Any evidence of indoor smoking will result in deep cleaning fees and potential security deposit deductions.</li>\n                </ul>\n              </div>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">9. BBQ Use</h2>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>No BBQs allowed indoors or on balconies.</li>\n                <li>BBQs may only be used in designated building areas with prior written approval.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">10. Pet Policy</h2>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>No pets allowed unless approved in writing prior to check-in.</li>\n                <li>Pet-friendly apartments are limited and subject to additional fees and signed terms.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">11. Property Condition</h2>\n              <p>Guests must:</p>\n              <ul className=\"list-disc list-inside space-y-2 mt-2\">\n                <li>Keep the property in a clean, damage-free condition</li>\n                <li>Report any issues within 24 hours of check-in</li>\n              </ul>\n              <p className=\"mt-4\">Damage not reported within this timeframe may result in deductions from the security deposit.</p>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">12. Waste Disposal</h2>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>All rubbish must be disposed of in designated building bins.</li>\n                <li>Do not leave trash in hallways, stairwells, or balconies.</li>\n                <li>Follow community recycling and waste separation guidelines.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">13. Parking</h2>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>Parking is only allowed in assigned or pre-approved spaces.</li>\n                <li>Unauthorized parking may result in fines or towing at the Guest's expense.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">14. Property Modifications</h2>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>Guests may not install, mount, or modify any furniture, fixtures, or fittings.</li>\n                <li>Any damage from unauthorized modifications will be charged to the Guest.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">15. Emergencies</h2>\n              <div className=\"bg-luxury-cream/30 p-4 rounded-lg\">\n                <p>For urgent issues during your stay, please contact us on:</p>\n                <p className=\"text-xl font-semibold text-luxury-brown mt-2\">üìû +971 55 816 6062</p>\n              </div>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">16. Definitions</h2>\n              <ul className=\"list-none space-y-2\">\n                <li><strong>Guest:</strong> The person who made the reservation and is legally responsible for the booking.</li>\n                <li><strong>Visitor:</strong> Any person not included in the reservation but present at the property.</li>\n                <li><strong>Operator:</strong> Arabian Coast Holiday Homes L.L.C.</li>\n                <li><strong>DTCM / DET:</strong> Dubai's Department of Economy and Tourism</li>\n                <li><strong>TDF:</strong> Tourism Dirham Fee</li>\n                <li><strong>PSC:</strong> Property Service Charge</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">17. Agreement Acknowledgement</h2>\n              <div className=\"bg-luxury-gold/10 border border-luxury-gold p-6 rounded-lg\">\n                <p className=\"font-semibold mb-4\">By staying at a property managed by Arabian Coast Holiday Homes, you confirm that you have read, understood, and agreed to:</p>\n                <ul className=\"list-disc list-inside space-y-2\">\n                  <li>Our Terms & Conditions</li>\n                  <li>Our Privacy Policy</li>\n                  <li>This House Rules document</li>\n                  <li>Our Reservation Terms & Conditions and Cancellation Policy (provided during booking)</li>\n                </ul>\n              </div>\n            </section>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default HouseRules;","size_bytes":11360},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/privacy-policy.tsx":{"content":"import { motion } from \"framer-motion\";\n\nconst PrivacyPolicy = () => {\n  return (\n    <div className=\"min-h-screen pt-24 pb-12\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"bg-white rounded-lg shadow-lg p-4 sm:p-6 md:p-8 lg:p-12 overflow-hidden\"\n        >\n          <h1 className=\"text-2xl sm:text-3xl md:text-4xl font-bold text-luxury-brown mb-6 sm:mb-8 leading-tight break-words\">\n            Privacy Policy\n          </h1>\n          \n          <div className=\"prose prose-sm sm:prose-base lg:prose-lg max-w-none text-luxury-brown space-y-4 sm:space-y-6 break-words overflow-wrap-anywhere\">\n            <p>\n              At Arabian Coast Holiday Homes L.L.C. (\"we\", \"us\", \"our\"), your privacy is important to us. This Privacy Policy explains how we collect, use, store, and protect your personal data when you interact with us through our website: www.arabiancoastholidayhomes.com or any direct booking channels.\n            </p>\n            \n            <p>\n              By using our website or providing your personal information, you agree to the terms of this Privacy Policy.\n            </p>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">1. Scope of This Policy</h2>\n              <p>This policy applies to personal data collected directly by us through:</p>\n              <ul className=\"list-disc list-inside space-y-2 mt-4\">\n                <li>Our website contact or booking forms</li>\n                <li>Direct booking channels (e.g. email, WhatsApp, phone)</li>\n                <li>General enquiries or feedback submissions</li>\n              </ul>\n              <div className=\"bg-blue-50 border-l-4 border-blue-500 p-4 rounded mt-4\">\n                <p className=\"font-semibold\">Note: If you book via third-party platforms (e.g. Airbnb, Booking.com), their own privacy policies also apply.</p>\n              </div>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">2. What Information We Collect</h2>\n              <p>We collect only the data necessary to provide and manage your booking and comply with legal requirements. This may include:</p>\n              <ul className=\"list-disc list-inside space-y-2 mt-4\">\n                <li>Full name, email, phone number</li>\n                <li>Nationality and passport/Emirates ID (for regulatory check-in)</li>\n                <li>Booking details, preferences, and communication history</li>\n                <li>Files or documents you provide (e.g. ID copies for registration)</li>\n                <li>IP address, browser type, device info, and usage analytics</li>\n                <li>Cookie data for improving website performance</li>\n              </ul>\n              <div className=\"bg-green-50 border-l-4 border-green-500 p-4 rounded mt-4\">\n                <p className=\"font-semibold\">We do not collect or store payment card details via our website. All payments are processed securely by third-party payment providers.</p>\n              </div>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">3. How We Use Your Information</h2>\n              <p>We use your personal data to:</p>\n              <ul className=\"list-disc list-inside space-y-2 mt-4\">\n                <li>Respond to enquiries and manage bookings</li>\n                <li>Communicate check-in details, confirmations, and reminders</li>\n                <li>Verify guest identity and fulfill regulatory reporting obligations (e.g. to DET)</li>\n                <li>Enhance website functionality and improve user experience</li>\n                <li>Maintain security and detect misuse or fraud</li>\n                <li>Fulfill legal, accounting, and audit requirements</li>\n              </ul>\n              <div className=\"bg-blue-50 border-l-4 border-blue-500 p-4 rounded mt-4\">\n                <p className=\"font-semibold\">We do not sell, rent, or share your personal data with third parties for marketing purposes.</p>\n              </div>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">4. Legal Basis for Processing</h2>\n              <p>In accordance with Federal Decree-Law No. 45 of 2021 (UAE), our legal bases for processing include:</p>\n              <ul className=\"list-disc list-inside space-y-2 mt-4\">\n                <li>Your explicit consent</li>\n                <li>Contractual necessity (e.g. fulfilling your booking)</li>\n                <li>Legal compliance (e.g. reporting to the Department of Economy and Tourism)</li>\n                <li>Our legitimate interest in ensuring service quality and website functionality</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">5. Cookies & Analytics</h2>\n              <p>We use essential and analytics cookies to:</p>\n              <ul className=\"list-disc list-inside space-y-2 mt-4\">\n                <li>Improve loading speed and user experience</li>\n                <li>Monitor traffic and site performance</li>\n                <li>Remember preferences (e.g. language)</li>\n              </ul>\n              <p className=\"mt-4\">\n                You can disable non-essential cookies via your browser settings. Disabling may affect website functionality.\n              </p>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">6. Log & Technical Data</h2>\n              <p>When you visit our site, we may automatically log anonymized data such as:</p>\n              <ul className=\"list-disc list-inside space-y-2 mt-4\">\n                <li>IP address and browser type</li>\n                <li>Device and OS version</li>\n                <li>Time spent on pages and click paths</li>\n                <li>Referrer URLs</li>\n              </ul>\n              <p className=\"mt-4\">This data is used only for internal performance monitoring and is never linked to your identity.</p>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">7. Your Rights (Data Access & Control)</h2>\n              <p>You have the right to:</p>\n              <ul className=\"list-disc list-inside space-y-2 mt-4\">\n                <li>Request access to your personal data</li>\n                <li>Ask for correction of inaccurate information</li>\n                <li>Request deletion (subject to legal retention limits)</li>\n                <li>Object to or restrict certain data uses</li>\n                <li>Request data portability in a structured format</li>\n              </ul>\n              <div className=\"bg-luxury-cream/30 p-4 rounded-lg mt-4\">\n                <p>\n                  To exercise your rights, email info@arabiancoastholidayhomes.com. We will respond within 30 calendar days, in line with UAE law.\n                </p>\n              </div>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">8. Data Retention</h2>\n              <p>We retain your personal data:</p>\n              <ul className=\"list-disc list-inside space-y-2 mt-4\">\n                <li>For the duration of your stay and booking history</li>\n                <li>As required by UAE regulations, including DET and tax authorities</li>\n                <li>For up to 12 months after your last interaction, unless required longer by law</li>\n              </ul>\n              <p className=\"mt-4\">After this, data is securely deleted or archived in compliance with applicable regulations.</p>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">9. Children's Privacy</h2>\n              <p>\n                Our services are not intended for children under 13 years old. We do not knowingly collect personal data from minors. If we become aware that such data was submitted, we will delete it immediately.\n              </p>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">10. Third-Party Links</h2>\n              <p>\n                Our website may link to external sites (e.g. payment providers or property platforms). We are not responsible for their content or privacy practices. Please review their respective policies before using them.\n              </p>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">11. Contact Us</h2>\n              <div className=\"bg-luxury-gold/10 border border-luxury-gold p-6 rounded-lg\">\n                <p className=\"font-semibold mb-4\">If you have any questions or concerns about this Privacy Policy or how your personal data is handled, contact:</p>\n                <div className=\"space-y-2\">\n                  <p><strong>Arabian Coast Holiday Homes L.L.C.</strong></p>\n                  <p>üìç Dubai, United Arab Emirates</p>\n                  <p>üìß info@arabiancoastholidayhomes.com</p>\n                  <p>üåê www.arabiancoastholidayhomes.com</p>\n                  <p>üßæ Trade License No: 1453578</p>\n                </div>\n              </div>\n            </section>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default PrivacyPolicy;","size_bytes":9628},"client/src/pages/properties.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { motion } from \"framer-motion\";\nimport PropertyCard from \"@/components/property-card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\nimport { Filter, MapPin, CheckCircle, Calendar } from \"lucide-react\";\nimport { format, parseISO } from \"date-fns\";\nimport type { Property } from \"@shared/schema\";\n\nconst Properties = () => {\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"all\");\n  const [checkInDate, setCheckInDate] = useState<string>(\"\");\n  const [checkOutDate, setCheckOutDate] = useState<string>(\"\");\n\n  // Check for URL parameters on component mount\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const checkIn = urlParams.get('checkIn');\n    const checkOut = urlParams.get('checkOut');\n    \n    // Validate dates are not in the past and check-out is after check-in\n    const today = new Date().toISOString().split('T')[0];\n    \n    if (checkIn && checkIn >= today) {\n      setCheckInDate(checkIn);\n    }\n    if (checkOut && checkOut >= today && checkIn && checkOut > checkIn) {\n      setCheckOutDate(checkOut);\n    }\n    \n    // Clear URL parameters after reading them to prevent persistence on refresh\n    if (checkIn || checkOut) {\n      const newUrl = new URL(window.location.href);\n      newUrl.searchParams.delete('checkIn');\n      newUrl.searchParams.delete('checkOut');\n      window.history.replaceState({}, '', newUrl.toString());\n    }\n  }, []);\n\n  // Build query with date filtering if dates are present\n  const queryParams = new URLSearchParams();\n  if (checkInDate) queryParams.append('checkIn', checkInDate);\n  if (checkOutDate) queryParams.append('checkOut', checkOutDate);\n  const queryString = queryParams.toString();\n\n  const { data: properties, isLoading } = useQuery<Property[]>({\n    queryKey: [\"/api/properties\", queryString],\n    queryFn: async () => {\n      const url = `/api/properties${queryString ? `?${queryString}` : ''}`;\n      const response = await fetch(url);\n      if (!response.ok) throw new Error('Failed to fetch properties');\n      return response.json();\n    },\n  });\n\n  const categories = [\n    { value: \"all\", label: \"All Properties\" },\n    { value: \"apartment\", label: \"Apartment\" },\n  ];\n\n\n\n  const filteredProperties = properties?.filter((property) => {\n    const matchesCategory = selectedCategory === \"all\" || property.category === selectedCategory;\n    return matchesCategory;\n  });\n\n\n\n  return (\n    <div className=\"min-h-screen pt-24\">\n      {/* Header */}\n      <section className=\"bg-gray-50 py-8\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center\"\n          >\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-3\">\n              Our <span className=\"text-gold-500\">Properties</span>\n            </h1>\n            {checkInDate && checkOutDate ? (\n              <div className=\"space-y-4\">\n                {filteredProperties && filteredProperties.length > 0 ? (\n                  <>\n                    <div className=\"inline-flex items-center gap-2 bg-green-100 text-green-700 px-4 py-2 rounded-full text-sm font-medium\">\n                      <CheckCircle className=\"w-4 h-4\" />\n                      Available {new Date(checkInDate).toLocaleDateString('en-GB')} - {new Date(checkOutDate).toLocaleDateString('en-GB')}\n                    </div>\n                    <p className=\"text-lg text-gray-600 max-w-2xl mx-auto mb-4\">\n                      Showing properties available for your selected dates\n                    </p>\n                  </>\n                ) : !isLoading ? (\n                  <>\n                    <div className=\"inline-flex items-center gap-2 bg-red-100 text-red-700 px-4 py-2 rounded-full text-sm font-medium\">\n                      <CheckCircle className=\"w-4 h-4\" />\n                      No availability {new Date(checkInDate).toLocaleDateString('en-GB')} - {new Date(checkOutDate).toLocaleDateString('en-GB')}\n                    </div>\n                    <p className=\"text-lg text-gray-600 max-w-2xl mx-auto mb-4\">\n                      No properties available for your selected dates\n                    </p>\n                  </>\n                ) : null}\n                \n                {/* Date Selection for changing dates */}\n                <div className=\"bg-white rounded-xl shadow-lg p-4 max-w-2xl mx-auto\">\n                  <p className=\"text-sm font-medium text-gray-700 mb-3 text-center\">Change your dates</p>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3 items-end\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Check-in</label>\n                      <input \n                        type=\"date\" \n                        value={checkInDate}\n                        min={new Date().toISOString().split('T')[0]}\n                        onChange={(e) => {\n                          const newCheckIn = e.target.value;\n                          setCheckInDate(newCheckIn);\n                          \n                          // If check-out is before or equal to new check-in, clear it\n                          if (checkOutDate && checkOutDate <= newCheckIn) {\n                            setCheckOutDate(\"\");\n                          }\n                          \n                          // Update URL params\n                          const newUrl = new URL(window.location.href);\n                          newUrl.searchParams.set('checkIn', newCheckIn);\n                          if (checkOutDate && checkOutDate > newCheckIn) {\n                            newUrl.searchParams.set('checkOut', checkOutDate);\n                          } else {\n                            newUrl.searchParams.delete('checkOut');\n                          }\n                          window.history.replaceState({}, '', newUrl.toString());\n                        }}\n                        className=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gold-500\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Check-out</label>\n                      <input \n                        type=\"date\" \n                        value={checkOutDate}\n                        min={checkInDate ? new Date(new Date(checkInDate).getTime() + 24*60*60*1000).toISOString().split('T')[0] : new Date().toISOString().split('T')[0]}\n                        onChange={(e) => {\n                          setCheckOutDate(e.target.value);\n                          // Update URL params\n                          const newUrl = new URL(window.location.href);\n                          if (checkInDate) newUrl.searchParams.set('checkIn', checkInDate);\n                          newUrl.searchParams.set('checkOut', e.target.value);\n                          window.history.replaceState({}, '', newUrl.toString());\n                        }}\n                        className=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gold-500\"\n                      />\n                    </div>\n                    <Button \n                      onClick={() => {\n                        // Clear dates and remove from URL\n                        setCheckInDate(\"\");\n                        setCheckOutDate(\"\");\n                        const newUrl = new URL(window.location.href);\n                        newUrl.searchParams.delete('checkIn');\n                        newUrl.searchParams.delete('checkOut');\n                        window.history.replaceState({}, '', newUrl.toString());\n                      }}\n                      variant=\"outline\"\n                      className=\"text-sm\"\n                    >\n                      Clear Dates\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n                  Discover our complete collection of luxury holiday homes\n                </p>\n                \n                {/* Date Selection for initial search */}\n                <div className=\"bg-white rounded-xl shadow-lg p-4 max-w-2xl mx-auto\">\n                  <p className=\"text-sm font-medium text-gray-700 mb-3 text-center\">Select dates to check availability</p>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Check-in</label>\n                      <input \n                        type=\"date\" \n                        value={checkInDate}\n                        min={new Date().toISOString().split('T')[0]}\n                        onChange={(e) => {\n                          const newCheckIn = e.target.value;\n                          setCheckInDate(newCheckIn);\n                          \n                          // If check-out is before or equal to new check-in, clear it\n                          if (checkOutDate && checkOutDate <= newCheckIn) {\n                            setCheckOutDate(\"\");\n                          }\n                        }}\n                        className=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gold-500\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Check-out</label>\n                      <input \n                        type=\"date\" \n                        value={checkOutDate}\n                        min={checkInDate ? new Date(new Date(checkInDate).getTime() + 24*60*60*1000).toISOString().split('T')[0] : new Date().toISOString().split('T')[0]}\n                        onChange={(e) => {\n                          setCheckOutDate(e.target.value);\n                          \n                          // Auto-trigger availability search when both dates are selected\n                          if (checkInDate && e.target.value) {\n                            const newUrl = new URL(window.location.href);\n                            newUrl.searchParams.set('checkIn', checkInDate);\n                            newUrl.searchParams.set('checkOut', e.target.value);\n                            window.history.replaceState({}, '', newUrl.toString());\n                          }\n                        }}\n                        className=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gold-500\"\n                      />\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n            )}\n          </motion.div>\n        </div>\n      </section>\n\n\n\n      {/* Filters */}\n      <section className=\"py-6 bg-white border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            className=\"flex flex-col lg:flex-row gap-4 items-center\"\n          >\n            <div className=\"flex gap-4 items-center justify-center\">\n              <Select value={selectedCategory} onValueChange={setSelectedCategory}>\n                <SelectTrigger className=\"w-[180px]\">\n                  <SelectValue placeholder=\"Category\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {categories.map((category) => (\n                    <SelectItem key={category.value} value={category.value}>\n                      {category.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n\n\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Properties Grid */}\n      <section className=\"py-8\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {isLoading ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {[...Array(9)].map((_, i) => (\n                <div key={i} className=\"bg-white rounded-2xl shadow-lg h-96 animate-pulse\">\n                  <div className=\"bg-gray-300 h-64 rounded-t-2xl\"></div>\n                  <div className=\"p-6 space-y-3\">\n                    <div className=\"bg-gray-300 h-4 rounded\"></div>\n                    <div className=\"bg-gray-300 h-3 rounded w-3/4\"></div>\n                    <div className=\"bg-gray-300 h-4 rounded w-1/2\"></div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : filteredProperties && filteredProperties.length > 0 ? (\n            <>\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: 0.3 }}\n                className=\"mb-4\"\n              >\n                <p className=\"text-gray-600\">\n                  Showing {filteredProperties.length} of {properties?.length || 0} properties\n                </p>\n              </motion.div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {filteredProperties.map((property, index) => (\n                  <PropertyCard \n                    key={property.id} \n                    property={property} \n                    index={index}\n                    showAvailability={checkInDate && checkOutDate ? true : false}\n                    isAvailable={true} // For now, assume available if dates are selected - can be enhanced with real availability data\n                    checkInDate={checkInDate}\n                    checkOutDate={checkOutDate}\n                  />\n                ))}\n              </div>\n            </>\n          ) : (\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              className=\"text-center py-16\"\n            >\n              <Card className=\"max-w-md mx-auto p-8\">\n                <CardContent className=\"text-center\">\n                  <MapPin className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n                  <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                    No Properties Found\n                  </h3>\n                  <p className=\"text-gray-600 mb-4\">\n                    Try adjusting your search criteria or browse all properties.\n                  </p>\n\n                  <Button\n                    onClick={() => {\n                      setSelectedCategory(\"all\");\n                    }}\n                    className=\"bg-gold-500 text-white hover:bg-gold-600\"\n                  >\n                    Clear Filters\n                  </Button>\n                </CardContent>\n              </Card>\n            </motion.div>\n          )}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Properties;\n","size_bytes":15583},"client/src/pages/property-detail.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useParams, Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious } from \"@/components/ui/carousel\";\nimport BookingCalendar from \"@/components/booking-calendar\";\nimport { ReviewsSection } from \"@/components/reviews-section\";\nimport { \n  Users, \n  Bed, \n  Bath, \n  MapPin, \n  Wifi, \n  Car, \n  Utensils,\n  ArrowLeft,\n  Calendar,\n  CheckCircle\n} from \"lucide-react\";\nimport type { Property } from \"@shared/schema\";\n\nconst PropertyDetail = () => {\n  const { id } = useParams();\n  const propertyId = parseInt(id || \"0\");\n\n  const { data: property, isLoading, error } = useQuery<Property>({\n    queryKey: [`/api/properties/${propertyId}`],\n    enabled: !!propertyId,\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen pt-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"animate-pulse\">\n            <div className=\"bg-gray-300 h-96 rounded-2xl mb-8\"></div>\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n              <div className=\"lg:col-span-2 space-y-4\">\n                <div className=\"bg-gray-300 h-8 rounded w-1/2\"></div>\n                <div className=\"bg-gray-300 h-4 rounded\"></div>\n                <div className=\"bg-gray-300 h-4 rounded w-3/4\"></div>\n              </div>\n              <div className=\"bg-gray-300 h-64 rounded-xl\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !property) {\n    return (\n      <div className=\"min-h-screen pt-20 flex items-center justify-center\">\n        <Card className=\"max-w-md mx-4\">\n          <CardContent className=\"pt-6 text-center\">\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Property Not Found</h1>\n            <p className=\"text-gray-600 mb-6\">\n              The property you're looking for doesn't exist or may have been removed.\n            </p>\n            <Link href=\"/properties\">\n              <Button className=\"bg-gold-500 text-white hover:bg-gold-600\">\n                Browse Properties\n              </Button>\n            </Link>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen pt-24\">\n      {/* Back Button */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        <Link href=\"/properties\">\n          <Button variant=\"ghost\" className=\"mb-4 hover:text-gold-500\">\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to Properties\n          </Button>\n        </Link>\n      </div>\n\n      {/* Image Gallery */}\n      <section className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"mb-8\"\n        >\n          <Carousel className=\"w-full\">\n            <CarouselContent>\n              {property.images.map((image, index) => (\n                <CarouselItem key={index}>\n                  <div className=\"relative h-64 sm:h-80 md:h-96 lg:h-[500px] rounded-2xl overflow-hidden bg-luxury-cream/10\">\n                    <img\n                      src={image}\n                      alt={`${property.name} - Image ${index + 1}`}\n                      className=\"w-full h-full object-cover transition-transform duration-500 hover:scale-105\"\n                      loading={index === 0 ? \"eager\" : \"lazy\"}\n                      onError={(e) => {\n                        console.error('Failed to load property image:', image);\n                        // Hide broken image or show placeholder\n                        e.currentTarget.style.display = 'none';\n                      }}\n                      style={{\n                        filter: \"contrast(1.05) saturate(1.1) brightness(1.02)\"\n                      }}\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/10 to-transparent opacity-0 hover:opacity-100 transition-opacity duration-300\"></div>\n                  </div>\n                </CarouselItem>\n              ))}\n            </CarouselContent>\n            <CarouselPrevious className=\"left-4\" />\n            <CarouselNext className=\"right-4\" />\n          </Carousel>\n        </motion.div>\n      </section>\n\n      {/* Property Details */}\n      <section className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-16\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Main Content */}\n          <motion.div\n            initial={{ opacity: 0, x: -30 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            className=\"lg:col-span-2\"\n          >\n            <div className=\"flex items-start justify-between mb-6\">\n              <div>\n                <h1 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-2\">\n                  {property.name}\n                </h1>\n                <div className=\"flex items-center text-gray-600 mb-4\">\n                  <MapPin className=\"w-4 h-4 mr-1\" />\n                  {property.location}\n                </div>\n              </div>\n\n            </div>\n\n            <div className=\"flex flex-wrap items-center gap-4 sm:gap-6 text-gray-600 mb-6\">\n              <div className=\"flex items-center\">\n                <Bed className=\"w-5 h-5 mr-2\" />\n                {property.bedrooms} Bedrooms\n              </div>\n              <div className=\"flex items-center\">\n                <Bath className=\"w-5 h-5 mr-2\" />\n                {property.bathrooms} Bathrooms\n              </div>\n              <div className=\"flex items-center\">\n                <Users className=\"w-5 h-5 mr-2\" />\n                Up to {property.maxGuests} Guests\n              </div>\n            </div>\n\n            <div className=\"mb-8\">\n              <h2 className=\"text-2xl font-semibold text-luxury-brown mb-6\">About This Property</h2>\n              <div className=\"space-y-6\">\n                {/* Overview */}\n                <div className=\"bg-luxury-cream/30 p-6 rounded-xl border border-luxury-gold/20\">\n                  <p className=\"text-luxury-brown leading-relaxed text-lg\">\n                    This stunning 1-bedroom apartment offers comfort and cosy vibes, perfect for couples, families or solo travellers. Enjoy high-speed Wi-Fi (800 Mbps), a fully equipped kitchen, 2 smart TV's with FREE NETFLIX, furnished balcony, queen-sized bed, and a full bathroom.\n                  </p>\n                </div>\n\n                {/* Building Features */}\n                <div>\n                  <h3 className=\"text-xl font-semibold text-luxury-brown mb-3\">Building Amenities</h3>\n                  <p className=\"text-luxury-light-brown leading-relaxed\">\n                    The building features an infinity pool with Burj Khalifa views, a modern gym, a workspace area and a kids' play area, making it an ideal retreat for all in the heart of Downtown, Dubai.\n                  </p>\n                </div>\n\n                {/* Living Spaces */}\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <div className=\"space-y-4\">\n                    <h3 className=\"text-xl font-semibold text-luxury-brown\">Living Room & Balcony</h3>\n                    <p className=\"text-luxury-light-brown leading-relaxed\">\n                      The spacious, open-plan living area is filled with natural light and features a comfortable sofa bed, a Smart TV with Netflix for entertainment, and a balcony that offers charming views of Dubai's cityscape‚Äîperfect for enjoying your morning coffee or unwinding in the evening.\n                    </p>\n                  </div>\n\n                  <div className=\"space-y-4\">\n                    <h3 className=\"text-xl font-semibold text-luxury-brown\">Bedroom</h3>\n                    <p className=\"text-luxury-light-brown leading-relaxed\">\n                      Relax in the cozy bedroom, featuring a queen-size bed, premium linens, and a Smart TV, ideal for enjoying Netflix nights.\n                    </p>\n                  </div>\n                </div>\n\n                {/* Kitchen */}\n                <div>\n                  <h3 className=\"text-xl font-semibold text-luxury-brown mb-3\">Fully Equipped Kitchen</h3>\n                  <p className=\"text-luxury-light-brown leading-relaxed\">\n                    The sleek, modern kitchen is fully stocked with stainless steel appliances, including a toaster, tea and coffee station, oven, refrigerator, and washing machine, along with cleaning essentials. Enjoy meals at the dining table for four.\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"mb-8\">\n              <h2 className=\"text-2xl font-semibold text-gray-900 mb-4\">Amenities</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                {property.amenities.map((amenity, index) => (\n                  <div key={index} className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 text-gold-500 mr-3\" />\n                    <span className=\"text-gray-700\">{amenity}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Booking Calendar */}\n          <motion.div\n            initial={{ opacity: 0, x: 30 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6, delay: 0.4 }}\n            className=\"lg:col-span-1\"\n          >\n            <BookingCalendar \n              propertyId={property.id} \n              maxGuests={property.maxGuests}\n              propertyName={property.name}\n            />\n          </motion.div>\n        </div>\n\n        {/* Property Reviews Section */}\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.8, delay: 0.4 }}\n          className=\"mt-16 max-w-6xl mx-auto px-4\"\n        >\n          <ReviewsSection \n            propertyId={propertyId}\n          />\n        </motion.div>\n      </section>\n    </div>\n  );\n};\n\nexport default PropertyDetail;\n","size_bytes":10428},"client/src/pages/refund-policy.tsx":{"content":"import { motion } from \"framer-motion\";\n\nconst RefundPolicy = () => {\n  return (\n    <div className=\"min-h-screen pt-24 pb-12\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"bg-white rounded-lg shadow-lg p-4 sm:p-6 md:p-8 lg:p-12 overflow-hidden\"\n        >\n          <h1 className=\"text-2xl sm:text-3xl md:text-4xl font-bold text-luxury-brown mb-6 sm:mb-8 leading-tight break-words\">\n            Cancellation and Refund Policy\n          </h1>\n          \n          <div className=\"prose prose-sm sm:prose-base lg:prose-lg max-w-none text-luxury-brown space-y-4 sm:space-y-6 break-words overflow-wrap-anywhere\">\n            <p>\n              This Cancellation and Refund Policy applies to all bookings made with Arabian Coast Holiday Homes L.L.C. (\"we\", \"us\", \"our\") via:\n            </p>\n            \n            <ul className=\"list-disc list-inside space-y-2 mt-4\">\n              <li>Our official website (www.arabiancoastholidayhomes.com)</li>\n              <li>WhatsApp, phone, or email</li>\n              <li>In-person</li>\n              <li>Third-party platforms (e.g. Airbnb, Booking.com)</li>\n            </ul>\n            \n            <p className=\"mt-4\">\n              By confirming a reservation, the Guest agrees to the terms outlined below.\n            </p>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">1. How to Cancel a Booking</h2>\n              \n              <div className=\"mt-4\">\n                <h3 className=\"text-lg font-semibold text-luxury-brown mb-2\">A. For Direct Bookings (Website, Email, WhatsApp, Phone):</h3>\n                <p>Send a written cancellation request to info@arabiancoastholidayhomes.com, including:</p>\n                <ul className=\"list-disc list-inside space-y-2 mt-2 ml-4\">\n                  <li>Full name</li>\n                  <li>Booking reference</li>\n                  <li>The email or phone number used at time of booking</li>\n                  <li>A clear request to cancel</li>\n                </ul>\n                <div className=\"bg-blue-50 border-l-4 border-blue-500 p-4 rounded mt-4\">\n                  <p className=\"font-semibold\">Cancellation is considered received only after written confirmation from Arabian Coast Holiday Homes.</p>\n                </div>\n              </div>\n\n              <div className=\"mt-6\">\n                <h3 className=\"text-lg font-semibold text-luxury-brown mb-2\">B. For Third-Party Bookings:</h3>\n                <p>If booked via Airbnb, Booking.com, or another platform, you must cancel directly through the platform, and their cancellation policies will apply.</p>\n              </div>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">2. Standard Cancellation Terms (Direct Bookings)</h2>\n              <p>Unless otherwise agreed in writing at the time of booking:</p>\n              \n              <div className=\"mt-4 space-y-4\">\n                <div className=\"bg-green-50 border-l-4 border-green-500 p-4 rounded\">\n                  <h3 className=\"text-lg font-semibold text-green-700 mb-2\">‚úÖ Free Cancellation</h3>\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    <li>Full refund if cancelled at least 5 full days before check-in</li>\n                    <li>Transaction, processing, or bank charges (if any) are non-refundable</li>\n                  </ul>\n                </div>\n                \n                <div className=\"bg-yellow-50 border-l-4 border-yellow-500 p-4 rounded\">\n                  <h3 className=\"text-lg font-semibold text-yellow-700 mb-2\">‚ùå Late Cancellation</h3>\n                  <p>If cancelled less than 5 days before check-in, a partial or full charge may apply based on the property type, demand period, and booking terms</p>\n                </div>\n                \n                <div className=\"bg-red-50 border-l-4 border-red-500 p-4 rounded\">\n                  <h3 className=\"text-lg font-semibold text-red-700 mb-2\">üö´ No-Show</h3>\n                  <p>Bookings are non-refundable for Guests who do not show up and fail to cancel in advance</p>\n                </div>\n              </div>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">3. Refund Processing</h2>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>Approved refunds are processed within 7‚Äì14 business days to the original payment method</li>\n                <li>Transaction fees, currency conversion costs, and administrative fees are non-refundable, unless otherwise required by UAE law</li>\n                <li>Refund timelines may vary based on the bank or payment processor</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">4. Security Deposit Policy</h2>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li><strong>A refundable 2000 AED security deposit is required for all stays (cash or digital)</strong></li>\n                <li>Returned within 5 business days after check-out, subject to:\n                  <ul className=\"list-disc list-inside space-y-1 mt-2 ml-4\">\n                    <li>No property damage</li>\n                    <li>No missing items</li>\n                    <li>No violation of House Rules or Terms</li>\n                  </ul>\n                </li>\n                <li>If deductions are required, we will provide a written breakdown with supporting evidence (e.g. photos, incident report)</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">5. Operator Rights</h2>\n              <p>Arabian Coast Holiday Homes L.L.C. reserves the right to retain part or all of the booking amount or security deposit in cases including, but not limited to:</p>\n              <ul className=\"list-disc list-inside space-y-2 mt-4\">\n                <li>Late cancellation or no-show</li>\n                <li>Damage to the apartment, furniture, or appliances</li>\n                <li>Missing or stolen items</li>\n                <li>Violation of House Rules, such as:\n                  <ul className=\"list-disc list-inside space-y-1 mt-2 ml-4\">\n                    <li>Unauthorized parties or gatherings</li>\n                    <li>Smoking inside the apartment</li>\n                    <li>Bringing unapproved pets</li>\n                    <li>Excessive mess or cleaning required</li>\n                    <li>Misuse of facilities or unauthorized visitors</li>\n                  </ul>\n                </li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">6. Guest Agreement</h2>\n              <div className=\"bg-luxury-gold/10 border border-luxury-gold p-6 rounded-lg\">\n                <p className=\"font-semibold mb-4\">By completing a booking, you confirm acceptance of:</p>\n                <ul className=\"list-disc list-inside space-y-2\">\n                  <li>Our Reservation Terms & Conditions</li>\n                  <li>This Cancellation and Refund Policy</li>\n                  <li>Our House Rules (provided before or at check-in)</li>\n                  <li>Our Terms & Conditions and Privacy Policy</li>\n                </ul>\n                <p className=\"mt-4 font-semibold\">These documents together form the binding Guest Agreement.</p>\n              </div>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">7. Governing Law & Jurisdiction</h2>\n              <p>\n                This policy is governed by the laws of the United Arab Emirates. Any dispute arising from this policy shall be subject to the exclusive jurisdiction of the courts of Dubai.\n              </p>\n            </section>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default RefundPolicy;","size_bytes":8253},"client/src/pages/reviews.tsx":{"content":"import { ReviewsSection } from \"@/components/reviews-section\";\nimport { motion } from \"framer-motion\";\n\nexport default function Reviews() {\n  return (\n    <div className=\"min-h-screen pt-40 pb-16 luxury-bg\">\n      {/* Elegant background pattern */}\n      <div className=\"absolute inset-0 opacity-5\">\n        <div className=\"h-full w-full\" style={{\n          backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23D4AF37' fill-opacity='0.3'%3E%3Cpath d='M30 30c11.046 0 20-8.954 20-20S41.046-10 30-10 10 1.046 10 20s8.954 10 20 10zM10 30c11.046 0 20-8.954 20-20S21.046-10 10-10-10 1.046-10 20s8.954 10 20 10z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`,\n        }} />\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative\">\n        {/* Luxury Header Section */}\n        <motion.div \n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          className=\"text-center mb-20 mt-8\"\n        >\n          {/* Decorative element */}\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"w-24 h-px bg-gradient-to-r from-transparent via-luxury-gold to-transparent\"></div>\n            <div className=\"mx-4 w-2 h-2 bg-luxury-gold rounded-full\"></div>\n            <div className=\"w-24 h-px bg-gradient-to-r from-luxury-gold via-transparent to-transparent\"></div>\n          </div>\n\n          <h1 className=\"text-4xl md:text-5xl lg:text-6xl luxury-heading text-luxury-brown mb-6 leading-tight px-4\">\n            What guests say about <span className=\"luxury-accent italic luxury-serif\">us</span>\n          </h1>\n          \n          <p className=\"text-xl luxury-text max-w-3xl mx-auto leading-relaxed luxury-serif\">\n            Discover why our guests choose Arabian Coast Holiday Homes for their luxury Dubai experience\n          </p>\n\n          {/* Decorative bottom element */}\n          <div className=\"flex justify-center mt-8\">\n            <div className=\"w-16 h-px bg-gradient-to-r from-transparent via-luxury-dark-gold to-transparent\"></div>\n          </div>\n        </motion.div>\n\n        {/* Enhanced Reviews Section */}\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, delay: 0.2 }}\n        >\n          <ReviewsSection showTitle={false} />\n        </motion.div>\n\n        {/* Luxury Bottom Accent */}\n        <motion.div \n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 1, delay: 0.5 }}\n          className=\"text-center mt-20 pt-16 border-t border-luxury-gold/20\"\n        >\n          <div className=\"flex justify-center items-center space-x-4\">\n            <div className=\"w-8 h-px bg-luxury-gold\"></div>\n            <div className=\"w-3 h-3 bg-luxury-gold rounded-full animate-pulse\"></div>\n            <div className=\"w-8 h-px bg-luxury-gold\"></div>\n          </div>\n          <p className=\"mt-6 text-luxury-light-brown luxury-serif italic text-lg\">\n            Experience luxury beyond expectations\n          </p>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3260},"client/src/pages/services.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { \n  ConciergeBell, \n  Car, \n  Utensils, \n  Ship, \n  Bath, \n  Shield,\n  Clock,\n  Plane,\n  Camera,\n  MapPin,\n  Users,\n  Wine\n} from \"lucide-react\";\n\nconst Services = () => {\n  const mainServices = [\n    {\n      icon: ConciergeBell,\n      title: \"24/7 ConciergeBell Service\",\n      description: \"Our dedicated concierge team is available around the clock to assist with any request, from restaurant reservations to activity bookings and special arrangements.\",\n      features: [\n        \"Restaurant reservations at top venues\",\n        \"Activity and excursion bookings\",\n        \"Special event planning\",\n        \"Personal shopping assistance\",\n        \"Local recommendations and guides\"\n      ]\n    },\n    {\n      icon: Car,\n      title: \"Luxury Transportation\",\n      description: \"Travel in style with our premium transportation services, including airport transfers, luxury car rentals, and private chauffeur services.\",\n      features: [\n        \"Airport transfers in luxury vehicles\",\n        \"Private chauffeur services\",\n        \"Luxury car rentals\",\n        \"Helicopter transfers\",\n        \"Private yacht charters\"\n      ]\n    },\n    {\n      icon: Utensils,\n      title: \"Private Chef Services\",\n      description: \"Enjoy world-class cuisine prepared by our professional chefs in the comfort of your villa, featuring local and international specialties.\",\n      features: [\n        \"Personal chef for all meals\",\n        \"Custom menu planning\",\n        \"Special dietary accommodations\",\n        \"Wine pairing services\",\n        \"Cooking classes available\"\n      ]\n    },\n    {\n      icon: Ship,\n      title: \"Yacht & Water Sports\",\n      description: \"Explore the pristine Arabian waters with our exclusive yacht charters and comprehensive water sports activities.\",\n      features: [\n        \"Private yacht charters\",\n        \"Deep sea fishing trips\",\n        \"Snorkeling and diving excursions\",\n        \"Jet ski rentals\",\n        \"Sunset cruise experiences\"\n      ]\n    },\n    {\n      icon: Bath,\n      title: \"Wellness & Bath\",\n      description: \"Rejuvenate your mind, body, and soul with our in-villa spa services and wellness programs designed for ultimate relaxation.\",\n      features: [\n        \"In-villa massage treatments\",\n        \"Yoga and meditation sessions\",\n        \"Personal trainer services\",\n        \"Beauty and grooming services\",\n        \"Wellness consultation\"\n      ]\n    },\n    {\n      icon: Shield,\n      title: \"Security & Privacy\",\n      description: \"Enjoy complete peace of mind with our discreet security services and privacy protection measures for high-profile guests.\",\n      features: [\n        \"24/7 security personnel\",\n        \"Privacy protection protocols\",\n        \"Secure transportation\",\n        \"Background-checked staff\",\n        \"Confidentiality agreements\"\n      ]\n    }\n  ];\n\n  const additionalServices = [\n    {\n      icon: Plane,\n      title: \"Private Jet Services\",\n      description: \"Seamless travel arrangements with private jet charters and helicopter transfers.\"\n    },\n    {\n      icon: Camera,\n      title: \"Photography Services\",\n      description: \"Professional photographers to capture your special moments and vacation memories.\"\n    },\n    {\n      icon: MapPin,\n      title: \"Local Experiences\",\n      description: \"Curated cultural experiences and exclusive access to local attractions and events.\"\n    },\n    {\n      icon: Users,\n      title: \"Event Planning\",\n      description: \"Full-service event planning for celebrations, corporate retreats, and special occasions.\"\n    },\n    {\n      icon: Wine,\n      title: \"Sommelier Services\",\n      description: \"Expert wine selection and tasting experiences with certified sommeliers.\"\n    },\n    {\n      icon: Clock,\n      title: \"Personal Assistant\",\n      description: \"Dedicated personal assistant services for business travelers and extended stays.\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\">\n      {/* Hero Section */}\n      <section className=\"bg-gray-50 py-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center\"\n          >\n            <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\n              Our <span className=\"text-gold-500\">Services</span>\n            </h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              We provide comprehensive luxury services to ensure your vacation is\n              seamless, extraordinary, and tailored to your every need.\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Main Services */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-16\"\n          >\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\n              Premium <span className=\"text-gold-500\">Services</span>\n            </h2>\n            <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n              Our flagship services designed to elevate your vacation experience\n              to unparalleled levels of luxury and comfort.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {mainServices.map((service, index) => {\n              const IconComponent = service.icon;\n              return (\n                <motion.div\n                  key={service.title}\n                  initial={{ opacity: 0, y: 30 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  viewport={{ once: true }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                >\n                  <Card className=\"p-8 h-full border-0 shadow-lg hover:shadow-xl transition-all duration-300\">\n                    <CardContent className=\"p-0\">\n                      <div className=\"flex items-start space-x-4 mb-6\">\n                        <div className=\"bg-gold-100 p-4 rounded-lg\">\n                          <IconComponent className=\"w-8 h-8 text-gold-500\" />\n                        </div>\n                        <div>\n                          <h3 className=\"text-2xl font-semibold text-gray-900 mb-2\">\n                            {service.title}\n                          </h3>\n                          <p className=\"text-gray-600 leading-relaxed\">\n                            {service.description}\n                          </p>\n                        </div>\n                      </div>\n                      \n                      <div className=\"space-y-2\">\n                        {service.features.map((feature, featureIndex) => (\n                          <div key={featureIndex} className=\"flex items-center\">\n                            <div className=\"w-2 h-2 bg-gold-500 rounded-full mr-3\"></div>\n                            <span className=\"text-gray-700\">{feature}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Additional Services */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-16\"\n          >\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\n              Additional <span className=\"text-gold-500\">Services</span>\n            </h2>\n            <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n              Specialized services to enhance your stay and create truly\n              memorable experiences tailored to your preferences.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {additionalServices.map((service, index) => {\n              const IconComponent = service.icon;\n              return (\n                <motion.div\n                  key={service.title}\n                  initial={{ opacity: 0, y: 30 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  viewport={{ once: true }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                >\n                  <Card className=\"p-6 h-full border-0 shadow-lg hover:shadow-xl transition-all duration-300 text-center\">\n                    <CardContent className=\"p-0\">\n                      <div className=\"bg-gold-100 p-4 rounded-lg inline-block mb-4\">\n                        <IconComponent className=\"w-6 h-6 text-gold-500\" />\n                      </div>\n                      <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">\n                        {service.title}\n                      </h3>\n                      <p className=\"text-gray-600 leading-relaxed\">\n                        {service.description}\n                      </p>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Service Process */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-16\"\n          >\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\n              How It <span className=\"text-gold-500\">Works</span>\n            </h2>\n            <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n              Our seamless service process ensures every detail is perfectly\n              orchestrated for your comfort and satisfaction.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            {[\n              {\n                step: \"1\",\n                title: \"Consultation\",\n                description: \"We discuss your preferences and requirements to customize your experience.\"\n              },\n              {\n                step: \"2\",\n                title: \"Planning\",\n                description: \"Our team creates a detailed plan tailored to your needs and desires.\"\n              },\n              {\n                step: \"3\",\n                title: \"Coordination\",\n                description: \"We handle all arrangements and coordinate with service providers.\"\n              },\n              {\n                step: \"4\",\n                title: \"Execution\",\n                description: \"Enjoy flawless service delivery throughout your entire stay.\"\n              }\n            ].map((process, index) => (\n              <motion.div\n                key={process.step}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                className=\"text-center\"\n              >\n                <div className=\"bg-gold-500 text-white w-12 h-12 rounded-full flex items-center justify-center text-xl font-bold mx-auto mb-4\">\n                  {process.step}\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">\n                  {process.title}\n                </h3>\n                <p className=\"text-gray-600 leading-relaxed\">\n                  {process.description}\n                </p>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-6\">\n              Ready to Experience <span className=\"text-gold-500\">Luxury</span>?\n            </h2>\n            <p className=\"text-xl text-gray-600 mb-8 max-w-2xl mx-auto\">\n              Let us create an extraordinary vacation experience tailored specifically\n              to your preferences and desires. Contact us today to begin planning.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button\n                  size=\"lg\"\n                  className=\"bg-gold-500 text-white hover:bg-gold-600 transition-all duration-300 transform hover:scale-105 rounded-full px-8 py-4 text-lg font-semibold\"\n                >\n                  Get Started\n                </Button>\n              </Link>\n              <Link href=\"/properties\">\n                <Button\n                  variant=\"outline\"\n                  size=\"lg\"\n                  className=\"border-2 border-gold-500 text-gold-500 hover:bg-gold-500 hover:text-white transition-all duration-300 rounded-full px-8 py-4 text-lg font-semibold\"\n                >\n                  Browse Properties\n                </Button>\n              </Link>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Services;\n","size_bytes":14157},"client/src/pages/terms.tsx":{"content":"import { motion } from \"framer-motion\";\n\nconst Terms = () => {\n  return (\n    <div className=\"min-h-screen pt-24 pb-12\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"bg-white rounded-lg shadow-lg p-4 sm:p-6 md:p-8 lg:p-12 overflow-hidden\"\n        >\n          <h1 className=\"text-2xl sm:text-3xl md:text-4xl font-bold text-luxury-brown mb-6 sm:mb-8 leading-tight break-words\">\n            Terms and Conditions\n          </h1>\n          \n          <div className=\"prose prose-sm sm:prose-base lg:prose-lg max-w-none text-luxury-brown space-y-4 sm:space-y-6 break-words overflow-wrap-anywhere\">\n            <p>\n              Welcome to Arabian Coast Holiday Homes L.L.C. (\"we\", \"us\", \"our\"). These Terms and Conditions govern all direct bookings and use of our website [www.arabiancoastholidayhomes.com], as well as bookings made via phone, email, WhatsApp, or social media.\n            </p>\n            \n            <p>\n              By making a booking or accessing our website, you agree to comply with these Terms. If you do not agree, please do not use our website or services.\n            </p>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">1. Company Information</h2>\n              <ul className=\"list-none space-y-2\">\n                <li><strong>Company Name:</strong> Arabian Coast Holiday Homes L.L.C.</li>\n                <li><strong>Trade License Number:</strong> 1453578</li>\n                <li><strong>Regulated by:</strong> Department of Economy and Tourism ‚Äì Dubai</li>\n                <li><strong>Email:</strong> info@arabiancoastholidayhomes.com</li>\n                <li><strong>Website:</strong> www.arabiancoastholidayhomes.com</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">2. Scope of Terms</h2>\n              <p>These Terms apply to all direct bookings made through:</p>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>Our website</li>\n                <li>Phone</li>\n                <li>WhatsApp</li>\n                <li>Email</li>\n                <li>Social media platforms</li>\n              </ul>\n              <p>They also apply to all guests, regardless of the booking platform.</p>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">3. Use of the Website</h2>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>You must be at least 18 years old to use our services.</li>\n                <li>You agree to use the website only for lawful purposes.</li>\n                <li>You may not attempt to access any unauthorized areas or systems.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">4. Intellectual Property</h2>\n              <p>\n                All website content, including text, logos, images, and designs, is the intellectual property of Arabian Coast Holiday Homes L.L.C.\n              </p>\n              <p><strong>You may not:</strong></p>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>Copy, reproduce, or redistribute our content.</li>\n                <li>Use our branding or materials without written permission.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">5. Booking Terms</h2>\n              <p>By confirming a booking, you agree to:</p>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>Our Reservation Terms and House Rules (provided during booking confirmation or check-in).</li>\n                <li>Provide accurate guest and contact information.</li>\n                <li>Ensure all guests and visitors are pre-registered at least 24 hours before arrival.</li>\n                <li>Present a valid passport or Emirates ID to the building concierge on arrival for DET compliance.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">6. Payments & Security Deposit</h2>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>Full payment is required prior to check-in, unless agreed otherwise in writing.</li>\n                <li>A 2000 AED refundable security deposit is required per booking.</li>\n                <li>The deposit will be returned within 5 business days of checkout, subject to a satisfactory inspection.</li>\n                <li>Payments are processed securely; we do not store or share card details.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">7. Cancellations & Refunds</h2>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>Our cancellation and refund policy is included in the Reservation Terms provided at booking.</li>\n                <li>Refunds are processed in accordance with UAE Consumer Protection Law.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">8. Guest Conduct</h2>\n              <p><strong>All guests must:</strong></p>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>Follow the House Rules provided at or before check-in.</li>\n                <li>Avoid excessive noise between 10:00 PM and 7:00 AM.</li>\n                <li>Not host parties or engage in illegal activity on the premises.</li>\n                <li>Not exceed the registered guest/visitor limit without approval.</li>\n              </ul>\n              <p className=\"mt-4\">\n                We reserve the right to evict guests without refund for breaches of these terms.\n              </p>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">9. Damage & Liability</h2>\n              <p>Guests are liable for any damage or loss caused to the property or contents.</p>\n              <p>If the cost of repair/replacement exceeds the security deposit, the guest must pay the balance within 7 days.</p>\n              <p><strong>Arabian Coast Holiday Homes is not responsible for:</strong></p>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>Theft, loss, or damage to personal belongings.</li>\n                <li>External disturbances such as construction, utility outages, or events beyond our control.</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">10. Force Majeure</h2>\n              <p>We are not liable for delays, disruptions, or cancellations due to events beyond our control, including:</p>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>Natural disasters</li>\n                <li>Acts of God</li>\n                <li>Pandemics</li>\n                <li>Government restrictions</li>\n                <li>Civil unrest or similar events</li>\n              </ul>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">11. Privacy & Data Use</h2>\n              <p>\n                Your personal data is handled in accordance with Federal Decree-Law No. 45 of 2021 on the Protection of Personal Data.\n              </p>\n              <p>\n                Guest ID details may be shared securely with DET or other regulatory bodies as required by law.\n              </p>\n              <p>\n                Please review our [Privacy Policy] for full details.\n              </p>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">12. Third-Party Links</h2>\n              <p>\n                Our website may link to external websites for convenience. We are not responsible for their content, practices, or data handling.\n              </p>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">13. Changes to Terms</h2>\n              <p>\n                We may update these Terms and Conditions at any time. Updates will be published on our website. Continued use of our services indicates your acceptance of the changes.\n              </p>\n            </section>\n\n            <section>\n              <h2 className=\"text-2xl font-semibold text-luxury-gold mb-4\">14. Governing Law & Jurisdiction</h2>\n              <p>\n                These Terms are governed by the laws of the United Arab Emirates. Any disputes will be resolved in the courts of Dubai.\n              </p>\n            </section>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default Terms;","size_bytes":9198},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}